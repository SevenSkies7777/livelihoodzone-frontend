{"version":3,"sources":["webpack:///src/@fuse/components/tabbed-wrapper/components/nested-list/nested-list.module.ts","webpack:///src/@fuse/components/tabbed-wrapper/components/nested-list/constants/grid-configs.constant.ts","webpack:///src/@fuse/components/tabbed-wrapper/components/nested-list/nested-crud-review-dialog/nested-crud-review-dialog.component.html","webpack:///src/@fuse/components/tabbed-wrapper/components/nested-list/nested-crud-review-dialog/nested-crud-review-dialog.component.ts","webpack:///src/@fuse/components/tabbed-wrapper/components/nested-list/nested-main-dialog/nested-main-dialog.component.ts","webpack:///src/@fuse/components/tabbed-wrapper/components/nested-list/nested-main-dialog/nested-main-dialog.component.html","webpack:///src/@fuse/components/tabbed-wrapper/components/nested-list/nested-totals-summary/nested-totals-summary.component.html","webpack:///src/@fuse/components/tabbed-wrapper/components/nested-list/nested-totals-summary/nested-totals-summary.component.ts","webpack:///src/@fuse/components/tabbed-wrapper/components/nested-list/nested-list.component.html","webpack:///src/@fuse/components/tabbed-wrapper/components/nested-list/nested-list.component.ts","webpack:///src/@fuse/components/page-container/page-container.component.ts","webpack:///node_modules/@angular/cdk/fesm2015/accordion.js","webpack:///node_modules/@angular/material/fesm2015/expansion.js"],"names":["NestedListModule","gridConfigs","key","configs","modelKey","content","listParams","gridConf","getStore","editStore","topActions","btnText","status","icon","action","conf","context","store","rows","type","fieldType","primaryField","headers","title","oderable","searchable","actions","disableStatus","modalConf","titleKey","class","width","NestedCrudReviewDialog","_formBuilder","_dialogRef","_dataLayer","data","dialogActions","approveApplication","this","getUserOrganization","loading","commentForm","group","comment","required","adjustedAmountForm","adjustedAmount","controls","transObj","feedback","update","item","id","value","organization","subscribe","resp","console","log","closeDialog","openDynamicSnackBar","succMsg","err","errMsg","frmObj","succStr","errStr","ratObj","ratFeedback","submitTransition","appObj","appFeedback","rejFeedback","rejObj","Error","frm","valid","transitionActions","close","JSON","parse","localStorage","getItem","get","model","formInit","validationKey","activity","setConfigs","NesteMainDialogComponent","submitted","org_budget","budget","orgId","create","undefined","receiveModel","NestedTotalsSummaryComponent","current_org_id","changes","has","firstChange","refreshItem","NestedListComponent","_route","_dialog","steps","onNavigate","selectedIndexBinding","list","tabConfigs","actActions","tabsList","label","emit","open","afterClosed","result","isObject","fetchList","selectedAct","refreshSelected","opts","active","map","act","tab","cmptParams","member_null","budget_activity","asyncTabs","Observable","observer","setTimeout","next","orgType","text","iconClass","bpType","filter","orgInd","indexOf","statusInd","currInd","oldInd","find","loadTabs","loadActActions","actId","length","isUndefined","selectActivity","activityId","params","itemId","setSelected","queryParams","current","parseInt","ind","findIndex","count","openDialog","PageContainerComponent","nextId","CDK_ACCORDION","CdkAccordion","_stateChanges","Subject","_openCloseAllActions","_multi","multi","_openCloseAll","complete","expanded","ɵfac","t","ɵdir","selectors","inputs","exportAs","features","provide","useExisting","nextId$1","CdkAccordionItem","accordion","_changeDetectorRef","_expansionDispatcher","_openCloseAllSubscription","Subscription","EMPTY","closed","opened","destroyed","expandedChange","_expanded","_disabled","_removeUniqueSelectionListener","listen","accordionId","_subscribeToOpenCloseAllActions","notify","markForCheck","disabled","unsubscribe","outputs","useValue","CdkAccordionModule","ɵmod","ɵinj","factory","_c0","MatExpansionPanel_ng_template_5_Template","rf","ctx","_c1","_c2","MatExpansionPanelHeader_span_4_Template","ctx_r0","_getExpandedState","_c3","_c4","MAT_ACCORDION","matExpansionAnimations","indicatorRotate","transform","bodyExpansion","height","visibility","MatExpansionPanelContent","_template","uniqueId","MAT_EXPANSION_PANEL_DEFAULT_OPTIONS","MatExpansionPanel","_uniqueSelectionDispatcher","_viewContainerRef","_document","_animationMode","defaultOptions","super","_hideToggle","afterExpand","afterCollapse","_inputChanges","_headerId","_bodyAnimationDone","pipe","distinctUntilChanged","x","y","fromState","toState","event","hideToggle","_togglePosition","togglePosition","displayMode","_lazyContent","startWith","_portal","take","ngOnDestroy","_body","focusedElement","activeElement","bodyElement","nativeElement","contains","ɵcmp","contentQueries","dirIndex","_t","first","viewQuery","hostAttrs","hostVars","hostBindings","_hasSpacing","ngContentSelectors","decls","vars","consts","template","$event","directives","styles","encapsulation","animation","changeDetection","MatExpansionPanelHeader","panel","_element","_focusMonitor","_parentChangeSubscription","accordionHideToggleChange","merge","_containsFocus","focusVia","expandedHeight","collapsedHeight","toggle","isExpanded","_isExpanded","keyCode","preventDefault","_toggle","_handleHeaderKeydown","origin","options","monitor","_handleHeaderFocus","stopMonitoring","_keydown","_getPanelId","_getHeaderHeight","_getTogglePosition","_showToggle","MatExpansionPanelDescription","MatExpansionPanelTitle","MatAccordion","arguments","_ownHeaders","show","_headers","reset","header","notifyOnChanges","_keyManager","withWrap","withHomeAndEnd","onKeydown","updateActiveItem","ɵMatAccordion_BaseFactory","MatExpansionModule","imports"],"mappings":"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","file":"x","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule }  from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatListModule } from '@angular/material/list';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n\nimport { FusePipesModule } from '@fuse/pipes/pipes.module';\nimport { FuseSharedModule } from '@fuse/shared.module';\n\nimport { HttpModule } from 'app/services/http/http.module';\nimport { DynamicTableModule } from '@fuse/components/dynamic-table/dynamic-table.module';\nimport { DynamicFormModule } from '@fuse/components/dynamic-form/dynamic-form.module';\n\nimport { NestedListComponent } from './nested-list.component';\nimport { NesteMainDialogComponent } from './nested-main-dialog/nested-main-dialog.component';\nimport { \n    NestedTotalsSummaryComponent \n} from './nested-totals-summary/nested-totals-summary.component';\nimport { NestedCrudReviewDialog } from './nested-crud-review-dialog/nested-crud-review-dialog.component';\n\n@NgModule({\n    imports: [\n        HttpModule,\n        RouterModule,\n        CommonModule,\n        MatIconModule,\n        MatTabsModule,\n        MatCardModule,\n        MatListModule,\n        MatMenuModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatCheckboxModule,\n        FusePipesModule,\n        MatSnackBarModule,\n        DynamicFormModule,\n        DynamicTableModule,\n        MatExpansionModule,\n        FormsModule,\n        FuseSharedModule,\n        ReactiveFormsModule,\n        MatProgressSpinnerModule,\n    ],\n    declarations: [\n        NestedListComponent,\n        NestedCrudReviewDialog,\n        NesteMainDialogComponent,\n        NestedTotalsSummaryComponent,\n    ],\n    exports: [\n        NestedListComponent,\n        NestedCrudReviewDialog,\n        NesteMainDialogComponent,\n        NestedTotalsSummaryComponent,\n    ],\n    entryComponents: [\n        NesteMainDialogComponent,\n        NestedCrudReviewDialog,\n    ],\n    providers: []\n})\n\nexport class NestedListModule {\n\n}","export const gridConfigs = [\n    {\n        key: 'budget-items',\n        configs: {\n            modelKey: 'budget_activity',\n            content: 'grid',\n            listParams: { 'member_null': true },\n            gridConf: {\n                getStore: 'organization-budget-activity-items',\n                editStore: 'organization-budget-activity-items'\n            },\n            topActions: [\n                {\n                    btnText: 'ADD ITEM',\n                    status: 'info',\n                    icon: 'true',\n                    action: 'inline',\n                    conf: {\n                        context: 'ITEM',\n                        store: 'organization-budget-activity-items',\n                        btnText: 'SAVE'\n                    }\n                }\n            ],\n            rows: [\n                { \n                    key: 'item', \n                    type: 'compact-line',\n                    context: 'billable-item',\n                    fieldType: 'nested_string',\n                    primaryField: 'item_data.name', \n                },\n                { \n                    key: 'item', \n                    type: 'compact-line',\n                    context: 'billable-item',\n                    fieldType: 'nested_status_total',\n                    primaryField: 'item_data.name', \n                },\n                { \n                    key: 'item', \n                    type: 'compact-line',\n                    context: 'billable-item',\n                    fieldType: 'nested_totals',\n                    primaryField: 'item_data.name', \n                },\n            ],\n            headers: [\n                { title: 'Item' },\n                { title: 'Applied Total' },\n                { title: 'Approved Totals' },\n                { title: 'Actions', oderable: false, searchable: false },\n            ],\n            actions: [\n                {\n                    btnText: 'Edit',\n                    status: 'info',\n                    icon: 'edit',\n                    disableStatus: 'FINISHED',\n                    action: 'inline',\n                    modalConf: {\n                        store: 'organization-budget-activity-items',\n                        titleKey: 'item',\n                        context: 'Billable Item',\n                        btnText: 'SAVE'\n                    }\n                },\n                {\n                    btnText: 'Rationalize',\n                    status: 'draft',\n                    icon: 'compare_arrows',\n                    disableStatus: 'FINISHED',\n                    class: 'text-success',\n                    action: 'modal',\n                    modalConf: {\n                        store: 'organization-budget-activity-items',\n                        titleKey: 'item',\n                        context: 'rationalize',\n                        btnText: 'SAVE',\n                        width: '50%',\n                    }\n                },\n                {\n                    btnText: 'Approve',\n                    status: 'rationalized',\n                    icon: 'check',\n                    class: 'text-success',\n                    disableStatus: 'FINISHED',\n                    action: 'modal',\n                    modalConf: {\n                        store: 'organization-budget-activity-items',\n                        titleKey: 'item',\n                        context: 'approve',\n                        btnText: 'SAVE',\n                        width: '50%',\n                    }\n                },\n                {\n                    btnText: 'Reject',\n                    status: 'rationalize',\n                    icon: 'close',\n                    class: 'text-danger',\n                    disableStatus: 'FINISHED',\n                    action: 'modal',\n                    modalConf: {\n                        store: 'organization-budget-activity-items',\n                        titleKey: 'item',\n                        context: 'reject',\n                        btnText: 'SAVE',\n                        width: '50%',\n                    }\n                },\n            ]\n        },\n    },\n    {\n        key: 'budget-attendees',\n        configs: {\n            modelKey: 'budget_activity',\n            listParams: { 'member_null': false },\n            gridConf: {\n                getStore: 'organization-budget-activity-attendees',\n                editStore: 'organization-budget-activity-attendees'\n            },\n            topActions: [\n                {\n                    btnText: 'ADD ATTENDEE',\n                    status: 'info',\n                    icon: 'true',\n                    action: 'inline',\n                    conf: {\n                        context: 'ATTENDEE',\n                        store: 'organization-budget-activity-attendees',\n                        btnText: 'SAVE'\n                    }\n                }\n            ],\n            rows: [\n                { \n                    key: 'item', \n                    type: 'compact-line',\n                    context: 'attendees',\n                    fieldType: 'nested_string',\n                    primaryField: 'item_data.name', \n                },\n                { \n                    key: 'item', \n                    type: 'compact-line',\n                    context: 'billable-item',\n                    fieldType: 'nested_status_total',\n                    primaryField: 'item_data.name', \n                },\n                { \n                    key: 'item', \n                    type: 'compact-line',\n                    context: 'billable-item',\n                    fieldType: 'nested_totals',\n                    primaryField: 'item_data.name', \n                },\n            ],\n            headers: [\n                { title: 'Item & Member Details' },\n                { title: 'Applied Totals' },\n                { title: 'Approved Totals' },\n                { title: 'Actions', oderable: false, searchable: false },\n            ],\n            actions: [\n                {\n                    btnText: 'Edit',\n                    status: 'info',\n                    icon: 'edit',\n                    disableStatus: 'FINISHED',\n                    action: 'inline',\n                    modalConf: {\n                        store: 'organization-budget-activity-attendees',\n                        titleKey: 'item',\n                        context: 'Attendee',\n                        btnText: 'SAVE'\n                    }\n                },\n                {\n                    btnText: 'Rationalize',\n                    status: 'draft',\n                    icon: 'compare_arrows',\n                    disableStatus: 'FINISHED',\n                    class: 'text-success',\n                    action: 'modal',\n                    modalConf: {\n                        store: 'organization-budget-activity-attendees',\n                        titleKey: 'item',\n                        context: 'rationalize',\n                        btnText: 'SAVE',\n                        width: '50%',\n                    }\n                },\n                {\n                    btnText: 'Approve',\n                    status: 'rationalized',\n                    icon: 'check',\n                    class: 'text-success',\n                    disableStatus: 'FINISHED',\n                    action: 'modal',\n                    modalConf: {\n                        store: 'organization-budget-activity-attendees',\n                        titleKey: 'item',\n                        context: 'approve',\n                        btnText: 'SAVE',\n                        width: '50%',\n                    }\n                },\n                {\n                    btnText: 'Reject',\n                    status: 'rationalize',\n                    icon: 'close',\n                    class: 'text-danger',\n                    disableStatus: 'FINISHED',\n                    action: 'modal',\n                    modalConf: {\n                        store: 'organization-budget-activity-attendees',\n                        titleKey: 'item',\n                        context: 'reject',\n                        btnText: 'SAVE',\n                        width: '50%',\n                    }\n                },\n            ]\n        }\n    },\n    {\n        key: 'budget-allowances',\n        configs: {\n            modelKey: 'budget_activity',\n            listParams: { 'member_null': false },\n            gridConf: {\n                getStore: 'organization-budget-activity-allowances',\n                editStore: 'organization-budget-activity-allowances'\n            },\n            topActions: [\n                {\n                    btnText: 'ADD ALLOWANCE',\n                    status: 'info',\n                    icon: 'true',\n                    action: 'inline',\n                    conf: {\n                        context: 'ALLOWANCE',\n                        store: 'organization-budget-activity-allowances',\n                        btnText: 'SAVE'\n                    }\n                }\n            ],\n            rows: [\n                { \n                    key: 'item', \n                    type: 'compact-line',\n                    context: 'allowances',\n                    fieldType: 'nested_string',\n                    primaryField: 'item_data.name', \n                },\n                { \n                    key: 'item', \n                    type: 'compact-line',\n                    context: 'billable-item',\n                    fieldType: 'nested_status_total',\n                    primaryField: 'item_data.name', \n                },\n                { \n                    key: 'item', \n                    type: 'compact-line',\n                    context: 'billable-item',\n                    fieldType: 'nested_totals',\n                    primaryField: 'item_data.name', \n                },\n            ],\n            headers: [\n                { title: 'Allowance' },\n                { title: 'Applied Total' },\n                { title: 'Approved Totals' },\n                { title: 'Actions', oderable: false, searchable: false },\n            ],\n            actions: [\n                {\n                    btnText: 'Edit',\n                    status: 'info',\n                    icon: 'edit',\n                    disableStatus: 'FINISHED',\n                    action: 'inline',\n                    modalConf: {\n                        store: 'organization-budget-activity-allowances',\n                        titleKey: 'allowance',\n                        context: 'Allowance',\n                        btnText: 'SAVE'\n                    }\n                },\n                {\n                    btnText: 'Rationalize',\n                    status: 'draft',\n                    icon: 'compare_arrows',\n                    disableStatus: 'FINISHED',\n                    class: 'text-success',\n                    action: 'modal',\n                    modalConf: {\n                        store: 'organization-budget-activity-allowances',\n                        titleKey: 'item',\n                        context: 'rationalize',\n                        btnText: 'SAVE',\n                        width: '50%',\n                    }\n                },\n                {\n                    btnText: 'Approve',\n                    status: 'rationalized',\n                    icon: 'check',\n                    class: 'text-success',\n                    disableStatus: 'FINISHED',\n                    action: 'modal',\n                    modalConf: {\n                        store: 'organization-budget-activity-allowances',\n                        titleKey: 'item',\n                        context: 'approve',\n                        btnText: 'SAVE',\n                        width: '50%',\n                    }\n                },\n                {\n                    btnText: 'Reject',\n                    status: 'rationalize',\n                    icon: 'close',\n                    class: 'text-danger',\n                    disableStatus: 'FINISHED',\n                    action: 'modal',\n                    modalConf: {\n                        store: 'organization-budget-activity-allowances',\n                        titleKey: 'item',\n                        context: 'reject',\n                        btnText: 'SAVE',\n                        width: '50%',\n                    }\n                },\n            ]\n        },\n    },\n]; ","<div class=\"\">\n    <div class=\"d-flex align-items-center mb-n3\">\n        <div class=\"flex-fill\">\n            <h4 mat-dialog-title class=\"pb-2 font\">\n                {{ configs?.title }}\n            </h4>\n        </div>\n    </div>\n    <div mat-dialog-content class=\"text-muted fullwidth\"\n    *ngIf=\"configs?.type === 'form'\">\n        <dynamic-form \n        btnClass=\"tiny mr-3\" [submitted]=\"submitted\"\n        [baseCancel]=\"true\" btnStatus=\"primary\"\n        store=\"organization-budget-activities\" btnText=\"SAVE\"\n        (cancelFxn)=\"closeDialog()\" [model]=\"model\"\n        (submitModel)=\"receiveModel($event)\">\n        </dynamic-form>\n    </div>\n    <div mat-dialog-content class=\"text-muted fullwidth\"\n    *ngIf=\"configs?.type === 'dialog'\">\n        <div>{{ configs?.description }}</div>\n        <div *ngIf=\"context === 'rationalize'\">\n            <div>\n                <div>\n                    <div>\n                        <p>\n                            Kindly confirm that you would like to rationalize {{ item?.title }}\n                        </p>\n                        <div class=\"mb-3\">\n                            <div class=\"d-flex\">\n                                <div class=\"text-muted pr-3\">\n                                    Applied Total:\n                                </div>\n                                <div class=\"font-weight-600\">\n                                    {{ item?.total | currency: 'Kshs '}}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <p>\n                        Ensure that you have rationalized each activity line item, \n                        otherwise the applied item amount will\n                        be used as the rationalized amount. If you would \n                        like to proceed click the <b>SUBMIT</b> button below.\n                    </p>\n                </div>\n            </div>\n        </div>\n        <div *ngIf=\"context === 'approve'\">\n            <div>\n                <div>\n                    <p>\n                        Kindly confirm that you would like to approve {{ item?.title }}\n                    </p>\n                    <div class=\"mb-3\">\n                        <div class=\"d-flex\">\n                            <div class=\"text-muted pr-3\">\n                                Applied Total:\n                            </div>\n                            <div class=\"font-weight-600\">\n                                {{ item?.total | currency: 'Kshs '}}\n                            </div>\n                        </div>\n                        <div class=\"d-flex\">\n                            <div class=\"text-muted pr-16\">\n                                Rationalized:\n                            </div>\n                            <div class=\"font-weight-600\">\n                                {{ item?.rationalized_total | currency: 'Kshs '}}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <p>\n                    Ensure you have approved each activity line item\n                    otherwise the rationalized amount will be used as the approved amount. \n                    If you would stil like to proceed click the <b>SUBMIT</b> button below:\n                </p>\n            </div>\n        </div>\n    </div>\n    <div mat-dialog-actions class=\"pt-5 pb-20 d-flex justify-content-end\"\n    *ngIf=\"configs?.type === 'dialog'\">\n        <button mat-button mat-dialog-close\n        (click)=\"closeDialog()\">CLOSE</button>\n        <button mat-button [class.spinner]=\"loading\"\n        [disabled]=\"loading\"\n        (click)=\"transitionActions()\">\n            {{ configs?.action || 'SUBMIT' }}\n        </button>\n    </div>\n    <!-- Start of comment type section -->\n    <div mat-dialog-actions \n    *ngIf=\"configs?.type === 'comment'\">\n        <div class=\"context === 'reject'\">\n            <p>\n                Kindly confirm that you would like to reject the following\n                activity:\n            </p>\n            <div class=\"mb-3\">\n                <div class=\"d-flex\">\n                    <div class=\"text-muted pr-3\">\n                        Applied Amount:\n                    </div>\n                    <div class=\"font-weight-600\">\n                        {{ item?.total | currency: 'Kshs '}}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <form [formGroup]=\"commentForm\" name=\"frm\"\n        (ngSubmit)=\"submitForm(commentForm)\" class=\"w-100-p\">\n            <div class=\"w-100-p pt-1\">\n                <div class=\"input-wrapper fullwidth\">\n                    <mat-form-field appearance=\"outline\"\n                    color=\"primary\" class=\"pb-0 mb-0 w-100-p\">\n                        <mat-label>Enter comment*</mat-label>\n                        <textarea name=\"comment\" id=\"\" matInput\n                        cols=\"30\" rows=\"6\" formControlName=\"comment\"\n                        placeholder=\"Kindly enter a comment...\"></textarea>\n                    </mat-form-field>\n                </div>\n                <div *ngIf=\"f.comment.invalid && \n                (f.comment.touched || f.comment.dirty)\"  \n                class=\"invalid-feedback\">\n                    <div *ngIf=\"f.comment.errors.required\">\n                        Comment is required\n                    </div>\n                </div>\n            </div>\n            <div class=\"btn-container d-flex justify-content-end w-100-p\">\n                <button mat-button mat-dialog-close\n                type=\"button\" (click)=\"closeDialog()\">CLOSE</button>\n                <button mat-button type=\"submit\"\n                [class.spinner]=\"loading\" [disabled]=\"loading\">\n                    SUBMIT\n                </button>\n            </div>\n        </form>\n    </div>\n    <div class=\"py-2\"></div>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nimport { DataLayerService } from 'app/services/http/dataLayer.service';\nimport { get } from 'lodash';\n\n@Component({\n    selector: 'nested-crud-dialog',\n    templateUrl: 'nested-crud-review-dialog.component.html',\n    providers: [DataLayerService],\n})\n\nexport class NestedCrudReviewDialog implements OnInit {\n    loading: boolean;\n    submitted: boolean;\n    orgId: string;\n    context: string;\n\n    configs: any;\n    model:any;\n    organization: any;\n    item: any;\n    // form configs\n    comment: string;\n    commentForm: FormGroup;\n    adjustedAmountForm: FormGroup;\n\n    constructor(\n        private _formBuilder: FormBuilder,\n        public _dialogRef: MatDialogRef<NestedCrudReviewDialog>,\n        private _dataLayer: DataLayerService,\n        @Inject(MAT_DIALOG_DATA) public data: any) {}\n\n    formInit() {\n        this.commentForm = this._formBuilder.group({\n            comment: ['', Validators.required],\n        });\n        this.adjustedAmountForm = this._formBuilder.group({\n            adjustedAmount: ['', Validators.required],\n        });\n        // TODO: Add conditional logic at line level to prefill\n        // rationalized/actual amounts\n    }\n\n    get f() { return this.commentForm.controls };\n    get aF() { return this.adjustedAmountForm.controls };\n\n    submitTransition(transObj, feedback) {\n        const store = this.data.store;\n        this.loading = true;\n        const paramObj = { key: 'current_org_id', value: this.organization };\n        this._dataLayer.update(store, this.item.id, transObj, paramObj)\n            .subscribe(resp => {\n                console.log(resp);\n                this.loading = false;\n                this.closeDialog('refresh');\n                const msg = feedback.succMsg;\n                this._dataLayer.openDynamicSnackBar(msg, 'success');\n            }, err => {\n                console.log(err);\n                this.loading = false;\n                const errMsg = feedback.errMsg;\n                this._dataLayer.openDynamicSnackBar(errMsg, 'error');\n            })\n    }\n\n    transitionActions(frmObj?) {\n        const context = this.context;\n        let succStr = (status) => `Item ${status} successfully`;\n        let errStr = (status) => `An error occurred during ${status}ing`;\n        switch (context) {\n            case 'rationalize':\n                const ratObj = { status: 'RATIONALIZED' };\n                const ratFeedback = {\n                    succMsg: succStr('rationalized'),\n                    errMsg: errStr('rationaliz'),\n                };\n                this.submitTransition(ratObj, ratFeedback);\n                break;\n            case 'approve':\n                const appObj = { status:'SASDEF_APPROVED' };\n                const appFeedback = {\n                    succMsg: succStr('approved'),\n                    errMsg: errStr('approv'),\n                };\n                this.submitTransition(appObj, appFeedback);\n                break;\n            case 'reject':\n                const rejFeedback = {\n                    succMsg: succStr('rejected'),\n                    errMsg: errStr('reject'),\n                };\n                const rejObj = { ...frmObj };\n                this.submitTransition(rejObj, rejFeedback);\n                break;\n            default:\n                throw new Error('No relevant transition action given');\n                break;\n        }\n    }\n\n    submitForm(frm) {\n        console.log(frm);\n        if (frm.valid) {\n            if (this.context === 'rejected') {\n                const comment = frm.value['comment'];\n                const frmObj = { comment, status: 'REJECTED' };\n                this.transitionActions(frmObj);\n            }\n        }\n    }\n\n    closeDialog(resp?) {\n        this._dialogRef.close(resp);\n    }\n\n    getUserOrganization() {\n        const organization = JSON.parse(localStorage.getItem('organization'));\n        this.organization = get(organization, 'organization', null);\n    }\n\n    receiveModel(model) {\n        console.log(model);\n    }\n\n    dialogActions: any = {\n        approveApplication: () => {\n            this.getUserOrganization();\n            this.loading = true;\n            const postObj = {\n                review_status: 'APPROVE',\n                organization: this.organization,\n                activity: this.data.activity.id,\n            };\n        }\n    }\n\n    setConfigs() {\n        const context = this.data.context;\n        this.context =  this.data.context;\n        this.formInit();\n        this.getUserOrganization();\n        switch (context) {\n            case 'edit':\n                return {\n                    title: 'Update Activity',\n                    type: 'form',\n                };\n            case 'approve':\n                return {\n                    title: 'Approve Activity',\n                    type: 'dialog',\n                };\n            case 'rationalize':\n                return {\n                    title: 'Rationalize Activity',\n                    type: 'dialog',\n                    validationKey: 'rationalized_total',\n                }\n            case 'reject':\n                return {\n                    title: 'Reject Activity',\n                    type: 'comment',\n                };\n            default:\n                throw new Error('Provide a valid option');\n        }\n    }\n\n    ngOnInit() {\n        this.model = this.data.activity;\n        this.item = this.data.activity;\n        this.configs = this.setConfigs();\n    }\n}","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nimport { DataLayerService } from 'app/services/http/dataLayer.service';\nimport { get } from 'lodash';\n\n@Component({\n    selector: 'nested-main-dialog',\n    templateUrl: 'nested-main-dialog.component.html',\n    styleUrls: ['nested-main-dialog.component.scss'],\n    providers: [DataLayerService],\n})\n\nexport class NesteMainDialogComponent implements OnInit {\n    loading: boolean;\n    submitted: boolean;\n    orgId: string;\n\n    constructor(public _dialogRef: MatDialogRef<NesteMainDialogComponent>,\n        private _dataLayer: DataLayerService,\n        @Inject(MAT_DIALOG_DATA) public data: any) {}\n\n    receiveModel(model) {\n        this.submitted = true;\n        model = {\n            ...model,\n            org_budget: this.data.budget.id,\n            organization: this.orgId,\n        }\n        const createParams = { key: 'current_org_id', value: this.orgId };\n        this._dataLayer.create('organization-budget-activities', \n            model, undefined, createParams)\n            .subscribe(resp => {\n                this.submitted = false;\n                const msg = 'Activity successfuilly added';\n                this._dataLayer.openDynamicSnackBar(msg, 'success');\n                this.closeDialog(resp);\n            }, err => {\n                this.submitted = false;\n                const errMsg = 'An error occurred while adding activity. Try again';\n                this._dataLayer.openDynamicSnackBar(errMsg, 'error');\n            });\n    }\n\n    closeDialog(model?) {\n        this._dialogRef.close(model);\n    }\n\n    ngOnInit() {\n        const organization = JSON.parse(localStorage.getItem('organization'));\n        this.orgId = get(organization, 'organization', null);\n    }\n}","<div class=\"font-size-14\">\n    <div class=\"d-flex align-items-center mb-n3\">\n        <div class=\"flex-fill\">\n            <h3 mat-dialog-title class=\"pb-3\">Add Activity</h3>\n        </div>\n    </div>\n    <div mat-dialog-content class=\"text-muted fullwidth\">\n        <dynamic-form \n        btnClass=\"tiny mr-3\" [submitted]=\"submitted\"\n        [baseCancel]=\"true\" btnStatus=\"primary\"\n        store=\"organization-budget-activities\" btnText=\"SAVE\"\n        (cancelFxn)=\"closeDialog()\"\n        (submitModel)=\"receiveModel($event)\">\n        </dynamic-form>\n    </div>\n</div>","<div class=\"pt-20 pb-8 px-16\">\n    <div class=\"fullwidth mat-elevation-z1\">\n        <div class=\"bg-light py-12 pl-20 border-bottom\">\n            Total Summary\n        </div>\n        <table class=\"table\" *ngIf=\"item\">\n            <thead>\n                <tr class=\"font-size-12\">\n                    <th class=\"border-0 pl-20\">\n                        Applied Total\n                    </th>\n                    <th class=\"border-0\">\n                        Rationalized Total\n                    </th>\n                    <th class=\"border-0\">\n                        Actual Total\n                    </th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td class=\"pl-20 py-12\">\n                        {{ item?.total || 0 | currency: 'Kshs '}}\n                    </td>\n                    <td class=\"py-12\">\n                        {{ item?.rationalized_total || 0 | currency: 'Kshs '}}\n                    </td>\n                    <td class=\"py-12\">\n                        {{ item?.actual_total || 0 | currency: 'Kshs '}}\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>","import { Component, Input, OnChanges, OnInit, SimpleChange, SimpleChanges } from '@angular/core';\nimport { DataLayerService } from 'app/services/http/dataLayer.service';\nimport { get, has } from 'lodash';\n\n@Component({\n    selector: 'nested-totals-summary',\n    templateUrl: 'nested-totals-summary.component.html',\n    styleUrls: ['nested-totals-summary.component.scss'],\n})\n\nexport class NestedTotalsSummaryComponent implements OnInit, OnChanges{\n    @Input() item;\n\n    constructor(private _dataLayer: DataLayerService) {}\n\n    refreshItem() {\n        const orgId = get(JSON.parse(localStorage.getItem('organization')), 'organization', null);\n        const orgObj = { current_org_id: orgId };\n        this._dataLayer.get('organization-budget-activities', this.item.id, orgObj)\n            .subscribe(resp => {\n                this.item = { ...this.item, ...resp };\n            })\n    }\n\n    ngOnInit() {}\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (has(changes, 'item') && \n            !changes['item'].firstChange) {\n                this.refreshItem();\n            }\n    }\n}","<div class=\"content page-layout simple d-flex flex-column main-wrapper\">\n    <!-- Start of title area -->\n    <div class=\"fullwidth mat-elevation-z1 py-3 px-20 d-flex flex-row\">\n        <div class=\"font-size-16 font-weight-600 text-muted flex-fill pl-3 pt-2\">\n            Activities\n        </div>\n        <div class=\"action\">\n            <!-- TODO: Add conditional logic to display depending on item status -->\n            <button mat-raised-button color=\"accent\"\n            class=\"pl-2 pr-3 py-0 font-size-12\" (click)=\"openDialog()\">\n                <mat-icon>add</mat-icon>\n                &nbsp;ADD ACTIVITY\n            </button>\n        </div>\n    </div>\n    <!-- End of title -->\n\n    <!-- Start of content of nested list -->\n    <div class=\"fullwidth flex-row row px-16\">\n        <div *ngIf=\"!list?.length\"\n        class=\"page-layout col-lg-12 pt-32 pb-36\">\n            <div class=\"w-100-p py-80 col-12\">\n                <div class=\"w-100-p pb-32\">\n                    <div class=\"d-flex w-100-p justify-content-center\">\n                        <mat-spinner diameter=\"45\" *ngIf=\"loading\"></mat-spinner>\n                        <mat-icon class=\"ml-n5 font-size-80\"\n                        *ngIf=\"!loading\">folder_open</mat-icon>\n                    </div>\n                </div>\n                <div class=\"col-12 text-center font-size-18 text-muted\n                pt-20 pl-32\">\n                    {{ loading ? 'Loading...' : 'Activity yet to be added for' }}\n                </div>\n                <div class=\"col-12 text-center font-size-14 text-muted\n                pt-2 pl-32\" *ngIf=\"!loading\">\n                    Add an activity and activity item which should be submitted for review\n                </div>\n            </div>\n        </div>\n        <div class=\"h-100-p overflow-auto innerScroll \n        page-layout col-lg-3 main-list\"\n        *ngIf=\"list.length\">\n            <div class=\"ps\">\n                <div class=\"mail-list overflow-auto\"\n                fuseperfectscrollbar>\n                    <div class=\"list-item\"\n                    *ngFor=\"let activity of list;let i = index;\"\n                    [class.active]=\"activity.active\"\n                    (click)=\"selectActivity(i)\">\n                        <div class=\"pb-0\">\n                            {{activity?.title}}\n                        </div>\n                        <div class=\"d-flex flex-column align-items-start\">\n                            <div class=\"d-flex flex-row align-items-center fullwidth ml-n1\">\n                                <div class=\"pt-2\"><mat-icon class=\"font-size-18\n                                text-muted\">attach_money</mat-icon>\n                                </div>\n                                <div class=\"font-size-14 text-muted pl-1\">\n                                    {{activity?.total | currency: 'Kshs '}}\n                                </div>\n                            </div>\n                            <div class=\"d-flex flex-row align-items-center fullwidth pt-0 mt-n2\">\n                                <div class=\"pt-2\"><mat-icon class=\"font-size-16\n                                    text-muted\">calendar_today</mat-icon>\n                                </div>\n                                <div class=\"font-size-14 text-muted\">\n                                    {{activity?.activity_date | date: 'dd-MM-yyyy'}}\n                                </div>\n                            </div>\n                        </div>\n                        <div>\n                            <span class=\"badge {{activity?.status | lowercase }}\n                            font-size-10 pt-2 font-size-10 px-8\">\n                                {{activity?.status | removeUnderscore}}\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- Start of details of content -->\n        <div class=\"col-lg-9 overflow-auto innerScroll px-0 mt-1 \n        main-card-content bg-light pb-12 border-left\"\n        *ngIf=\"selectedAct && loading === false\">\n            <div class=\"fullwidht h-100-p bg-light px-16 pt-12 pb-32\">\n                <mat-card class=\"mat-elevation-1 p-0 mb-20\">\n                    <div class=\"card-header bg-white font-size-16\">\n                        <div class=\"d-flex flex-row\">\n                            <div class=\"title pt-12 pb-8 pl-8 flex-fill\">\n                                {{ selectedAct?.title }}\n                            </div>\n                            <div class=\"pt-2\">\n                                <button mat-mini-fab color=\"default\"\n                                class=\"mat-elevation-z0 border bg-light h-32 w-32\"\n                                aria-label=\"Activity actions\"\n                                [matMenuTriggerFor]=\"menu\">\n                                    <mat-icon class=\"mt-n2 fonnt-size-20\">more_vert</mat-icon>\n                                </button>\n                                <mat-menu #menu=\"matMenu\">\n                                    <button mat-menu-item\n                                    *ngFor=\"let btnAct of actActions\"\n                                    (click)=\"openCRUDDialog(btnAct.context)\">\n                                        <mat-icon [class]=\"btnAct?.iconClass\">\n                                            {{btnAct?.icon}}\n                                        </mat-icon>\n                                        {{btnAct?.text}}\n                                    </button>\n                                </mat-menu>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- Mat card content -->\n                    <mat-card-body class=\"p-0\">\n                        <div class=\"fullwidth bg-light d-flex border-bottom mb-2\"\n                        fxLayout=\"row\">\n                            <div class=\"col-lg-4 border-right pl-20 py-12 pr-16\">\n                                <div class=\"d-flex flex-row\">\n                                    <div class=\"flex-fill\">\n                                        <div class=\"text-muted font-size-12\">DATE</div>\n                                        <div>{{selectedAct?.activity_date | date: 'dd-MM-yyyy'}}</div>\n                                    </div>\n                                    <div class=\"pt-3\">\n                                        <mat-icon class=\"size-40\">calendar_today</mat-icon>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-lg-4 border-right pr-16 py-12 pl-20\">\n                                <div class=\"d-flex flex-row\">\n                                    <div class=\"flex-fill\">\n                                        <div class=\"text-muted font-size-12\">AMOUNT</div>\n                                        <div>{{selectedAct?.total | currency: 'Kshs '}}</div>\n                                    </div>\n                                    <div class=\"pt-3\">\n                                        <mat-icon class=\"size-50\">attach_money</mat-icon>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-lg-4 pr-16 py-12 pl-20\">\n                                <div class=\"d-flex flex-row\">\n                                    <div class=\"flex-fill\">\n                                        <div class=\"text-muted font-size-12\">STATUS</div>\n                                        <div>\n                                            <span class=\"badge font-size-10\n                                            {{selectedAct?.status | lowercase }} p-2\">\n                                                {{ selectedAct?.status | removeUnderscore }}\n                                            </span>\n                                        </div>\n                                    </div>\n                                    <div class=\"pt-3\">\n                                        <mat-icon class=\"size-50\">assessment</mat-icon>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <nested-totals-summary [item]=\"selectedAct\"></nested-totals-summary>\n\n                        <!-- Start of tabbed section -->\n                        <div class=\"fullwidth mt-2 px-0\"\n                        *ngIf=\"list.length && selectedAct\">\n                            <mat-tab-group\n                            (selectedTabChange)=\"onTabChange($event)\">\n                                <mat-tab *ngFor=\"let tab of asyncTabs | async; let i = index;\">\n                                  <ng-template mat-tab-label>\n                                    <mat-icon class=\"font-size-24\">{{tab.icon}}</mat-icon>\n                                    &nbsp;&nbsp;{{tab.label}}\n                                  </ng-template>\n                                  <div *ngIf=\"selectedIndexBinding === 0 && cmptParams\"\n                                  class=\"\">\n                                    <dynamic-table title=\"Listing\"\n                                        [tabbedItem]=\"selectedAct\" [largeForms]=\"true\"\n                                        class=\"w-100-p\" [addOrg]=\"true\"\n                                        [modelKey]=\"tabConfigs?.modelKey\" [cmptParams]=\"cmptParams\"\n                                        [headers]=\"tabConfigs?.headers\" [no-card]=\"true\"\n                                        [has-action]=\"true\" [store]=\"tabConfigs?.gridConf.getStore\"\n                                        [topActions]=\"tabConfigs?.topActions\" [hasSearch]=\"true\"\n                                        (postCRUDFxn)=\"refreshSelected()\"\n                                        [dropDownActions]=\"tabConfigs?.actions\" [rows]=\"tabConfigs.rows\">\n                                    </dynamic-table>\n                                  </div>\n                                  <div *ngIf=\"selectedIndexBinding === 1 && cmptParams\"\n                                  class=\"\">\n                                    <dynamic-table title=\"Listing\"\n                                        [tabbedItem]=\"selectedAct\" [largeForms]=\"true\"\n                                        class=\"w-100-p\" [addOrg]=\"true\"\n                                        [modelKey]=\"tabConfigs?.modelKey\" [cmptParams]=\"cmptParams\"\n                                        [headers]=\"tabConfigs?.headers\" [no-card]=\"true\"\n                                        [has-action]=\"true\" [store]=\"tabConfigs?.gridConf.getStore\"\n                                        [topActions]=\"tabConfigs?.topActions\" [hasSearch]=\"true\"\n                                        (postCRUDFxn)=\"refreshSelected()\"\n                                        [dropDownActions]=\"tabConfigs?.actions\" [rows]=\"tabConfigs.rows\">\n                                    </dynamic-table>\n                                  </div>\n                                  <div *ngIf=\"selectedIndexBinding === 2 && cmptParams\"\n                                  class=\"\">\n                                    <dynamic-table title=\"Listing\"\n                                        [tabbedItem]=\"selectedAct\" [largeForms]=\"true\"\n                                        class=\"w-100-p\" [addOrg]=\"true\"\n                                        [modelKey]=\"tabConfigs?.modelKey\" [cmptParams]=\"cmptParams\"\n                                        [headers]=\"tabConfigs?.headers\" [no-card]=\"true\"\n                                        [has-action]=\"true\" [store]=\"tabConfigs?.gridConf.getStore\"\n                                        [topActions]=\"tabConfigs?.topActions\" [hasSearch]=\"true\"\n                                        (postCRUDFxn)=\"refreshSelected()\"\n                                        [dropDownActions]=\"tabConfigs?.actions\" [rows]=\"tabConfigs.rows\">\n                                    </dynamic-table>\n                                  </div>\n                                </mat-tab>\n                              </mat-tab-group>\n                        </div>\n                    </mat-card-body>\n                    <!-- End of card content -->\n                </mat-card>\n            </div>\n        </div>\n        <!-- End of detail view -->\n    </div>\n\n    <!-- End of all content -->\n</div>\n<div class=\"btn-cont px-20 pb-12 pt-3 border-top\"\n*ngIf=\"steps.length\">\n    <div class=\"btn-cont mb-3 pt-12 w-100-p\n    d-flex justify-content-between\">\n        <button mat-raised-button\n        class=\"float-left\"\n        (click)=\"changeStep('prev')\">\n        <mat-icon class=\"btn-icon\">keyboard_arrow_left</mat-icon>\n        <mat-icon class=\"btn-icon\">keyboard_arrow_left</mat-icon>\n            &nbsp;&nbsp;BACK\n        </button>\n        <button mat-raised-button\n        *ngIf=\"!isLast\"\n        class=\"mt-10 float-right mr-0\"\n        color=\"accent\" \n        (click)=\"changeStep('next')\">\n            NEXT&nbsp;\n            <mat-icon class=\"btn-icon\">keyboard_arrow_right</mat-icon>\n            <mat-icon class=\"btn-icon\">keyboard_arrow_right</mat-icon>\n        </button>\n        <button mat-raised-button\n        *ngIf=\"isLast\" color=\"success\"\n        class=\"mt-10 float-right mr-0\"\n        (click)=\"changeStep('next')\">\n            COMPLETE\n        </button>\n    </div>\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { DataLayerService } from 'app/services/http/dataLayer.service';\nimport { find, findIndex, get, indexOf, isObject, isUndefined } from 'lodash';\nimport { Observable, Observer } from 'rxjs';\n\nimport { gridConfigs } from './constants/grid-configs.constant';\nimport { NestedCrudReviewDialog } from './nested-crud-review-dialog/nested-crud-review-dialog.component';\nimport { NesteMainDialogComponent } from './nested-main-dialog/nested-main-dialog.component';\n\n@Component({\n    selector: 'nested-list',\n    styleUrls: ['nested-list.component.scss'],\n    templateUrl: 'nested-list.component.html',\n    providers: [DataLayerService],\n})\n\nexport class NestedListComponent implements OnInit {\n    @Input() item;\n    @Input() steps: Array<any> = [];\n    @Input() current: any;\n\n    @Output() onNavigate = new EventEmitter();\n\n    public selectedIndexBinding = 0;\n    list: Array<any> = [];\n    asyncTabs: Observable<[]>;\n    organization = {};\n    selectedAct:any;\n    tabConfigs:any = gridConfigs[0].configs;\n    cmptParams: any;\n    loading:boolean;\n    activeInd;\n    actActions: Array<any> = [];\n\n    tabsList: any = [\n        { label: 'Items', icon: 'list' },\n        { label: 'Attendees', icon: 'people' },\n        { label: 'Allowances', icon: 'account_balance_wallet' },\n    ];\n    itemId: number;\n    configs: any;\n\n    constructor(private _dataLayer: DataLayerService,\n        private _route: ActivatedRoute,\n        private _dialog: MatDialog) {}\n\n    changeStep(context) {\n        this.onNavigate.emit(context);\n    }\n\n    openDialog() {\n        const dialogRef = this._dialog.open(NesteMainDialogComponent, {\n            data: {\n                context: 'Budget Activity',\n                budget: this.item,\n            },\n            width: '50%',\n        });\n        dialogRef.afterClosed().subscribe(result => {\n            if (isObject(result)) {\n                this.fetchList(result['id']);\n            }\n        })\n    }\n\n    openCRUDDialog(context?) {\n        const dialogRef = this._dialog.open(NestedCrudReviewDialog, {\n            data: {\n                context,\n                store: 'organization-budget-activities',\n                activity: this.selectedAct\n            },\n            width: '50%',\n        });\n        dialogRef.afterClosed().subscribe(resp => {\n            console.log(resp);\n            if (resp === 'refresh') {\n                this.loading = true;\n                this.refreshSelected();\n            }\n        })\n    }\n\n    refreshSelected() {\n        const opts = { current_org_id: get(this.organization, 'organization', null) };\n        this._dataLayer.get('organization-budget-activities', \n            this.selectedAct.id, opts)\n            .subscribe(resp => {\n                this.selectedAct = { ...resp, active: true };\n                this.list = this.list.map(act => {\n                    if (act.id === resp['id']) {\n                        act = { ...resp, active: true };\n                    }\n                    return act;\n                })\n                this.loading = false;\n            }, err => {\n                this.loading = false;\n                console.log(err);\n            });\n    }\n\n    onTabChange(tab) {\n        this.selectedIndexBinding = tab['index'];\n        if (tab['index'] === 1) {\n            this.tabConfigs = gridConfigs[1].configs;\n            this.cmptParams = {\n                ...this.cmptParams,\n                member_null: false,\n                budget_activity: this.selectedAct.id,\n            }\n        } else if(tab['index'] === 2) {\n            this.tabConfigs = gridConfigs[2].configs;\n            delete this.cmptParams.member_null;\n            this.cmptParams = {\n                ...this.cmptParams,\n                budget_activity: this.selectedAct.id,\n            };\n        } else {\n            this.tabConfigs = gridConfigs[0].configs;\n            this.cmptParams = {\n                ...this.cmptParams,\n                member_null: true,\n                budget_activity: this.selectedAct.id,\n            }\n        }\n    }\n\n    loadTabs() {\n        this.asyncTabs = new Observable((observer: Observer<any>) => {\n            setTimeout(() => {\n                observer.next([...this.tabsList]);\n            }, 250);\n        })\n    }\n\n    loadActActions() {\n        const defaultActions = [\n            {\n                text: 'Edit', icon: 'edit',\n                iconClass: 'text-primary',\n                context: 'edit', status: ['DRAFT'],\n                bpType: ['SPORTS_ORGANIZATION', 'GOVERNMENT_AGENCY'],\n            },\n            {\n                text: 'Rationalize', icon: 'compare_arrows',\n                iconClass: 'text-success',\n                context: 'rationalize', status: ['DRAFT'],\n                bpType: ['MINISTRY', 'SASDEF'],\n            },\n            {\n                text: 'Approve', icon: 'check',\n                iconClass: 'text-success',\n                context: 'approve', status: ['RATIONALIZED'],\n                bpType: ['SASDEF'],\n            },\n            {\n                text: 'Reject', icon: 'close',\n                iconClass: 'text-danger',\n                context: 'reject', status: ['DRAFT', 'RATIONALIZED'],\n                bpType: ['MINISTRY', 'SASDEF'],\n            }\n        ];\n        const orgType = get(\n            JSON.parse(localStorage.getItem('organization')), 'org_type', null);\n        this.actActions = defaultActions.filter(act => {\n            const orgInd = indexOf(act.bpType, orgType);\n            const statusInd = indexOf(act.status, this.selectedAct.status);\n            if (orgInd >= 0 && statusInd >= 0) return act;\n        });\n        // defaultActions.map(act => {\n        //     const orgInd = indexOf(act.bpType, orgType);\n        //     const statusInd = indexOf(act.status, this.selectedAct.status);\n        //     if (orgInd >= 0 && statusInd >= 0) return this.actActions.push(act);\n        // });\n    }\n\n    selectActivity(currInd) {\n        this.loading = true;\n        const oldInd = indexOf(this.list, find(this.list, { active: true }));\n        this.selectedAct = undefined;\n        if (oldInd >= 0) {\n            this.list[oldInd].active = false;\n        }\n        this.list[currInd].active = true;\n        const opts = { current_org_id: get(this.organization, 'organization', null) };\n        this._dataLayer.get('organization-budget-activities', \n            this.list[currInd].id, opts)\n            .subscribe(resp => {\n                this.selectedAct = this.list[currInd];\n                this.cmptParams = {\n                    ...this.cmptParams,\n                    budget_activity: this.selectedAct.id,\n                    member_null: true,\n                }\n                this.loadTabs();\n                this.loading = false;\n                this.loadActActions();\n            }, err => {\n                console.log(err);\n                this.loading = false;\n            });\n    }\n\n    setSelected(actId?) {\n        if (this.list.length) {\n            let selectedAct = find(this.list, { active: true });\n            if (isUndefined(selectedAct) && isUndefined(actId)) {\n                this.list[0].active = true;\n                // this.selectedAct = this.list[0];\n                this.selectedAct = undefined;\n                this.selectActivity(0);\n                this.cmptParams = {\n                    budget_activity: this.list[0].id,\n                    member_null: true,\n                };\n            } else {\n                if (!isUndefined(actId)) {\n                    const currInd = indexOf(this.list, find(this.list, { id: actId }));\n                    this.selectedAct = undefined;\n                    this.selectActivity(currInd);\n                } else {\n                    this.selectedAct = indexOf(this.list, selectedAct);\n                }\n            }\n        }\n    }\n\n    fetchList(activityId?) {\n        const orgId = get(this.organization, 'organization', null);\n        const params = {\n            current_org_id: orgId,\n            org_budget: get(this.item, 'id', this.itemId || null),\n        };\n        this._dataLayer.list('organization-budget-activities', params)\n            .subscribe(resp => {\n                this.list = resp['results'];\n                this.setSelected(activityId);\n            }, err => console.log(err));\n    }\n\n    getItem() {\n        this._route.queryParams.subscribe(params => {\n            const current = parseInt(params.current, 10);\n            this.itemId = parseInt(params['id'], 10);\n            const ind = findIndex(this.steps, { count: current });\n            this.configs = this.steps[ind].gridConf;\n            const getObj = { 'current_org_id': this.organization['organization'] };\n            this._dataLayer.get('organization-budgets', this.itemId, getObj)\n                .subscribe(resp => {\n                    this.item = resp;\n                }, err => console.log(err));\n            this.fetchList();\n        })\n    }\n\n    ngOnInit() {\n        this.organization = JSON.parse(localStorage.getItem('organization'));\n        if (!this.steps.length) {\n            this.fetchList();\n        } else {\n            this.getItem();\n        }\n    }\n}","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'page-container',\n    template: `<router-outlet></router-outlet>`,\n    styleUrls: ['./page-container.component.scss'],\n})\n\nexport class PageContainerComponent {}","import { InjectionToken, Directive, Input, EventEmitter, Optional, Inject, SkipSelf, ChangeDetectorRef, Output, NgModule } from '@angular/core';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each accordion. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nlet nextId = 0;\n/**\n * Injection token that can be used to reference instances of `CdkAccordion`. It serves\n * as alternative token to the actual `CdkAccordion` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_ACCORDION = new InjectionToken('CdkAccordion');\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nclass CdkAccordion {\n    constructor() {\n        /** Emits when the state of the accordion changes */\n        this._stateChanges = new Subject();\n        /** Stream that emits true/false when openAll/closeAll is triggered. */\n        this._openCloseAllActions = new Subject();\n        /** A readonly id value to use for unique selection coordination. */\n        this.id = `cdk-accordion-${nextId++}`;\n        this._multi = false;\n    }\n    /** Whether the accordion should allow multiple expanded accordion items simultaneously. */\n    get multi() { return this._multi; }\n    set multi(multi) { this._multi = coerceBooleanProperty(multi); }\n    /** Opens all enabled accordion items in an accordion where multi is enabled. */\n    openAll() {\n        this._openCloseAll(true);\n    }\n    /** Closes all enabled accordion items in an accordion where multi is enabled. */\n    closeAll() {\n        this._openCloseAll(false);\n    }\n    ngOnChanges(changes) {\n        this._stateChanges.next(changes);\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    _openCloseAll(expanded) {\n        if (this.multi) {\n            this._openCloseAllActions.next(expanded);\n        }\n    }\n}\nCdkAccordion.ɵfac = function CdkAccordion_Factory(t) { return new (t || CdkAccordion)(); };\nCdkAccordion.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAccordion, selectors: [[\"cdk-accordion\"], [\"\", \"cdkAccordion\", \"\"]], inputs: { multi: \"multi\" }, exportAs: [\"cdkAccordion\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_ACCORDION, useExisting: CdkAccordion }]), ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkAccordion.propDecorators = {\n    multi: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion, [cdkAccordion]',\n                exportAs: 'cdkAccordion',\n                providers: [{ provide: CDK_ACCORDION, useExisting: CdkAccordion }]\n            }]\n    }], function () { return []; }, { multi: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each accordion item. */\nlet nextId$1 = 0;\nconst ɵ0 = undefined;\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nclass CdkAccordionItem {\n    constructor(accordion, _changeDetectorRef, _expansionDispatcher) {\n        this.accordion = accordion;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._expansionDispatcher = _expansionDispatcher;\n        /** Subscription to openAll/closeAll events. */\n        this._openCloseAllSubscription = Subscription.EMPTY;\n        /** Event emitted every time the AccordionItem is closed. */\n        this.closed = new EventEmitter();\n        /** Event emitted every time the AccordionItem is opened. */\n        this.opened = new EventEmitter();\n        /** Event emitted when the AccordionItem is destroyed. */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emits whenever the expanded state of the accordion changes.\n         * Primarily used to facilitate two-way binding.\n         * @docs-private\n         */\n        this.expandedChange = new EventEmitter();\n        /** The unique AccordionItem id. */\n        this.id = `cdk-accordion-child-${nextId$1++}`;\n        this._expanded = false;\n        this._disabled = false;\n        /** Unregister function for _expansionDispatcher. */\n        this._removeUniqueSelectionListener = () => { };\n        this._removeUniqueSelectionListener =\n            _expansionDispatcher.listen((id, accordionId) => {\n                if (this.accordion && !this.accordion.multi &&\n                    this.accordion.id === accordionId && this.id !== id) {\n                    this.expanded = false;\n                }\n            });\n        // When an accordion item is hosted in an accordion, subscribe to open/close events.\n        if (this.accordion) {\n            this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n        }\n    }\n    /** Whether the AccordionItem is expanded. */\n    get expanded() { return this._expanded; }\n    set expanded(expanded) {\n        expanded = coerceBooleanProperty(expanded);\n        // Only emit events and update the internal value if the value changes.\n        if (this._expanded !== expanded) {\n            this._expanded = expanded;\n            this.expandedChange.emit(expanded);\n            if (expanded) {\n                this.opened.emit();\n                /**\n                 * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n                 * the name value is the id of the accordion.\n                 */\n                const accordionId = this.accordion ? this.accordion.id : this.id;\n                this._expansionDispatcher.notify(this.id, accordionId);\n            }\n            else {\n                this.closed.emit();\n            }\n            // Ensures that the animation will run when the value is set outside of an `@Input`.\n            // This includes cases like the open, close and toggle methods.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the AccordionItem is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(disabled) { this._disabled = coerceBooleanProperty(disabled); }\n    /** Emits an event for the accordion item being destroyed. */\n    ngOnDestroy() {\n        this.opened.complete();\n        this.closed.complete();\n        this.destroyed.emit();\n        this.destroyed.complete();\n        this._removeUniqueSelectionListener();\n        this._openCloseAllSubscription.unsubscribe();\n    }\n    /** Toggles the expanded state of the accordion item. */\n    toggle() {\n        if (!this.disabled) {\n            this.expanded = !this.expanded;\n        }\n    }\n    /** Sets the expanded state of the accordion item to false. */\n    close() {\n        if (!this.disabled) {\n            this.expanded = false;\n        }\n    }\n    /** Sets the expanded state of the accordion item to true. */\n    open() {\n        if (!this.disabled) {\n            this.expanded = true;\n        }\n    }\n    _subscribeToOpenCloseAllActions() {\n        return this.accordion._openCloseAllActions.subscribe(expanded => {\n            // Only change expanded state if item is enabled\n            if (!this.disabled) {\n                this.expanded = expanded;\n            }\n        });\n    }\n}\nCdkAccordionItem.ɵfac = function CdkAccordionItem_Factory(t) { return new (t || CdkAccordionItem)(ɵngcc0.ɵɵdirectiveInject(CDK_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher)); };\nCdkAccordionItem.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAccordionItem, selectors: [[\"cdk-accordion-item\"], [\"\", \"cdkAccordionItem\", \"\"]], inputs: { expanded: \"expanded\", disabled: \"disabled\" }, outputs: { closed: \"closed\", opened: \"opened\", destroyed: \"destroyed\", expandedChange: \"expandedChange\" }, exportAs: [\"cdkAccordionItem\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n            // registering to the same accordion.\n            { provide: CDK_ACCORDION, useValue: ɵ0 },\n        ])] });\nCdkAccordionItem.ctorParameters = () => [\n    { type: CdkAccordion, decorators: [{ type: Optional }, { type: Inject, args: [CDK_ACCORDION,] }, { type: SkipSelf }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher }\n];\nCdkAccordionItem.propDecorators = {\n    closed: [{ type: Output }],\n    opened: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    expandedChange: [{ type: Output }],\n    expanded: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAccordionItem, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion-item, [cdkAccordionItem]',\n                exportAs: 'cdkAccordionItem',\n                providers: [\n                    // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n                    // registering to the same accordion.\n                    { provide: CDK_ACCORDION, useValue: ɵ0 },\n                ]\n            }]\n    }], function () { return [{ type: CdkAccordion, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_ACCORDION]\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }]; }, { closed: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], destroyed: [{\n            type: Output\n        }], expandedChange: [{\n            type: Output\n        }], expanded: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkAccordionModule {\n}\nCdkAccordionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkAccordionModule });\nCdkAccordionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkAccordionModule_Factory(t) { return new (t || CdkAccordionModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkAccordionModule, { declarations: [CdkAccordion, CdkAccordionItem], exports: [CdkAccordion, CdkAccordionItem] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAccordionModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkAccordion, CdkAccordionItem],\n                declarations: [CdkAccordion, CdkAccordionItem]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkAccordion, CdkAccordionItem, CdkAccordionModule, CDK_ACCORDION as ɵangular_material_src_cdk_accordion_accordion_a };\n\n//# sourceMappingURL=accordion.js.map","import { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, SkipSelf, Inject, ChangeDetectorRef, ViewContainerRef, Input, Output, ContentChild, ViewChild, Host, ElementRef, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { FocusMonitor, FocusKeyManager } from '@angular/cdk/a11y';\nimport { distinctUntilChanged, startWith, filter, take } from 'rxjs/operators';\nimport { ENTER, hasModifierKey, SPACE } from '@angular/cdk/keycodes';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, EMPTY, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nimport * as ɵngcc4 from '@angular/common';\n\nconst _c0 = [\"body\"];\nfunction MatExpansionPanel_ng_template_5_Template(rf, ctx) { }\nconst _c1 = [[[\"mat-expansion-panel-header\"]], \"*\", [[\"mat-action-row\"]]];\nconst _c2 = [\"mat-expansion-panel-header\", \"*\", \"mat-action-row\"];\nfunction MatExpansionPanelHeader_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 2);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@indicatorRotate\", ctx_r0._getExpandedState());\n} }\nconst _c3 = [[[\"mat-panel-title\"]], [[\"mat-panel-description\"]], \"*\"];\nconst _c4 = [\"mat-panel-title\", \"mat-panel-description\", \"*\"];\nconst MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Time and timing curve for expansion panel animations. */\n// Note: Keep this in sync with the Sass variable for the panel header animation.\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * @docs-private\n */\nconst matExpansionAnimations = {\n    /** Animation that rotates the indicator arrow. */\n    indicatorRotate: trigger('indicatorRotate', [\n        state('collapsed, void', style({ transform: 'rotate(0deg)' })),\n        state('expanded', style({ transform: 'rotate(180deg)' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n    /** Animation that expands and collapses the panel content. */\n    bodyExpansion: trigger('bodyExpansion', [\n        state('collapsed, void', style({ height: '0px', visibility: 'hidden' })),\n        state('expanded', style({ height: '*', visibility: 'visible' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nclass MatExpansionPanelContent {\n    constructor(_template) {\n        this._template = _template;\n    }\n}\nMatExpansionPanelContent.ɵfac = function MatExpansionPanelContent_Factory(t) { return new (t || MatExpansionPanelContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatExpansionPanelContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelContent, selectors: [[\"ng-template\", \"matExpansionPanelContent\", \"\"]] });\nMatExpansionPanelContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matExpansionPanelContent]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter for generating unique element ids. */\nlet uniqueId = 0;\n/**\n * Injection token that can be used to configure the defalt\n * options for the expansion panel component.\n */\nconst MAT_EXPANSION_PANEL_DEFAULT_OPTIONS = new InjectionToken('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\nconst ɵ0 = undefined;\n/**\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\nclass MatExpansionPanel extends CdkAccordionItem {\n    constructor(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef, _document, _animationMode, defaultOptions) {\n        super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n        this._viewContainerRef = _viewContainerRef;\n        this._animationMode = _animationMode;\n        this._hideToggle = false;\n        /** An event emitted after the body's expansion animation happens. */\n        this.afterExpand = new EventEmitter();\n        /** An event emitted after the body's collapse animation happens. */\n        this.afterCollapse = new EventEmitter();\n        /** Stream that emits for changes in `@Input` properties. */\n        this._inputChanges = new Subject();\n        /** ID for the associated header element. Used for a11y labelling. */\n        this._headerId = `mat-expansion-panel-header-${uniqueId++}`;\n        /** Stream of body animation done events. */\n        this._bodyAnimationDone = new Subject();\n        this.accordion = accordion;\n        this._document = _document;\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._bodyAnimationDone.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe(event => {\n            if (event.fromState !== 'void') {\n                if (event.toState === 'expanded') {\n                    this.afterExpand.emit();\n                }\n                else if (event.toState === 'collapsed') {\n                    this.afterCollapse.emit();\n                }\n            }\n        });\n        if (defaultOptions) {\n            this.hideToggle = defaultOptions.hideToggle;\n        }\n    }\n    /** Whether the toggle indicator should be hidden. */\n    get hideToggle() {\n        return this._hideToggle || (this.accordion && this.accordion.hideToggle);\n    }\n    set hideToggle(value) {\n        this._hideToggle = coerceBooleanProperty(value);\n    }\n    /** The position of the expansion indicator. */\n    get togglePosition() {\n        return this._togglePosition || (this.accordion && this.accordion.togglePosition);\n    }\n    set togglePosition(value) {\n        this._togglePosition = value;\n    }\n    /** Determines whether the expansion panel should have spacing between it and its siblings. */\n    _hasSpacing() {\n        if (this.accordion) {\n            return this.expanded && this.accordion.displayMode === 'default';\n        }\n        return false;\n    }\n    /** Gets the expanded state string. */\n    _getExpandedState() {\n        return this.expanded ? 'expanded' : 'collapsed';\n    }\n    /** Toggles the expanded state of the expansion panel. */\n    toggle() {\n        this.expanded = !this.expanded;\n    }\n    /** Sets the expanded state of the expansion panel to false. */\n    close() {\n        this.expanded = false;\n    }\n    /** Sets the expanded state of the expansion panel to true. */\n    open() {\n        this.expanded = true;\n    }\n    ngAfterContentInit() {\n        if (this._lazyContent) {\n            // Render the content as soon as the panel becomes open.\n            this.opened.pipe(startWith(null), filter(() => this.expanded && !this._portal), take(1)).subscribe(() => {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            });\n        }\n    }\n    ngOnChanges(changes) {\n        this._inputChanges.next(changes);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._bodyAnimationDone.complete();\n        this._inputChanges.complete();\n    }\n    /** Checks whether the expansion panel's content contains the currently-focused element. */\n    _containsFocus() {\n        if (this._body) {\n            const focusedElement = this._document.activeElement;\n            const bodyElement = this._body.nativeElement;\n            return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n        }\n        return false;\n    }\n}\nMatExpansionPanel.ɵfac = function MatExpansionPanel_Factory(t) { return new (t || MatExpansionPanel)(ɵngcc0.ɵɵdirectiveInject(MAT_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8)); };\nMatExpansionPanel.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanel, selectors: [[\"mat-expansion-panel\"]], contentQueries: function MatExpansionPanel_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelContent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lazyContent = _t.first);\n    } }, viewQuery: function MatExpansionPanel_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._body = _t.first);\n    } }, hostAttrs: [1, \"mat-expansion-panel\"], hostVars: 6, hostBindings: function MatExpansionPanel_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx.expanded)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-expansion-panel-spacing\", ctx._hasSpacing());\n    } }, inputs: { disabled: \"disabled\", expanded: \"expanded\", hideToggle: \"hideToggle\", togglePosition: \"togglePosition\" }, outputs: { opened: \"opened\", closed: \"closed\", expandedChange: \"expandedChange\", afterExpand: \"afterExpand\", afterCollapse: \"afterCollapse\" }, exportAs: [\"matExpansionPanel\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n            // to the same accordion.\n            { provide: MAT_ACCORDION, useValue: ɵ0 },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c2, decls: 7, vars: 4, consts: [[\"role\", \"region\", 1, \"mat-expansion-panel-content\", 3, \"id\"], [\"body\", \"\"], [1, \"mat-expansion-panel-body\"], [3, \"cdkPortalOutlet\"]], template: function MatExpansionPanel_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@bodyExpansion.done\", function MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener($event) { return ctx._bodyAnimationDone.next($event); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵtemplate(5, MatExpansionPanel_ng_template_5_Template, 0, 0, \"ng-template\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"@bodyExpansion\", ctx._getExpandedState())(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx._headerId);\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._portal);\n    } }, directives: [ɵngcc2.CdkPortalOutlet], styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], encapsulation: 2, data: { animation: [matExpansionAnimations.bodyExpansion] }, changeDetection: 0 });\nMatExpansionPanel.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [MAT_ACCORDION,] }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] }\n];\nMatExpansionPanel.propDecorators = {\n    hideToggle: [{ type: Input }],\n    togglePosition: [{ type: Input }],\n    afterExpand: [{ type: Output }],\n    afterCollapse: [{ type: Output }],\n    _lazyContent: [{ type: ContentChild, args: [MatExpansionPanelContent,] }],\n    _body: [{ type: ViewChild, args: ['body',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanel, [{\n        type: Component,\n        args: [{\n                selector: 'mat-expansion-panel',\n                exportAs: 'matExpansionPanel',\n                template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content\\\"\\n     role=\\\"region\\\"\\n     [@bodyExpansion]=\\\"_getExpandedState()\\\"\\n     (@bodyExpansion.done)=\\\"_bodyAnimationDone.next($event)\\\"\\n     [attr.aria-labelledby]=\\\"_headerId\\\"\\n     [id]=\\\"id\\\"\\n     #body>\\n  <div class=\\\"mat-expansion-panel-body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n  </div>\\n  <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled', 'expanded'],\n                outputs: ['opened', 'closed', 'expandedChange'],\n                animations: [matExpansionAnimations.bodyExpansion],\n                providers: [\n                    // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n                    // to the same accordion.\n                    { provide: MAT_ACCORDION, useValue: ɵ0 },\n                ],\n                host: {\n                    'class': 'mat-expansion-panel',\n                    '[class.mat-expanded]': 'expanded',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-expansion-panel-spacing]': '_hasSpacing()'\n                },\n                styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }, {\n                type: Inject,\n                args: [MAT_ACCORDION]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }]; }, { afterExpand: [{\n            type: Output\n        }], afterCollapse: [{\n            type: Output\n        }], hideToggle: [{\n            type: Input\n        }], togglePosition: [{\n            type: Input\n        }], _lazyContent: [{\n            type: ContentChild,\n            args: [MatExpansionPanelContent]\n        }], _body: [{\n            type: ViewChild,\n            args: ['body']\n        }] }); })();\n/**\n * Actions of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelActionRow {\n}\nMatExpansionPanelActionRow.ɵfac = function MatExpansionPanelActionRow_Factory(t) { return new (t || MatExpansionPanelActionRow)(); };\nMatExpansionPanelActionRow.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelActionRow, selectors: [[\"mat-action-row\"]], hostAttrs: [1, \"mat-action-row\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelActionRow, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-action-row',\n                host: {\n                    class: 'mat-action-row'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Header element of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelHeader {\n    constructor(panel, _element, _focusMonitor, _changeDetectorRef, defaultOptions, _animationMode) {\n        this.panel = panel;\n        this._element = _element;\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        this._parentChangeSubscription = Subscription.EMPTY;\n        const accordionHideToggleChange = panel.accordion ?\n            panel.accordion._stateChanges.pipe(filter(changes => !!(changes['hideToggle'] || changes['togglePosition']))) :\n            EMPTY;\n        // Since the toggle state depends on an @Input on the panel, we\n        // need to subscribe and trigger change detection manually.\n        this._parentChangeSubscription =\n            merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter(changes => {\n                return !!(changes['hideToggle'] ||\n                    changes['disabled'] ||\n                    changes['togglePosition']);\n            })))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        // Avoids focus being lost if the panel contained the focused element and was closed.\n        panel.closed\n            .pipe(filter(() => panel._containsFocus()))\n            .subscribe(() => _focusMonitor.focusVia(_element, 'program'));\n        if (defaultOptions) {\n            this.expandedHeight = defaultOptions.expandedHeight;\n            this.collapsedHeight = defaultOptions.collapsedHeight;\n        }\n    }\n    /**\n     * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n     * @docs-private\n     */\n    get disabled() {\n        return this.panel.disabled;\n    }\n    /** Toggles the expanded state of the panel. */\n    _toggle() {\n        if (!this.disabled) {\n            this.panel.toggle();\n        }\n    }\n    /** Gets whether the panel is expanded. */\n    _isExpanded() {\n        return this.panel.expanded;\n    }\n    /** Gets the expanded state string of the panel. */\n    _getExpandedState() {\n        return this.panel._getExpandedState();\n    }\n    /** Gets the panel id. */\n    _getPanelId() {\n        return this.panel.id;\n    }\n    /** Gets the toggle position for the header. */\n    _getTogglePosition() {\n        return this.panel.togglePosition;\n    }\n    /** Gets whether the expand indicator should be shown. */\n    _showToggle() {\n        return !this.panel.hideToggle && !this.panel.disabled;\n    }\n    /**\n     * Gets the current height of the header. Null if no custom height has been\n     * specified, and if the default height from the stylesheet should be used.\n     */\n    _getHeaderHeight() {\n        const isExpanded = this._isExpanded();\n        if (isExpanded && this.expandedHeight) {\n            return this.expandedHeight;\n        }\n        else if (!isExpanded && this.collapsedHeight) {\n            return this.collapsedHeight;\n        }\n        return null;\n    }\n    /** Handle keydown event calling to toggle() if appropriate. */\n    _keydown(event) {\n        switch (event.keyCode) {\n            // Toggle for space and enter keys.\n            case SPACE:\n            case ENTER:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this._toggle();\n                }\n                break;\n            default:\n                if (this.panel.accordion) {\n                    this.panel.accordion._handleHeaderKeydown(event);\n                }\n                return;\n        }\n    }\n    /**\n     * Focuses the panel header. Implemented as a part of `FocusableOption`.\n     * @param origin Origin of the action that triggered the focus.\n     * @docs-private\n     */\n    focus(origin = 'program', options) {\n        this._focusMonitor.focusVia(this._element, origin, options);\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._element).subscribe(origin => {\n            if (origin && this.panel.accordion) {\n                this.panel.accordion._handleHeaderFocus(this);\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._parentChangeSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._element);\n    }\n}\nMatExpansionPanelHeader.ɵfac = function MatExpansionPanelHeader_Factory(t) { return new (t || MatExpansionPanelHeader)(ɵngcc0.ɵɵdirectiveInject(MatExpansionPanel, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatExpansionPanelHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanelHeader, selectors: [[\"mat-expansion-panel-header\"]], hostAttrs: [\"role\", \"button\", 1, \"mat-expansion-panel-header\", \"mat-focus-indicator\"], hostVars: 15, hostBindings: function MatExpansionPanelHeader_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatExpansionPanelHeader_click_HostBindingHandler() { return ctx._toggle(); })(\"keydown\", function MatExpansionPanelHeader_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.panel._headerId)(\"tabindex\", ctx.disabled ? -1 : 0)(\"aria-controls\", ctx._getPanelId())(\"aria-expanded\", ctx._isExpanded())(\"aria-disabled\", ctx.panel.disabled);\n        ɵngcc0.ɵɵstyleProp(\"height\", ctx._getHeaderHeight());\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx._isExpanded())(\"mat-expansion-toggle-indicator-after\", ctx._getTogglePosition() === \"after\")(\"mat-expansion-toggle-indicator-before\", ctx._getTogglePosition() === \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { expandedHeight: \"expandedHeight\", collapsedHeight: \"collapsedHeight\" }, ngContentSelectors: _c4, decls: 5, vars: 1, consts: [[1, \"mat-content\"], [\"class\", \"mat-expansion-indicator\", 4, \"ngIf\"], [1, \"mat-expansion-indicator\"]], template: function MatExpansionPanelHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, MatExpansionPanelHeader_span_4_Template, 1, 1, \"span\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._showToggle());\n    } }, directives: [ɵngcc4.NgIf], styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\\n\"], encapsulation: 2, data: { animation: [\n            matExpansionAnimations.indicatorRotate,\n        ] }, changeDetection: 0 });\nMatExpansionPanelHeader.ctorParameters = () => [\n    { type: MatExpansionPanel, decorators: [{ type: Host }] },\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatExpansionPanelHeader.propDecorators = {\n    expandedHeight: [{ type: Input }],\n    collapsedHeight: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-expansion-panel-header',\n                template: \"<span class=\\\"mat-content\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n<span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\"\\n      class=\\\"mat-expansion-indicator\\\"></span>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [\n                    matExpansionAnimations.indicatorRotate,\n                ],\n                host: {\n                    'class': 'mat-expansion-panel-header mat-focus-indicator',\n                    'role': 'button',\n                    '[attr.id]': 'panel._headerId',\n                    '[attr.tabindex]': 'disabled ? -1 : 0',\n                    '[attr.aria-controls]': '_getPanelId()',\n                    '[attr.aria-expanded]': '_isExpanded()',\n                    '[attr.aria-disabled]': 'panel.disabled',\n                    '[class.mat-expanded]': '_isExpanded()',\n                    '[class.mat-expansion-toggle-indicator-after]': `_getTogglePosition() === 'after'`,\n                    '[class.mat-expansion-toggle-indicator-before]': `_getTogglePosition() === 'before'`,\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[style.height]': '_getHeaderHeight()',\n                    '(click)': '_toggle()',\n                    '(keydown)': '_keydown($event)'\n                },\n                styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\\n\"]\n            }]\n    }], function () { return [{ type: MatExpansionPanel, decorators: [{\n                type: Host\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { expandedHeight: [{\n            type: Input\n        }], collapsedHeight: [{\n            type: Input\n        }] }); })();\n/**\n * Description element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelDescription {\n}\nMatExpansionPanelDescription.ɵfac = function MatExpansionPanelDescription_Factory(t) { return new (t || MatExpansionPanelDescription)(); };\nMatExpansionPanelDescription.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelDescription, selectors: [[\"mat-panel-description\"]], hostAttrs: [1, \"mat-expansion-panel-header-description\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelDescription, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-description',\n                host: {\n                    class: 'mat-expansion-panel-header-description'\n                }\n            }]\n    }], null, null); })();\n/**\n * Title element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelTitle {\n}\nMatExpansionPanelTitle.ɵfac = function MatExpansionPanelTitle_Factory(t) { return new (t || MatExpansionPanelTitle)(); };\nMatExpansionPanelTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelTitle, selectors: [[\"mat-panel-title\"]], hostAttrs: [1, \"mat-expansion-panel-header-title\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelTitle, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-title',\n                host: {\n                    class: 'mat-expansion-panel-header-title'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive for a Material Design Accordion.\n */\nclass MatAccordion extends CdkAccordion {\n    constructor() {\n        super(...arguments);\n        /** Headers belonging to this accordion. */\n        this._ownHeaders = new QueryList();\n        this._hideToggle = false;\n        /**\n         * Display mode used for all expansion panels in the accordion. Currently two display\n         * modes exist:\n         *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n         *     panel at a different elevation from the rest of the accordion.\n         *  flat - no spacing is placed around expanded panels, showing all panels at the same\n         *     elevation.\n         */\n        this.displayMode = 'default';\n        /** The position of the expansion indicator. */\n        this.togglePosition = 'after';\n    }\n    /** Whether the expansion indicator should be hidden. */\n    get hideToggle() { return this._hideToggle; }\n    set hideToggle(show) { this._hideToggle = coerceBooleanProperty(show); }\n    ngAfterContentInit() {\n        this._headers.changes\n            .pipe(startWith(this._headers))\n            .subscribe((headers) => {\n            this._ownHeaders.reset(headers.filter(header => header.panel.accordion === this));\n            this._ownHeaders.notifyOnChanges();\n        });\n        this._keyManager = new FocusKeyManager(this._ownHeaders).withWrap().withHomeAndEnd();\n    }\n    /** Handles keyboard events coming in from the panel headers. */\n    _handleHeaderKeydown(event) {\n        this._keyManager.onKeydown(event);\n    }\n    _handleHeaderFocus(header) {\n        this._keyManager.updateActiveItem(header);\n    }\n}\nMatAccordion.ɵfac = function MatAccordion_Factory(t) { return ɵMatAccordion_BaseFactory(t || MatAccordion); };\nMatAccordion.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAccordion, selectors: [[\"mat-accordion\"]], contentQueries: function MatAccordion_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelHeader, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headers = _t);\n    } }, hostAttrs: [1, \"mat-accordion\"], hostVars: 2, hostBindings: function MatAccordion_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-accordion-multi\", ctx.multi);\n    } }, inputs: { multi: \"multi\", displayMode: \"displayMode\", togglePosition: \"togglePosition\", hideToggle: \"hideToggle\" }, exportAs: [\"matAccordion\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_ACCORDION,\n                useExisting: MatAccordion\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatAccordion.propDecorators = {\n    _headers: [{ type: ContentChildren, args: [MatExpansionPanelHeader, { descendants: true },] }],\n    hideToggle: [{ type: Input }],\n    displayMode: [{ type: Input }],\n    togglePosition: [{ type: Input }]\n};\nconst ɵMatAccordion_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatAccordion);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-accordion',\n                exportAs: 'matAccordion',\n                inputs: ['multi'],\n                providers: [{\n                        provide: MAT_ACCORDION,\n                        useExisting: MatAccordion\n                    }],\n                host: {\n                    class: 'mat-accordion',\n                    // Class binding which is only used by the test harness as there is no other\n                    // way for the harness to detect if multiple panel support is enabled.\n                    '[class.mat-accordion-multi]': 'this.multi'\n                }\n            }]\n    }], null, { displayMode: [{\n            type: Input\n        }], togglePosition: [{\n            type: Input\n        }], hideToggle: [{\n            type: Input\n        }], _headers: [{\n            type: ContentChildren,\n            args: [MatExpansionPanelHeader, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatExpansionModule {\n}\nMatExpansionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatExpansionModule });\nMatExpansionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatExpansionModule_Factory(t) { return new (t || MatExpansionModule)(); }, imports: [[CommonModule, CdkAccordionModule, PortalModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatExpansionModule, { declarations: function () { return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent]; }, imports: function () { return [CommonModule, CdkAccordionModule, PortalModule]; }, exports: function () { return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, CdkAccordionModule, PortalModule],\n                exports: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ],\n                declarations: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EXPANSION_PANEL_ANIMATION_TIMING, MAT_ACCORDION, MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MatAccordion, MatExpansionModule, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelContent, MatExpansionPanelDescription, MatExpansionPanelHeader, MatExpansionPanelTitle, matExpansionAnimations, ɵ0 };\n\n//# sourceMappingURL=expansion.js.map"]}