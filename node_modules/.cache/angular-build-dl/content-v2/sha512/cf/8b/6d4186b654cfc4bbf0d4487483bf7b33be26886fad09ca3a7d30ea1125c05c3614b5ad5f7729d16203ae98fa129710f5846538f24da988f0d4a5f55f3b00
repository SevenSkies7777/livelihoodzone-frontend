{"version":3,"sources":["webpack:///src/@fuse/components/stepper-wrapper/components/form-wrapper/form-wrapper.component.html","webpack:///src/@fuse/components/stepper-wrapper/components/form-wrapper/form-wrapper.component.ts","webpack:///src/@fuse/components/stepper-wrapper/components/list-wrapper/list-wrapper.component.html","webpack:///src/@fuse/components/stepper-wrapper/components/list-wrapper/list-wrapper.component.ts","webpack:///src/@fuse/components/stepper-wrapper/components/attachments-wrapper/attachments-wrapper.component.html","webpack:///src/@fuse/components/stepper-wrapper/components/attachments-wrapper/attachments-wrapper.component.ts","webpack:///src/@fuse/components/stepper-wrapper/components/inline-list-wrapper/inline-list-wrapper.component.html","webpack:///src/@fuse/components/stepper-wrapper/components/inline-list-wrapper/inline-list-wrapper.component.ts","webpack:///src/@fuse/components/stepper-wrapper/components/nested-inline-list/nested-inline-list.component.html","webpack:///src/@fuse/components/stepper-wrapper/components/nested-inline-list/nested-inline-list.component.ts","webpack:///src/@fuse/components/stepper-wrapper/components/main-wrapper/main-wrapper.component.html","webpack:///src/@fuse/components/stepper-wrapper/components/main-wrapper/main-wrapper.component.ts","webpack:///src/@fuse/components/stepper-wrapper/services/stepper-wrapper.service.ts","webpack:///src/@fuse/components/stepper-wrapper/constants/steps.config.ts","webpack:///src/@fuse/components/stepper-wrapper/constants/appplication.constant.ts","webpack:///src/@fuse/components/stepper-wrapper/constants/organization.constant.ts","webpack:///src/@fuse/components/stepper-wrapper/stepper-wrapper.module.ts"],"names":["FormWrapperComponent","_router","_route","_authConfig","_dataLayer","tabbed","onNavigate","item","organization","configs","direction","this","emit","showModal","resp","params","id","showToast","model","store","modelId","addStore","editStore","paramsObj","isUndefined","key","value","create","subscribe","postCrud","err","console","log","update","$event","stepperNext","opts","current_org_id","inlineConfs","getStore","get","readItem","queryParams","multistepConfig","back","current","parseInt","ind","steps","count","formConf","formStore","inlineConf","getItem","orgObj","JSON","parse","getOrganization","getConfs","ListWrapperComponent","headers","rows","actions","context","has","listParams","orgId","setCmptParams","loading","findIndex","isLast","length","gridConf","name","getItemId","changeStep","AttachmentsWrapper","list","attachmentsList","files","fileFormat","file","target","attachment_type","budget","itemId","attachmentObj","attachment","org_budget","formData","FormData","append","uploadLoader","uploadFile","attachmentStore","openDynamicSnackBar","getBudgetAttachments","docType","fileFormData","document_type","getApplicationAttachments","appAttachments","map","docTypeObj","linkedFile","find","localStorage","obj","fileResp","push","org_type__org_type_code","org_type","getDocumentTypes","InlineListWrapper","showForm","getRelatedList","updateListItem","addListItem","NestedInlineList","nestedList","cmptParams","actActions","allowanceId","selected","active","selectedAllowance","presetAllowance","indexOf","currInd","orgType","text","icon","iconClass","status","bpType","filter","act","orgInd","statusInd","oldInd","getNestedList","budget_activity_allowance","loadActions","budget_activity","activity","setSelected","getMainList","MainStepperWrapperComponent","_datalayer","_stepperService","otherParams","routeParams","navigate","furthest","currentStep","cmpt","step","setFurthest","furthestStep","indVal","done","template","qParams","keys","aKey","originalSteps","setTimeout","navigateByUrl","listRoute","goToNext","goToPrev","data","stepsCont","getSteps","checkStep","user","getUser","isEdit","url","includes","setParams","StepperWrapperService","StepsConfig","label","shortLabel","help_text","cancelTxt","nextTxt","modelKey","topActions","btnText","action","conf","type","fieldType","primaryField","title","oderable","searchable","disableStatus","modalConf","titleKey","class","width","secondaryField","headerAction","stepsArray","StepperWrapperModule"],"mappings":"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","file":"x","sourcesContent":["<div class=\"w-100-p\">\n    <div class=\"title-cont py-12 px-32 border-bottom\">\n        <div class=\"font-size-18 text-muted\">\n            Manage Details\n        </div>\n    </div>\n    <div class=\"w-100-p px-32 pb-12 pt-20\">\n        <div class=\"w-100-p\" *ngIf=\"configs && formStore\">\n            <dynamic-form [model]=\"item\"\n            btnClass=\"tiny mr-3\" [submitted]=\"submitted\" \n            [cancelBtn]=\"true\" btnStatus=\"primary\"\n            [store]=\"formStore\" \n            [stepConfig]=\"configs\"\n            [multiStep]=\"multistepConfig\"\n            [cancelTxt]=\"configs?.cancelTxt\"\n            [btnTxt]=\"configs?.nextTxt\"\n            (onBack)=\"stepBack()\"\n            (onPrestine)=\"noChanges($event)\"\n            (submitModel)=\"receiveModel($event)\">\n            </dynamic-form>\n        </div>\n    </div>\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ActivatedRoute, Router, NavigationEnd } from '@angular/router';\nimport { registerLocaleData }  from '@angular/common';\nimport * as _ from 'lodash';\nimport { DataLayerService } from 'app/services/http/dataLayer.service';\nimport { Authorization } from 'app/services/authorization.service';\nimport { isUndefined } from 'lodash';\n\n@Component({\n    selector: 'form-wrapper',\n    templateUrl: 'form-wrapper.component.html',\n    styleUrls: ['form-wrapper.component.scss'],\n    providers: [DataLayerService],\n})\n\nexport class FormWrapperComponent implements OnInit {\n    @Input() steps: Array<any>;\n    @Input() current: any;\n    @Input() tabbed: boolean = false;\n\n\n    @Output() onNavigate = new EventEmitter();\n\n    multistepConfig: any;\n    submitted: boolean;\n    error: any;\n    errors: any;\n    item: any = {};\n    organization: any = {};\n    readItem: any;\n    showModal: boolean;\n    modelId: any;\n\n    itemId: number;\n    formStore: string;\n    configs: any;\n    inlineConfs: any;\n\n    constructor(\n        private _router: Router,\n        private _route: ActivatedRoute,\n        private _authConfig: Authorization,\n        private _dataLayer: DataLayerService,\n    ) {}\n\n    showToast(configs?) {\n\n    }\n\n    stepperNext(direction) {\n        this.onNavigate.emit(direction);\n    }\n\n    stepBack() {\n        this.onNavigate.emit('prev');\n    }\n\n    toggleModal() {\n        this.showModal = !this.showModal;\n    }\n\n    postCrud(resp) {\n        const paramObj = { id: resp['id'] };\n        const evtObj = { direction: 'next', params: paramObj };\n        this.onNavigate.emit(evtObj);\n        this.showToast();\n    }\n\n    receiveModel(model) {\n        const store = _.isUndefined(this.modelId)\n            ? this.configs.addStore : this.configs.editStore;\n        const paramsObj = !isUndefined(this.organization)\n            ? { key: 'current_org_id', value: this.organization }\n            : {} ;\n        if (_.isUndefined(this.modelId)) {\n            model = { ...model, organization: this.organization };\n            this._dataLayer.create(store, model, undefined, paramsObj)\n            .subscribe(resp => {\n                this.postCrud(resp);\n            }, err => console.log(err));\n        } else {\n            this._dataLayer.update(store, this.modelId, model, paramsObj)\n            .subscribe(resp => {\n                this.postCrud(resp);\n            }, err => console.log(err));\n        }\n    }\n\n    noChanges($event) {\n        this.stepperNext('next');\n    }\n\n    getItem(params) {\n        this.item = {};\n        if (_.has(params, 'id')) {\n            this.modelId = params.id;\n            const opts = { current_org_id: this.organization };\n            const store = !_.isUndefined(this.configs)\n                ? this.configs.getStore : this.inlineConfs.getStore;\n            this._dataLayer.get(store, this.modelId, opts)\n            .subscribe(resp => {\n                this.readItem = resp;\n                this.item = resp;\n            }, err => console.log(err));\n        }\n    }\n\n    getConfs() {\n        this._route.queryParams.subscribe(params => {\n            if (this.tabbed) {\n\n            } else {\n                this.multistepConfig = { back: {} };\n                const current = parseInt(params['current'], 10);\n                const ind = _.findIndex(this.steps, { count: current });\n                if (_.has(this.steps[ind], 'formConf')) {\n                    this.configs = this.steps[ind].formConf;\n                    this.formStore = this.configs.store;\n                }\n                if (_.has(this.steps[ind], 'inlineConf')) {\n                    this.inlineConfs = this.steps[ind].inlineConf;\n                }\n                this.getItem(params);\n            }\n        });\n    }\n\n    ngOnInit() {\n        const orgObj = JSON.parse(\n            this._authConfig.getOrganization());\n        \n        this.organization = !_.isUndefined(orgObj) && !_.isNull(orgObj) \n            ? orgObj['organization'] : null;\n        this.getConfs();\n    }\n}","<div *ngIf=\"loading\" class=\"w-100-p\">\n    <div class=\"w-100-p d-flex justify-content-center py-28\">\n        <mat-spinner diameter=\"45\"></mat-spinner>\n    </div>\n</div>\n<div class=\"w-100-p\" *ngIf=\"item?.id\">\n    <dynamic-table title=\"Listing\"\n    [tabbedItem]=\"item\" [modelKey]=\"configs?.modelKey\"\n    [cmptParams]=\"configs?.cmptParams\"\n    class=\"w-100-p\" [addOrg]=\"true\"\n    [headers]=\"configs?.headers\" [no-card]=\"true\"\n    [has-action]=\"true\" [store]=\"configs?.getStore\"\n    [topActions]=\"configs?.topActions\" [hasSearch]=\"true\"\n    [actions]=\"configs?.actions\" [rows]=\"configs.rows\">\n    </dynamic-table>\n</div>\n<div class=\"btn-cont px-20 pb-12 pt-3 border-top\">\n    <div class=\"btn-cont mb-3 pt-12 w-100-p\n    d-flex justify-content-between\">\n        <button mat-raised-button\n        class=\"float-left\"\n        (click)=\"changeStep('prev')\">\n        <mat-icon class=\"btn-icon\">keyboard_arrow_left</mat-icon>\n        <mat-icon class=\"btn-icon\">keyboard_arrow_left</mat-icon>\n            &nbsp;&nbsp;BACK\n        </button>\n        <button mat-raised-button\n        *ngIf=\"!isLast\"\n        class=\"mt-10 float-right mr-0\"\n        color=\"accent\" \n        (click)=\"changeStep('next')\">\n            NEXT&nbsp;\n            <mat-icon class=\"btn-icon\">keyboard_arrow_right</mat-icon>\n            <mat-icon class=\"btn-icon\">keyboard_arrow_right</mat-icon>\n        </button>\n        <button mat-raised-button\n        *ngIf=\"isLast\" color=\"success\"\n        class=\"mt-10 float-right mr-0\"\n        (click)=\"changeStep('next')\">\n            COMPLETE\n        </button>\n    </div>\n</div>","import { Component, EventEmitter, Input, OnInit, Output }  from '@angular/core'\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Authorization } from 'app/services/authorization.service';\n\nimport { DataLayerService } from 'app/services/http/dataLayer.service';\nimport { findIndex, get, has } from 'lodash';\n\n@Component({\n    selector: 'list-wrapper',\n    templateUrl: 'list-wrapper.component.html',\n    styleUrls: ['list-wrapper.component.scss'],\n})\n\nexport class ListWrapperComponent implements OnInit {\n    @Input() steps: Array<any>;\n    @Input() current: any;\n\n    @Output() onNavigate = new EventEmitter();\n\n    multistepConfig: any;\n    submitted: any;\n    error: any;\n    errors: any;\n    item: any;\n    showModal: boolean;\n    loading: boolean;\n    modalConf: any;\n    configs: any;\n    isLast: any;\n\n    constructor(\n        private _route: ActivatedRoute,\n        private _authConfig: Authorization,\n        private _dataLayer: DataLayerService,\n    ) {}\n\n    headers: Array<any> =[];\n    rows: Array<any> = [];\n    actions: Array<any> = [];\n\n    toggleModal() {\n        this.showModal = !this.showModal;\n    }\n\n    changeStep(context) {\n        this.onNavigate.emit(context);\n    }\n\n    setCmptParams() {\n        if(has(this.configs, 'modelKey')) {\n            const listParams = get(this.configs, 'listParams', {});\n            this.configs['cmptParams'] = {\n                ...listParams,\n                [this.configs['modelKey']]: this.item['id']\n            }\n        }\n    }\n\n    getItem(params) {\n        const orgId = get(JSON.parse(\n            this._authConfig.getOrganization()), 'organization');\n        const opts = { current_org_id: orgId };\n        this._dataLayer.get(this.configs.store, params.id, opts)\n        .subscribe(resp => {\n            this.item = resp;\n            this.setCmptParams();\n            this.loading = false;\n        }, err => {\n            console.log(err);\n            this.loading = false;\n        });\n    }\n\n    getItemId() {\n        this._route.queryParams.subscribe(params => {\n            const current = parseInt(params.current, 10);\n            const ind = findIndex(this.steps, { count: current });\n            this.isLast = this.steps.length === ind + 1;\n            this.configs = this.steps[ind].gridConf;\n            this.loading = true;\n            this.getItem(params);\n        })\n    }\n\n    ngOnInit() {\n        this.multistepConfig = {\n            back: { name: 'CANCEL' }\n        };\n        this.getItemId();\n    }\n}","<div class=\"w-100-p\">\n    <div class=\"card\">\n        <div class=\"card-header bg-white\">\n            <div class=\"title flex-fill font-weight-600 font-size-16 \n            pt-2 pl-3 d-flex align-items-center\">\n                <div>\n                    <mat-icon>attachment</mat-icon>&nbsp;\n                </div>\n                <div class=\"flex-fill pl-3 mt-n2\">Attachments</div>\n                <div class=\"actions\" *ngIf=\"configs?.headerAction\">\n                    <input type=\"file\" [hidden]=\"true\" class=\"ng-hide\"\n                    id=\"input-file-id\" (change)=\"budgetAttachmentUpload($event)\">\n                    <label for=\"input-file-id\" class=\"mat-button \n                    mat-stroked-button md-primary d-flex pl-3\"\n                    [class.spinner]=\"uploadLoader\">\n                        <mat-icon class=\"mt-2\">cloud_upload</mat-icon>&nbsp;\n                        &nbsp;UPLOAD FILE\n                    </label>\n                </div>\n            </div>\n        </div>\n        <div class=\"card-body p-0\">\n            <div>\n                <table class=\"table borderless\">\n                    <thead class=\"thead-light\"\n                    *ngIf=\"!configs?.attachmentStore\">\n                        <th class=\"pl-24\">\n                            File\n                        </th>\n                        <th>\n                            Required\n                        </th>\n                        <th>\n                            Description\n                        </th>\n                        <th style=\"width:1px;\">\n                            Action\n                        </th>\n                    </thead>\n                    <tbody *ngIf=\"!configs?.attachmentStore\">\n                        <tr *ngFor=\"let attachment of list;let i = index\">\n                            <td class=\"pl-24 valign-middle\" valign=\"middle\">\n                                {{ attachment?.name }}\n                            </td>\n                            <td valign=\"middle\" class=\"valign-middle\">\n                                <span class=\"badge py-2 px-3 font-size-12 {{ \n                                    attachment?.required ? 'badge-danger' : 'badge-info'\n                                }}\" *ngIf=\"!attachment?.attachment_data\">\n                                    {{ attachment?.required ? 'Required' : 'Not Required' }}\n                                </span>\n                                <span class=\"badge badge-success \n                                py-2 px-3 font-size-12\" \n                                *ngIf=\"attachment?.attachment_data\">\n                                    Uploaded\n                                </span>\n                            </td>\n                            <td class=\"valign-middle\" valign=\"middle\">\n                                {{ attachment?.description }}\n                            </td>\n                            <td class=\"pr-24\">\n                                <input [hidden]=\"true\" class=\"ng-hide\" id=\"input-file-id-{{i}}\"\n                                (change)=\"fileChange($event, attachment)\" type=\"file\" />\n                                <label for=\"input-file-id-{{i}}\" class=\"mat-button \n                                mat-stroked-button md-primary d-flex\"\n                                *ngIf=\"!attachment?.attachment_data\">\n                                    <mat-icon class=\"mt-2\">cloud_upload</mat-icon>&nbsp;\n                                    Upload\n                                </label>\n                                <a mat-stroked-button download target=\"_blank\"\n                                *ngIf=\"attachment?.attachment_data\"\n                                [attr.href]=\"attachment?.attachment_data['file']\">\n                                    <mat-icon>cloud_download</mat-icon>&nbsp;\n                                    Download\n                                </a>\n                            </td>\n                        </tr>\n                        <tr *ngIf=\"!list?.length && !loading\">\n                            <td colspan=\"3\" class=\"pb-0 mb-0 pl-24\">\n                                <div class=\"w-100-p px-3\">\n                                    <div class=\"alert alert-primary mb-0 pb-2 pt-3\">\n                                        <div class=\"d-flex align-items-center\">\n                                            <div class=\"pr-20\">\n                                                <mat-icon>\n                                                    info_circle\n                                                </mat-icon>\n                                            </div>\n                                            <div class=\"flex-fill\">\n                                                There is currently no documents setup for this organization.\n                                                Kindly contact the administrator\n                                            </div>\n                                            <div class=\"pr-8\">\n                                                <button mat-raised-button color=\"default\"\n                                                (click)=\"toggleCreateForm()\" class=\"pl-3 mt-n2\">\n                                                    <mat-icon>add</mat-icon>&nbsp;\n                                                    ADD ACCOUNT\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                    <thead class=\"thead-light\"\n                    *ngIf=\"configs?.attachmentStore\">\n                        <th class=\"pl-24\">\n                            Name\n                        </th>\n                        <th>\n                            Uploaded At\n                        </th>\n                        <th style=\"width:1px;\">\n                            Action\n                        </th>\n                    </thead>\n                    <tbody *ngIf=\"configs?.attachmentStore\">\n                        <tr *ngFor=\"let attachment of list\">\n                            <td class=\"pl-20\"\n                            *ngIf=\"attachment?.file\">\n                                {{ attachment?.file.name || 'Unknown' }}\n                            </td>\n                            <td class=\"pl-20\"\n                            *ngIf=\"attachment?.file\">\n                                {{ attachment?.file.created | date: 'medium' }}\n                                <mat-icon *ngIf=\"!attachment?.file.created\">\n                                    remove\n                                </mat-icon>\n                            </td>\n                            <td class=\"pr-20\" style=\"width: 1px;\">\n                                <a mat-raised-button download \n                                target=\"_blank\"\n                                [attr.href]=\"attachment?.file.file\" >\n                                    <mat-icon>cloud_download</mat-icon>\n                                    &nbsp;Download\n                                </a>\n                            </td>\n                        </tr>\n                        <tr *ngIf=\"!attachmentsList?.length\">\n                            <td colspan=\"3\" class=\"pb-0 mb-0\">\n                                <div class=\"w-100-p px-3\">\n                                    <div class=\"alert alert-primary mb-0 pb-2 pt-3\">\n                                        <div class=\"d-flex\">\n                                            <div class=\"pr-20\">\n                                                <mat-icon>\n                                                    info_circle\n                                                </mat-icon>\n                                            </div>\n                                            <div>\n                                                There are currently no \n                                                attachments for this {{ context }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"btn-cont px-20 pb-12 pt-3 border-top\">\n    <div class=\"btn-cont mb-3 pt-12 w-100-p\n    d-flex justify-content-between\">\n        <button mat-raised-button\n        class=\"float-left\"\n        (click)=\"changeStep('prev')\">\n        <mat-icon class=\"btn-icon\">keyboard_arrow_left</mat-icon>\n        <mat-icon class=\"btn-icon\">keyboard_arrow_left</mat-icon>\n            &nbsp;BACK\n        </button>\n        <button mat-raised-button\n        *ngIf=\"!isLast\"\n        class=\"mt-10 float-right mr-0\"\n        color=\"accent\" \n        (click)=\"changeStep('next')\">\n            NEXT&nbsp;\n            <mat-icon class=\"btn-icon\">keyboard_arrow_right</mat-icon>\n            <mat-icon class=\"btn-icon\">keyboard_arrow_right</mat-icon>\n        </button>\n        <button mat-raised-button\n        *ngIf=\"isLast\" color=\"success\"\n        class=\"mt-10 float-right mr-0\"\n        (click)=\"changeStep('next')\">\n            COMPLETE\n        </button>\n    </div>\n</div>","import { Component, Input, OnInit, Output, EventEmitter }  from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { DataLayerService } from 'app/services/http/dataLayer.service';\nimport { Authorization } from 'app/services/authorization.service';\n\nimport { findIndex, find, isUndefined, has } from 'lodash';\n\n@Component({\n    selector: 'attachment-wrapper',\n    templateUrl: 'attachments-wrapper.component.html',\n    styleUrls: ['../list-wrapper/list-wrapper.component.scss', \n        'attachments-wrapper.component.scss'],\n})\n\nexport class AttachmentsWrapper implements OnInit {\n    @Input() steps: any;\n    @Input() current: any;\n\n    @Output() onNavigate = new EventEmitter();\n\n    configs: any;\n    organization: any;\n    list: Array<any> = [];\n    attachmentsList: Array<any> = [];\n    loading: boolean = true;\n    uploadLoader: boolean;\n    isLast: boolean = false;\n    itemId: any;\n\n    constructor(private _route: ActivatedRoute,\n        private _authConfig: Authorization,\n        private _dataLayer: DataLayerService) {}\n\n    changeStep(context) {\n        this.onNavigate.emit(context);\n    }\n\n    budgetAttachmentUpload(files) {\n        const file = files.target.files[0];\n        const fileFormat = {\n            file,\n            attachment_type: 'ORGANIZATION_BUDGET',\n            budget: this.itemId,\n        };\n        let attachmentObj = {\n            attachment: '',\n            organization: this.organization['organization'],\n            org_budget: this.itemId,\n        };\n        const formData = new FormData();\n        formData.append('file', fileFormat.file);\n        formData.append('attachment_type', fileFormat.attachment_type);\n        this.uploadLoader = true;\n        this._dataLayer.uploadFile('attachments', formData)\n            .subscribe(resp => {\n                attachmentObj = { ...attachmentObj, attachment: resp['id'] };\n                const params = { \n                    key: 'current_org_id', \n                    value: this.organization['organization' ]\n                };\n                this._dataLayer.create(this.configs.attachmentStore, attachmentObj, undefined, params)\n                    .subscribe(resp => {\n                        const msg = 'File succesfully uploaded';\n                        this._dataLayer.openDynamicSnackBar(msg, 'success');\n                        this.getBudgetAttachments();\n                        this.uploadLoader = false;\n                    }, err => {\n                        console.log(err);\n                        const msg = 'An error occurred while uploading file. Kindly try again';\n                        this._dataLayer.openDynamicSnackBar(msg, 'error');\n                        this.uploadLoader = false;\n                    })\n            }, err => {\n                this.uploadLoader = false;\n                console.log(err);\n            })\n    }\n\n    fileChange(files, docType) {\n        const file = files.target.files[0];\n        const fileFormData = {\n            file,\n            attachment_type: 'APPLICATION_DOCUMENT',\n            document_type: docType.id,\n            organization: this.organization['organization'],\n        };\n        const formData = new FormData();\n        formData.append('file', fileFormData.file);\n        formData.append('attachment_type', fileFormData.attachment_type);\n\n        let attachmentObj = {\n            attachment: '',\n            organization: this.organization['organization'],\n            // application: this.itemId,\n            document_type: fileFormData.document_type\n        };\n        this._dataLayer.uploadFile('attachments', formData)\n        .subscribe(resp => {\n            const params = { \n                key: 'current_org_id', \n                value: this.organization['organization' ]\n            };\n            attachmentObj = { ...attachmentObj, attachment: resp['id'] };\n            this._dataLayer.create('organization-attachments', attachmentObj, undefined, params)\n            .subscribe(resp => {\n                console.log(resp);\n                this.getApplicationAttachments();\n            }, err => console.log(err));\n        }, err => console.log(err));\n    }\n\n    getApplicationAttachments() {\n        const params = {\n            organization: this.organization['organization'],\n            current_org_id: this.organization['organization'],\n        }\n        this._dataLayer.list('organization-attachments', params)\n        .subscribe(resp => {\n            const appAttachments = resp['results'];\n            this.list = this.list.map(docTypeObj => {\n                const linkedFile = find(appAttachments, { \n                    document_type: docTypeObj['id']\n                });\n                if (!isUndefined(linkedFile)) {\n                    docTypeObj['fileObj'] = linkedFile;\n                    docTypeObj['linkedAttachment'] = linkedFile['id'];\n                    docTypeObj['attachment_data'] = linkedFile['attachment_data'];\n                    return docTypeObj;\n                } else {\n                    return docTypeObj;\n                }\n            })\n        }, err => console.log(err));\n    }\n\n    getBudgetAttachments() {\n        this.organization = JSON.parse(localStorage.getItem('organization')) || {};\n        const params = {\n            current_org_id: this.organization['organization'],\n            org_budget: this.itemId,\n        };\n        this.loading = true;\n        this._dataLayer.list(this.configs.attachmentStore, { ...params })\n            .subscribe(resp => {\n                const attachArray = resp['results'];\n                attachArray.map(obj => {\n                    this._dataLayer.get('attachments', obj['attachment'],\n                    { current_org_id: this.organization['organization']})\n                    .subscribe(fileResp => {\n                        obj['file'] = fileResp;\n                        this.attachmentsList.push(obj);\n                        this.list.push(obj);\n                    })\n                });\n                this.loading = false;\n            }, err => {\n                console.log(err);\n                this.loading = false;\n                const msg = 'An error message occurred while retrieving list';\n                this._dataLayer.openDynamicSnackBar(msg, 'error');\n            })\n    }\n\n    getDocumentTypes() {\n        // TODO: Bring back once API fixed\n        const params = { \n            org_type__org_type_code: this.organization.org_type,\n            current_org_id: this.organization['organization'],\n        };\n        // const params = { };\n        this._dataLayer.list('document-types', { ...params })\n        .subscribe(resp => {\n            this.loading = false;\n            this.list = resp['results'];\n            this.getApplicationAttachments();\n        }, err => console.log(err));\n    }\n\n    getItem(params) {\n        this.organization = JSON.parse(localStorage.getItem('organization')) || {};\n        this.getDocumentTypes();\n    }\n\n    getItemId() {\n        this._route.queryParams.subscribe(params => {\n            const current = parseInt(params.current, 10);\n            this.itemId = params['id'];\n            const ind = findIndex(this.steps, { count: current });\n            this.isLast = this.steps.length === ind + 1;\n            this.configs = this.steps[ind].gridConf;\n            if (has(this.configs, 'attachmentStore')) {\n                this.getBudgetAttachments();\n            } else {\n                this.getItem(params);\n            }\n        })\n    }\n\n    ngOnInit() {\n        this.getItemId();\n    }\n}","<div class=\"card\">\n    <div class=\"card-header pt-3 bg-white\">\n        <div class=\"pl-3 text-muted font-weight-bold pb-2 d-flex\n        align-items-center\">\n            <div class=\"pt-2 pr-2\">\n                <mat-icon>account_balance</mat-icon>\n            </div>\n            <div>Bank Account</div>\n        </div>\n    </div>\n    <div class=\"card-body px-0 pb-3 pt-0\">\n        <div>\n            <table class=\"table borderless\">\n                <thead class=\"thead-light\">\n                    <tr>\n                        <th *ngFor=\"let header of gridConf\"\n                        class=\"pl-24\">\n                            {{ header.name }}\n                        </th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let anItem of list;let i = index;\">\n                        <td *ngFor=\"let data of gridConf\"\n                        [hidden]=\"showForm\"\n                        [class.pl-24]=\"i === 0\">\n                            {{ anItem[data.key] }}\n                            <mat-icon *ngIf=\"!anItem[data.key]\">\n                                remove\n                            </mat-icon>\n                        </td>\n                        <td [hidden]=\"showForm\">\n                            <button mat-stroked-button\n                            (click)=\"toggleForm(anItem)\"\n                            color=\"accent\">Edit</button>\n                        </td>\n                        <td [attr.colspan]=\"gridConf.length + 1\"\n                        class=\"bg-light-grey py-3 px-5\" *ngIf=\"showForm\">\n                            <div class=\"col-12 col-lg-8\"\n                            style=\"margin: auto;\">\n                                <mat-card class=\"card p-0\">\n                                    <div class=\"card-header py-0\">\n                                        <div class=\"d-flex\">\n                                            <div class=\"flex-fill pt-3\">\n                                                EDIT BANK DETAILS\n                                            </div>\n                                            <div>\n                                                <span style=\"cursor: pointer;\"\n                                                class=\"font-size-28 text-muted\"\n                                                (click)=\"toggleForm(anItem)\">\n                                                    &times;\n                                                </span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"card-body px-5 pt-5\">\n                                        <!-- TODO: Implement inline form -->\n                                        <dynamic-form btnText=\"SAVE\"\n                                        btnClass=\"tiny\" [model]=\"anItem\"\n                                        [submitted]=\"submitted\" [baseCancel]=\"true\"\n                                        store=\"organization-bank-accounts\" btnStatus=\"primary\"\n                                        (cancelFxn)=\"toggleForm(anItem)\"\n                                        (submitModel)=\"receiveModel($event)\">\n                                        </dynamic-form>\n                                    </div>\n                                </mat-card>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"list?.length === 0 && !loading\">\n                        <td  [attr.colspan]=\"gridConf.length + 1\"\n                        class=\"bg-light-grey py-3 px-5\">\n                            <div class=\"col-12 col-lg-8\"\n                            style=\"margin: auto;\">\n                                <mat-card class=\"card p-0\">\n                                    <div class=\"card-header pt-2 pb-16\">\n                                        <div class=\"d-flex\">\n                                            <div class=\"flex-fill pt-3\">\n                                                ADD BANK DETAILS\n                                            </div>\n                                            <div>\n                                                <!-- <span style=\"cursor: pointer;\"\n                                                class=\"font-size-28 text-muted\"\n                                                (click)=\"toggleForm(anItem)\">\n                                                    &times;\n                                                </span> -->\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"card-body px-5 pt-5\">\n                                        <!-- TODO: Implement inline form -->\n                                        <dynamic-form btnText=\"SAVE\"\n                                        btnClass=\"tiny\"\n                                        [submitted]=\"submitted\" \n                                        store=\"organization-bank-accounts\" \n                                        btnStatus=\"primary\"\n                                        (submitModel)=\"receiveModel($event)\">\n                                        </dynamic-form>\n                                    </div>\n                                </mat-card>\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n<div class=\"btn-cont px-20 pb-12 pt-3 border-top\">\n    <div class=\"btn-cont mb-3 pt-12 w-100-p\n    d-flex justify-content-between\">\n        <button mat-raised-button\n        class=\"float-left\"\n        (click)=\"changeStep('prev')\">\n        <mat-icon class=\"btn-icon\">keyboard_arrow_left</mat-icon>\n        <mat-icon class=\"btn-icon\">keyboard_arrow_left</mat-icon>\n            &nbsp;&nbsp;BACK\n        </button>\n        <button mat-raised-button\n        *ngIf=\"!isLast\"\n        class=\"mt-10 float-right mr-0\"\n        color=\"accent\" \n        (click)=\"changeStep('next')\">\n            NEXT&nbsp;\n            <mat-icon class=\"btn-icon\">keyboard_arrow_right</mat-icon>\n            <mat-icon class=\"btn-icon\">keyboard_arrow_right</mat-icon>\n        </button>\n        <button mat-raised-button\n        *ngIf=\"isLast\" color=\"success\"\n        class=\"mt-10 float-right mr-0\"\n        (click)=\"changeStep('next')\">\n            COMPLETE\n        </button>\n    </div>\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Authorization }  from 'app/services/authorization.service';\nimport { DataLayerService }  from 'app/services/http/dataLayer.service';\nimport { findIndex, get, has } from 'lodash';\n\n@Component({\n    selector: 'inline-list-wrapper',\n    templateUrl: 'inline-list-wrapper.component.html',\n    styleUrls: ['../list-wrapper/list-wrapper.component.scss'],\n})\n\nexport class InlineListWrapper implements OnInit {\n    @Input() steps: Array<any>;\n    @Input() current: any;\n\n    @Output() onNavigate = new EventEmitter();\n\n    multistepConfig: any;\n    list: Array<any>;\n    submitted: any;\n    item: any;\n    loading: boolean = true;\n    showForm: boolean;\n    isLast: boolean;\n    configs: any;\n    orgId: any;\n\n    gridConf: Array<any> = [\n        {\n            name: 'Account Name',\n            key: 'account_name',\n        },\n        {\n            name: 'Account #',\n            key: 'account_number',\n        },\n        {\n            name: 'Bank Name',\n            key: 'bank_name',\n        },\n        {\n            name: 'Branch Name',\n            key: 'branch_name',\n        }\n    ];\n\n    constructor(private _route: ActivatedRoute,\n        private _authConfig: Authorization,\n        private _dataLayer: DataLayerService) {}\n    \n    toggleForm() {\n        this.showForm = !this.showForm;\n    }\n\n    changeStep(context) {\n        this.onNavigate.emit(context);\n    }\n\n    addListItem(model) {\n        model = { ...model, organization: this.orgId };\n        this._dataLayer.create('organization-bank-accounts', model)\n        .subscribe(() => {\n            this.getRelatedList();\n            this.loading = false;\n        }, err => { this.loading = false; console.log(err)});\n    }\n\n    updateListItem(model) {\n        const params = { current_org_id: this.orgId };\n        this._dataLayer.update('organization-bank-account', \n        model.id, model, params).subscribe(() => {\n            this.getRelatedList();\n            this.loading = false;\n        }, err => { this.loading = false; console.log(err)});\n    }\n\n    receiveModel(model) {\n        if (has(model, 'id')) {\n            this.updateListItem(model);\n        } else {\n            this.addListItem(model);\n        }\n    }\n\n    getRelatedList(params?) {\n        const opts = {\n            organization: this.orgId, \n            current_org_id: this.orgId \n        };\n        this._dataLayer.list('organization-bank-accounts', opts)\n        .subscribe(resp => {\n            this.list = resp['results'];\n            this.loading = false;\n            this.showForm =  this.list.length > 0;\n        }, err => { this.loading = false; console.log(err)});\n    }\n\n    getItemId() {\n        this._route.queryParams.subscribe(params => {\n            const current = parseInt(params.current, 10);\n            this.orgId = parseInt(params['id'], 10);\n            const ind = findIndex(this.steps, { count: current });\n            this.isLast = this.steps.length === ind + 1;\n            this.configs = this.steps[ind].gridConf;\n            this.getRelatedList();\n        })\n    }\n\n    ngOnInit() {\n        this.getItemId();\n    }\n}","<div class=\"card main-wrapper\">\n    <div class=\"card-header pt-3 bg-white\">\n        <div class=\"pl-3 text-muted font-weight-bold pb-2 d-flex\n        align-items-center\">\n            <div class=\"pt-2 pr-2\">\n                <mat-icon>account_balance_wallet</mat-icon>\n            </div>\n            <div>\n                Allowances\n            </div>\n        </div>\n    </div>\n    <div class=\"card-body px-0 pb-0 pt-0\">\n        <div>\n            <!-- Start of content -->\n            <div class=\"w-100-p d-flex flex-row  px-0\">\n                <div class=\"h-100-p overflow-auto innerScroll\n                page-layout col-lg-3 main-list\">\n                    <div class=\"ps\">\n                        <div class=\"mail-list overflow-auto\"\n                        fuseperfectscrollbar>\n                            <div class=\"list-item\"\n                            *ngFor=\"let allowance of list;let i = index;\"\n                            [class.active]=\"allowance.active\"\n                            (click)=\"setSelected(allowance.id)\">\n                                <div class=\"pb-0\">\n                                    {{allowance?.allowance_data.name}}\n                                </div>\n                                <div class=\"d-flex flex-column align-items-start\">\n                                    <div class=\"d-flex flex-row align-items-center fullwidth ml-n1\">\n                                        <div class=\"pt-2\"><mat-icon class=\"font-size-18\n                                        text-muted\">attach_money</mat-icon>\n                                        </div>\n                                        <div class=\"font-size-14 text-muted pl-1\">\n                                            {{allowance?.actual_total | currency: 'Kshs '}}\n                                        </div>\n                                    </div>\n                                    <div class=\"d-flex flex-row align-items-center fullwidth pt-0 mt-n2\">\n                                        <div class=\"pt-2\"><mat-icon class=\"font-size-16\n                                            text-muted\">people</mat-icon>\n                                        </div>\n                                        <div class=\"font-size-14 text-muted\">\n                                            {{allowance?.head_count }} \n                                            <span class=\"font-weight-bold\">\n                                                &nbsp;For&nbsp;\n                                            </span>\n                                            {{allowance?.days | number: '1.0'}} day(s)\n                                        </div>\n                                    </div>\n                                </div>\n                                <!-- <div>\n                                    <span class=\"badge {{activity?.status | lowercase }}\n                                    font-size-10 pt-2 font-size-10 px-8\">\n                                        {{activity?.status | removeUnderscore}}\n                                    </span>\n                                </div> -->\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!-- Start of nested list content -->\n                <div class=\"col-lg-9 overflow-auto innerScroll px-0 mt-1\n                bg-light pb-12\"\n                *ngIf=\"selectedAllowance && !loading\">\n                    <div class=\"full-width bg-light px-16 pt-12 pb-2\">\n                        <mat-card class=\"mat-elevation-z1 p-0 mb-2 w-100-p\">\n                            <div class=\"card-header bg-white font-size-16\">\n                                <div class=\"d-flex flex-row\">\n                                    <div class=\"flex-fill pb-1 pl-8 title pt-2\">\n                                        Select Members\n                                    </div>\n                                    <div class=\"pt-1 pr-3\">\n                                        <button mat-mini-fab color=\"default\"\n                                        class=\"mat-elevation-z0 border bg-light h-32 w-32\"\n                                        aria-label=\"Activity actions\"\n                                        [matMenuTriggerFor]=\"menu\">\n                                            <mat-icon class=\"mt-n2 fonnt-size-20\">more_vert</mat-icon>\n                                        </button>\n                                        <mat-menu #menu=\"matMenu\">\n                                            <button mat-menu-item\n                                            *ngFor=\"let btnAct of actActions\"\n                                            (click)=\"openCRUDDialog(btnAct.context)\">\n                                                <mat-icon [class]=\"btnAct?.iconClass\">\n                                                    {{btnAct?.icon}}\n                                                </mat-icon>\n                                                {{btnAct?.text}}\n                                            </button>\n                                        </mat-menu>\n                                    </div>\n                                </div>\n                            </div> \n                            <mat-card-body class=\"p-0\">\n                                <div class=\"w-100-p mt-0 px-0\">\n                                    <dynamic-table title=\"Listing\"\n                                        [tabbedItem]=\"item\" [largeForms]=\"true\"\n                                        class=\"w-100-p\" [addOrg]=\"true\" [customHeader]=\"true\"\n                                        [modelKey]=\"configs?.modelKey\" [cmptParams]=\"cmptParams\"\n                                        [headers]=\"configs?.headers\" [no-card]=\"true\"\n                                        [has-action]=\"true\" [store]=\"configs?.getStore\"\n                                        [topActions]=\"configs?.topActions\" [hasSearch]=\"true\"\n                                        (postCRUDFxn)=\"refreshSelected()\"\n                                        [dropDownActions]=\"configs?.actions\" [rows]=\"configs.rows\">\n                                    </dynamic-table>\n                                </div>\n                            </mat-card-body>\n                        </mat-card>\n                    </div>\n                </div>\n            </div>\n            <!-- End of content -->\n        </div>\n    </div>\n</div>\n<div class=\"btn-cont px-20 pb-12 pt-3 border-top\">\n    <div class=\"btn-cont mb-3 pt-12 w-100-p\n    d-flex justify-content-between\">\n        <button mat-raised-button\n        class=\"float-left\"\n        (click)=\"changeStep('prev')\">\n        <mat-icon class=\"btn-icon\">keyboard_arrow_left</mat-icon>\n        <mat-icon class=\"btn-icon\">keyboard_arrow_left</mat-icon>\n            &nbsp;&nbsp;BACK\n        </button>\n        <button mat-raised-button\n        *ngIf=\"!isLast\"\n        class=\"mt-10 float-right mr-0\"\n        color=\"accent\" \n        (click)=\"changeStep('next')\">\n            NEXT&nbsp;\n            <mat-icon class=\"btn-icon\">keyboard_arrow_right</mat-icon>\n            <mat-icon class=\"btn-icon\">keyboard_arrow_right</mat-icon>\n        </button>\n        <button mat-raised-button\n        *ngIf=\"isLast\" color=\"success\"\n        class=\"mt-10 float-right mr-0\"\n        (click)=\"changeStep('next')\">\n            COMPLETE\n        </button>\n    </div>\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { DataLayerService } from 'app/services/http/dataLayer.service';\nimport { find, findIndex, get, indexOf, isUndefined } from 'lodash';\n\n@Component({\n    selector: 'nested-inline-list',\n    templateUrl: 'nested-inline-list.component.html',\n    styleUrls: ['nested-inline-list.component.scss'],\n    providers: [DataLayerService],\n})\n\nexport class NestedInlineList implements OnInit {\n    @Input() steps: Array<any>;\n    @Input() current: any;\n\n    @Output() onNavigate = new EventEmitter();\n\n    multistepConfig: any;\n    list: Array<any> = [];\n    nestedList: Array<any> = [];\n    submitted: any;\n    item: any;\n    loading:boolean = true;\n    isLast: boolean;\n    configs: any;\n    orgId: any;\n    itemId: any;\n    selectedAllowance: any;\n    cmptParams: any = { };\n    actActions: Array<any> = [];\n\n    constructor(private _route: ActivatedRoute,\n        private _dataLayer: DataLayerService) {}\n\n    changeStep(context) {\n        this.onNavigate.emit(context);\n    }\n\n    setSelected(allowanceId?) {\n        if (this.list.length) {\n            let selected = find(this.list, { active: true });\n            if (isUndefined(selected) && isUndefined(allowanceId)) {\n                this.list[0].active = true;\n                this.selectedAllowance = undefined;\n                this.presetAllowance(0);\n            } else {\n                if (!isUndefined(allowanceId)) {\n                    const currInd = indexOf(this.list, find(this.list, { id: allowanceId }));\n                    this.selectedAllowance = undefined;\n                    this.presetAllowance(currInd);\n                } else {\n                    this.selectedAllowance = indexOf(this.list, selected);\n                }\n            }\n        }\n    }\n\n    loadActions() {\n        const defaultActions = [\n            {\n                text: 'Rationalize', icon: 'compare_arrows',\n                iconClass: 'text-success',\n                context: 'rationalize', status: ['DRAFT'],\n                bpType: ['MINISTRY', 'SASDEF'],\n            },\n            {\n                text: 'Approve', icon: 'check',\n                iconClass: 'text-success',\n                context: 'approve', status: ['RATIONALIZED'],\n                bpType: ['SASDEF'],\n            },\n            {\n                text: 'Reject', icon: 'close',\n                iconClass: 'text-danger',\n                context: 'reject', status: ['DRAFT', 'RATIONALIZED'],\n                bpType: ['MINISTRY', 'SASDEF'],\n            }\n        ];\n        const orgType = get(\n            JSON.parse(localStorage.getItem('organization')), 'org_type', null);\n        this.actActions = defaultActions.filter(act => {\n            const orgInd = indexOf(act.bpType, orgType);\n            const statusInd = indexOf(act.status, this.item.status);\n            if (orgInd >= 0 && statusInd >= 0) return act;\n        });\n    }\n\n    presetAllowance(currInd: number) {\n        this.loading = true;\n        const oldInd = indexOf(this.list, find(this.list, { active: true }));\n        this.selectedAllowance = undefined;\n        if (oldInd >= 0) {\n            this.list[oldInd].active = false;\n        }\n        this.list[currInd].active = true;\n        this.getNestedList(this.list[currInd].id);\n        const opts = { current_org_id: this.orgId };\n        this._dataLayer.get('organization-budget-activity-allowances', \n            this.list[currInd].id, opts)\n            .subscribe(resp => {\n                this.selectedAllowance = this.list[currInd] || resp;\n                this.cmptParams = {\n                    ...this.cmptParams, \n                    budget_activity_allowance: this.list[currInd].id\n                }\n                this.loadActions();\n                this.loading = false;\n            }, err => { console.log(err); this.loading = false; });\n    }\n\n    getNestedList(id: any) {\n        const params = {\n            current_org_id: this.orgId,\n            budget_activity_allowance: id,\n        };\n        this._dataLayer.list('application-allowances', params)\n            .subscribe(resp => {\n                this.nestedList = resp['results'];\n            }, err => console.log(err));\n    }\n\n    getMainList() {\n        const params = {\n            current_org_id: this.orgId,\n            budget_activity: this.item.activity,\n        };\n        this._dataLayer.list('organization-budget-activity-allowances', params)\n            .subscribe(resp => {\n                this.list = resp['results'];\n                this.setSelected();\n            }, err => console.log(err));\n    }\n\n    getItem() {\n        const getParams = { 'current_org_id': this.orgId };\n        this._dataLayer.get('applications', this.itemId, getParams)\n            .subscribe(resp => {\n                this.item = resp;\n                this.getMainList();\n            }, err => console.log(err));\n    }\n\n    getItemId() {\n        this._route.queryParams.subscribe(params => {\n            const current = parseInt(params.current, 10);\n            this.itemId = parseInt(params['id'], 10);\n            const ind = findIndex(this.steps, { count: current });\n            this.configs = this.steps[ind].gridConf;\n            this.getItem();\n        })\n    }\n\n    ngOnInit() {\n        this.orgId = get(JSON.parse(\n            localStorage.getItem('organization')), 'organization', null);\n        this.getItemId();\n    }\n}","<div class=\"w-100-p\">\n    <!-- Start of stepper header -->\n    <div class=\"container-header w-100-p\">\n        <div class=\"d-flex\">\n            <div class=\"d-flex flex-column flex-fill pt-12\">\n                <div class=\"title\">\n                    {{ isEdit ? 'Review' : 'New' }} {{ context }}\n                </div>\n                <div class=\"text-light pt-2 d-flex\">\n                    <div class=\"pr-2\">\n                        {{ currentStep?.help_text }}:\n                    </div>\n                    <div>\n                        <b>{{ currentStep?.label }}</b>\n                    </div>\n                </div>\n            </div>\n            <div class=\"d-flex justify-content-around\">\n                <div *ngFor=\"let step of steps\"\n                class=\"steps-cont sm\">\n                    <div class=\"circle d-flex justify-content-center\">\n                        <div class=\"rounded-circle counter\n                        {{ step.active ? 'active' : '' }}\n                        {{ step.done ? 'done' : '' }}\">\n                            <span class=\"font-size-18\">\n                                <mat-icon *ngIf=\"!step.done\">\n                                    {{ step.icon }}\n                                </mat-icon>\n                                <mat-icon *ngIf=\"step.done && !step.active\">\n                                    check\n                                </mat-icon>\n                                <mat-icon \n                                *ngIf=\"step.done && step.active\">\n                                    {{ step.icon }}\n                                </mat-icon>\n                            </span>\n                        </div>\n                    </div>\n                    <div class=\"stepper-label sm pt-3\n                    {{ step.active ? 'active font-weight-bold' : '' }}\n                    {{ step.done ? 'done font-weight-bold' : '' }}\">\n                        <div class=\"w-100-p text-center text-light\">\n                            {{ step.shortLabel }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- End of stepper header -->\n\n    <!-- Start of stepper content -->\n    <div class=\"px-5\">\n        <div class=\"px-5\">\n            <mat-card class=\"w-100-p raised mb-5 p-0\">\n                <mat-card-content class=\"p-0\">\n                    <ng-container [ngTemplateOutlet]=\"this[cmpt]\"></ng-container>\n                </mat-card-content>\n            </mat-card>\n        </div>\n    </div>\n    <!-- End of stepper content -->\n</div>\n\n<ng-template #one>\n    <form-wrapper\n    [steps]=\"steps\" class=\"fade-in\"\n    (onNavigate)=\"navigate($event)\">\n    </form-wrapper>\n</ng-template>\n<ng-template #two>\n    <div *ngIf=\"cmpt === 'two'\">\n        <list-wrapper \n        [steps]=\"steps\" class=\"fade-in\"\n        (onNavigate)=\"navigate($event)\">\n        </list-wrapper>\n    </div>\n</ng-template>\n<ng-template #three>\n    <div *ngIf=\"cmpt === 'three'\">\n        <attachment-wrapper\n        [steps]=\"steps\" class=\"fade-in\"\n        (onNavigate)=\"navigate($event)\">\n        </attachment-wrapper>\n    </div>\n</ng-template>\n<ng-template #four>\n    <div *ngIf=\"cmpt === 'four'\">\n        <inline-list-wrapper\n        [steps]=\"steps\" class=\"fade-in\"\n        (onNavigate)=\"navigate($event)\">\n        </inline-list-wrapper>\n    </div>\n</ng-template>\n<ng-template #five>\n    <div *ngIf=\"cmpt === 'five'\">\n        <nested-inline-list\n        [steps]=\"steps\" class=\"fade-in\"\n        (onNavigate)=\"navigate($event)\">\n        </nested-inline-list>\n    </div>\n</ng-template>\n<ng-template #six>\n    <div *ngIf=\"cmpt === 'six'\">\n        <nested-list [steps]=\"steps\"\n        (onNavigate)=\"navigate($event)\">\n        </nested-list>\n    </div>\n</ng-template>","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Authorization } from 'app/services/authorization.service';\nimport { DataLayerService } from 'app/services/http/dataLayer.service';\nimport { StepperWrapperService } from '../../services/stepper-wrapper.service';\n\nimport * as _ from 'lodash';\n\n@Component({\n    selector: 'stepper-wrapper',\n    templateUrl: 'main-wrapper.component.html',\n    styleUrls: ['main-wrapper.component.scss'],\n    providers: [DataLayerService],\n})\n\nexport class MainStepperWrapperComponent implements OnInit {\n    @ViewChild('one') one: TemplateRef<any>;\n    @ViewChild('two') two: TemplateRef<any>;\n    @ViewChild('three') three: TemplateRef<any>;\n    @ViewChild('four') four: TemplateRef<any>;\n    @ViewChild('five') five: TemplateRef<any>;\n    @ViewChild('six') six: TemplateRef<any>;\n    // global stepper variables\n    user: any;\n    context: string;\n    title: string;\n    subHeaderKey: string;\n    store: string;\n    // item container variables\n    item: any = {};\n    itemId: string;\n    listRoute: string;\n    configs: any;\n    isEdit: boolean;\n    // stepper logic variables\n    steps: Array<any>;\n    step: string;\n    originalSteps: Array<any>;\n    cmpt: string;\n    current: any;\n    currentStep: any;\n    furthest: any;\n    otherParams: any;\n\n    constructor(\n        private _router: Router,\n        private _route: ActivatedRoute,\n        private _authConfig: Authorization,\n        private _datalayer: DataLayerService,\n        private _stepperService: StepperWrapperService,\n    ) {}\n\n    setFurthest(params: any, otherParams?) {\n        const routeParams = { ...params, ...otherParams };\n        this._router.navigate([], { queryParams: routeParams });\n    }\n\n    checkStep(otherParams?) {\n        if (_.isUndefined(this.furthest) || this.furthest === 0) {\n            this.steps[0].active = true;\n            this.currentStep = this.steps[0];\n            this.furthest = 1;\n            this.current = 1;\n            this.cmpt = 'one';\n            const params = { step: 1, current: 1, ...this.otherParams };\n            this.setFurthest(params, otherParams);\n        } else {\n            const furthestStep = this.furthest - 1;\n            this.currentStep = _.find(this.steps, { count: this.current });\n            const indVal = _.findIndex(this.steps, this.currentStep);\n            this.steps = this.steps.map((step, ind) => {\n                if (ind < furthestStep && furthestStep !== 0) {\n                    return { ...step, done: true, active: false };\n                }\n                if (furthestStep === 0 && ind !== 0) {\n                    return { ...step, done: false, active: false };\n                }\n                return step;\n            });\n            this.steps[furthestStep].active = true;\n            this.steps[indVal].active = true;\n            this.cmpt = this.steps[indVal].template;\n        }\n    }\n\n    goToNext(qParams?) {\n        const ind = _.findIndex(this.steps, { count: this.current });\n        if ((ind + 1) < this.steps.length) {\n            this.cmpt = this.steps[ind + 1].template;\n            const current = this.steps[ind + 1].count;\n            this.furthest = (this.steps[ind + 1].count > this.furthest)\n                ? (this.furthest + 1) \n                : this.furthest;\n            const params = { step: this.furthest, current, id: this.itemId };\n            // check for any additional params\n            if (qParams) {\n                const keys = _.keys(qParams);\n                _.each(keys, aKey => {\n                    params[aKey] = qParams[aKey];\n                });\n            }\n            // navigate to set new params to be used\n            this.setFurthest(params);\n        } else if ((ind + 1) === this.steps.length) {\n            this.steps = this.originalSteps;\n            setTimeout(() => {\n                this.steps = [];\n                this.furthest = undefined;\n                this._router.navigateByUrl(this.listRoute);\n            }, 250);\n        }\n    }\n\n    goToPrev() {\n        const ind = _.findIndex(this.steps, { count: this.current });\n        if (ind === 0) {\n            this._router.navigateByUrl(this.listRoute);\n        } else {\n            this.current = this.steps[ind - 1].count;\n            this.steps[this.current].active = true;\n            const params = { \n                step: this.furthest, \n                current: this.current, \n                id: this.itemId \n            };\n            this.setFurthest(params);\n        }\n    }\n    // executed from nested component\n    navigate($event, qParams?) {\n        const evt = _.isObject($event) ? $event['direction'] : $event;\n        if (evt === 'next') {\n            this.goToNext($event.params);\n        } else {\n            this.goToPrev();\n        }\n    }\n\n    setParams() {\n        this._route.queryParams\n        .subscribe(params => {\n            console.log(params);\n            this.step = params['step'];\n            this.current = parseInt(params['current'], 10) || 1;\n            this.itemId = params['id'];\n            this.furthest = !_.isUndefined(params['step'])\n                ? parseInt(params['step'], 10) : undefined;\n            this._route.data.subscribe(data => {\n                const stepsCont = this._stepperService.getSteps(data['stepsKey']);\n                this.steps = [ ...stepsCont ];\n                this.originalSteps = this.steps;\n                this.listRoute = data['listRoute'];\n                this.context = data['context'];\n                this.checkStep(params);\n            });\n        })\n    }\n\n    ngOnInit() {\n        this.otherParams = {};\n        this.current = 'one';\n        this.user = JSON.parse(this._authConfig.getUser());\n        this.isEdit = this._router.url.includes('edit');\n        setTimeout(() => {\n            this.cmpt = 'one';\n            this.setParams();\n        })\n    }\n}","import { Injectable }  from '@angular/core';\nimport * as _ from 'lodash';\n\nimport { StepsConfig } from '../constants/steps.config';\n\n@Injectable()\n\nexport class StepperWrapperService {\n    stepsArray = StepsConfig;\n    currentStep: any;\n\n    getSteps(key) {\n        return _.get(_.find(this.stepsArray, { key }), \n            'steps', []);\n    }\n}\n","import { ApplicationStepsConfig } from './appplication.constant';\nimport { OrganizationStepsConfig } from './organization.constant';\n\nexport const StepsConfig = [\n    {\n        key: 'application',\n        context: 'Application',\n        steps: ApplicationStepsConfig,\n    },\n    {\n        key: 'organization',\n        context: 'Organization',\n        steps: OrganizationStepsConfig,\n    },\n    {\n        key: 'budget',\n        context: 'Calendar of Events',\n        steps: [\n            { \n                count: 1,\n                label: 'Basic Details',\n                shortLabel: 'Basic',\n                help_text: 'Step 1',\n                icon: 'work',\n                template: 'one',\n                formConf: {\n                    store: 'organization-budgets',\n                    cancelTxt: 'CANCEL',\n                    nextTxt: 'NEXT',\n                    addStore: 'organization-budgets',\n                    editStore: 'organization-budgets',\n                    getStore: 'organization-budgets'\n                },\n                active: false\n            },\n            { \n                count: 2,\n                label: 'Budgeted Activities',\n                shortLabel: 'Activities',\n                help_text: 'Step 2',\n                icon: 'directions_run',\n                template: 'six',\n                inlineConf: {\n                    store: 'visit',\n                    cancelTxt: 'BACK',\n                    nextTxt: 'COMPLETE',\n                    editStore: 'visits',\n                    getStore: 'visits'\n                },\n                active: false,\n                gridConf: {\n                    store: 'organization-budgets',\n                    modelKey: 'org_budget',\n                    getStore: 'organization-budget-activities',\n                    editStore: 'organization-budget-activities',\n                    topActions: [\n                        {\n                            btnText: 'ADD ACTIVITY',\n                            status: 'info',\n                            icon: 'true',\n                            action: 'inline',\n                            conf: {\n                                context: 'Budget Activity',\n                                store: 'organization-budget-activities',\n                                btnText: 'SAVE'\n                            }\n                        }\n                    ],\n                    rows: [\n                        { key: 'title', type: 'string' },\n                        { key: 'activity_date', type: 'date' },\n                        { key: 'estimated_amount', type: 'currency' },\n                        { key: 'status', type: 'status' },\n                    ],\n                    headers: [\n                        { title: 'Title' },\n                        { title: 'Activity Date' },\n                        { title: 'Estimated Amount' },\n                        { title: 'Status' },\n                        { title: 'Actions', oderable: false, searchable: false },\n                    ],\n                    actions: [\n                        {\n                            btnText: 'EDIT',\n                            status: 'info',\n                            icon: false,\n                            disableStatus: 'FINISHED',\n                            action: 'inline',\n                            modalConf: {\n                                store: 'organization-budget-activities',\n                                titleKey: 'name',\n                                context: 'Budget Activity',\n                                btnText: 'SAVE'\n                            }\n                            }\n                    ]\n                },\n            },\n            { \n                count: 3,\n                label: 'Statutory Attachments',\n                shortLabel: 'Attachments',\n                help_text: 'Step 3',\n                icon: 'attach_file',\n                template: 'three',\n                inlineConf: {\n                    store: 'visit',\n                    cancelTxt: 'BACK',\n                    nextTxt: 'COMPLETE',\n                    editStore: 'visits',\n                    getStore: 'visits'\n                },\n                active: false,\n                gridConf: {\n                    store: 'applications',\n                    getStore: 'application-attachments',\n                    editStore: 'application-attachments',\n                    topActions: [\n                        {\n                            btnText: 'ADD ACTIVITY',\n                            status: 'info',\n                            icon: 'true',\n                            action: 'inline',\n                            conf: {\n                                context: 'BRANCH',\n                                store: 'branches',\n                                btnText: 'SAVE'\n                            }\n                        }\n                    ],\n                    rows: [\n                        { key: 'amount', type: 'string' },\n                        { key: 'financial_year', type: 'string' },\n                        { key: 'status', type: 'string' },\n                    ],\n                    headers: [\n                        { title: 'Amount' },\n                        { title: 'Financial Year' },\n                        { title: 'Status' },\n                        { title: 'Actions', oderable: false, searchable: false },\n                    ],\n                    actions: [\n                        {\n                            btnText: 'EDIT',\n                            status: 'info',\n                            icon: false,\n                            disableStatus: 'FINISHED',\n                            action: 'inline',\n                            modalConf: {\n                                store: 'organization-budgets',\n                                titleKey: 'name',\n                                context: 'Organization Budget',\n                                btnText: 'SAVE'\n                            }\n                            }\n                    ]\n                },\n            },\n            { \n                count: 4,\n                label: 'Additional Attachments',\n                shortLabel: 'Documents',\n                help_text: 'Step 4',\n                icon: 'insert_drive_file',\n                template: 'three',\n                inlineConf: {\n                    store: 'visit',\n                    cancelTxt: 'BACK',\n                    nextTxt: 'COMPLETE',\n                    editStore: 'visits',\n                    getStore: 'visits'\n                },\n                active: false,\n                gridConf: {\n                    store: 'organization-budgets',\n                    getStore: 'organization-budgets',\n                    editStore: 'organization-budgets',\n                    attachmentStore: 'organization-budget-attachments',\n                    headerAction: true,\n                    topActions: [\n                        {\n                            btnText: 'ADD ACTIVITY',\n                            status: 'info',\n                            icon: 'true',\n                            action: 'inline',\n                            conf: {\n                                context: 'BRANCH',\n                                store: 'branches',\n                                btnText: 'SAVE'\n                            }\n                        }\n                    ],\n                    rows: [\n                        { key: 'amount', type: 'string' },\n                        { key: 'financial_year', type: 'string' },\n                        { key: 'status', type: 'string' },\n                    ],\n                    headers: [\n                        { title: 'Amount' },\n                        { title: 'Financial Year' },\n                        { title: 'Status' },\n                        { title: 'Actions', oderable: false, searchable: false },\n                    ],\n                    actions: [\n                        {\n                            btnText: 'EDIT',\n                            status: 'info',\n                            icon: false,\n                            disableStatus: 'FINISHED',\n                            action: 'inline',\n                            modalConf: {\n                                store: 'organization-budgets',\n                                titleKey: 'name',\n                                context: 'Organization Budget',\n                                btnText: 'SAVE'\n                            }\n                            }\n                    ]\n                },\n            }\n        ],\n    }\n]","export const ApplicationStepsConfig = [\n    { \n        count: 1,\n        label: 'Basic Details',\n        shortLabel: 'Basic',\n        help_text: 'Step 1',\n        icon: 'work',\n        template: 'one',\n        formConf: {\n            store: 'applications',\n            cancelTxt: 'CANCEL',\n            nextTxt: 'NEXT',\n            addStore: 'auto-create-application',\n            editStore: 'applications',\n            getStore: 'applications'\n        },\n        active: false\n    },\n    { \n        count: 2,\n        label: 'Application Billabe Items',\n        shortLabel: 'Items',\n        help_text: 'Step 2',\n        icon: 'list_alt',\n        template: 'two',\n        inlineConf: {\n            store: 'visit',\n            cancelTxt: 'BACK',\n            nextTxt: 'COMPLETE',\n            editStore: 'visits',\n            getStore: 'visits'\n        },\n        active: false,\n        modelKey: 'application',\n        listParams: { 'member_null': true },\n        gridConf: {\n            store: 'applications',\n            modelKey: 'application',\n            listParams: { 'member_null': true },\n            getStore: 'application-items',\n            editStore: 'application-items',\n            topActions: [\n                {\n                    btnText: 'ADD BILLABLE ITEM',\n                    status: 'info',\n                    icon: 'true',\n                    action: 'inline',\n                    conf: {\n                        context: 'BILLABLE ITEM',\n                        store: 'application-items',\n                        btnText: 'SAVE'\n                    }\n                }\n            ],\n            rows: [\n                {\n                    key: 'item',\n                    type: 'compact-line',\n                    context: 'billable-item',\n                    fieldType: 'nested_string',\n                    primaryField: 'item_data.name',\n                },\n                {\n                    key: 'item',\n                    type: 'compact-line',\n                    context: 'billable-item',\n                    fieldType: 'activity_details',\n                    primaryField: 'item_data.name',\n                },\n                { \n                    key: 'item', \n                    type: 'compact-line',\n                    context: 'billable-item',\n                    fieldType: 'nested_status_total',\n                    primaryField: 'item_data.name', \n                },\n                { \n                    key: 'item', \n                    type: 'compact-line',\n                    context: 'billable-item',\n                    fieldType: 'nested_totals',\n                    primaryField: 'item_data.name', \n                },\n            ],\n            headers: [\n                { title: 'Item' },\n                { title: 'Activity Item' },\n                { title: 'Total' },\n                { title: 'Approved Totals' },\n                { title: 'Actions', oderable: false, searchable: false },\n            ],\n            actions: [\n                {\n                    btnText: 'EDIT',\n                    status: 'info',\n                    icon: false,\n                    disableStatus: 'FINISHED',\n                    action: 'inline',\n                    modalConf: {\n                        store: 'application-items',\n                        titleKey: 'item',\n                        context: 'Billable Item',\n                        btnText: 'SAVE'\n                    }\n                },\n            ]\n        },\n    },\n    { \n        count: 3,\n        label: 'Event Attendees',\n        shortLabel: 'Attendees',\n        help_text: 'Step 3',\n        icon: 'people',\n        template: 'two',\n        inlineConf: {\n            store: 'visit',\n            cancelTxt: 'BACK',\n            nextTxt: 'COMPLETE',\n            editStore: 'visits',\n            getStore: 'visits'\n        },\n        active: false,\n        gridConf: {\n            store: 'applications',\n            modelKey: 'application',\n            listParams: { 'member_null': false },\n            getStore: 'application-attendees',\n            editStore: 'application-attendees',\n            topActions: [\n                {\n                    btnText: 'ADD ATTENDEE',\n                    status: 'info',\n                    icon: 'true',\n                    action: 'inline',\n                    conf: {\n                        context: 'ATTENDEE',\n                        store: 'application-attendees',\n                        btnText: 'SAVE'\n                    }\n                }\n            ],\n            rows: [\n                { \n                    key: 'item', \n                    type: 'compact-line',\n                    context: 'attendees',\n                    fieldType: 'nested_string',\n                    primaryField: 'item_data.name', \n                },\n                {\n                    key: 'item',\n                    type: 'compact-line',\n                    context: 'billable-item',\n                    fieldType: 'activity_details',\n                    primaryField: 'item_data.name',\n                },\n                { \n                    key: 'item', \n                    type: 'compact-line',\n                    context: 'billable-item',\n                    fieldType: 'nested_status_total',\n                    primaryField: 'item_data.name', \n                },\n                { \n                    key: 'item', \n                    type: 'compact-line',\n                    context: 'billable-item',\n                    fieldType: 'nested_totals',\n                    primaryField: 'item_data.name', \n                },\n            ],\n            headers: [\n                { title: 'Member' },\n                { title: 'Activity Details' },\n                { title: 'Totals' },\n                { title: 'Approved Totals' },\n                { title: 'Actions', oderable: false, searchable: false },\n            ],\n            actions: [\n                {\n                    btnText: 'EDIT',\n                    status: 'info',\n                    icon: false,\n                    disableStatus: 'FINISHED',\n                    action: 'inline',\n                    modalConf: {\n                        store: 'application-attendees',\n                        titleKey: 'item',\n                        context: 'Attendee',\n                        btnText: 'SAVE'\n                    }\n                }\n            ]\n        },\n    },\n    { \n        count: 4,\n        label: 'Event Allowances',\n        shortLabel: 'Allowances',\n        help_text: 'Step 4',\n        icon: 'account_balance_wallet',\n        template: 'five',\n        inlineConf: {\n            store: 'visit',\n            cancelTxt: 'BACK',\n            nextTxt: 'COMPLETE',\n            editStore: 'visits',\n            getStore: 'visits'\n        },\n        active: false,\n        gridConf: {\n            store: 'applications',\n            modelKey: 'application',\n            getStore: 'application-allowances',\n            editStore: 'application-allowances',\n            topActions: [\n                {\n                    btnText: 'ADD ALLOWANCE',\n                    status: 'info',\n                    icon: 'true',\n                    action: 'inline',\n                    conf: {\n                        context: 'ALLOWANCES',\n                        store: 'application-allowances',\n                        btnText: 'SAVE'\n                    }\n                }\n            ],\n            rows: [\n                { \n                    key: 'item', \n                    type: 'compact-line',\n                    context: 'allowances',\n                    fieldType: 'nested_member',\n                    primaryField: 'item_data.name', \n                },\n                { \n                    key: 'item', \n                    type: 'compact-line',\n                    context: 'billable-item',\n                    fieldType: 'nested_status_total',\n                    primaryField: 'item_data.name', \n                },\n                { \n                    key: 'item', \n                    type: 'compact-line',\n                    context: 'billable-item',\n                    fieldType: 'nested_totals',\n                    primaryField: 'item_data.name', \n                },\n            ],\n            headers: [\n                { title: 'Allowance' },\n                { title: 'Totals' },\n                { title: 'Approved Totals' },\n                { title: 'Actions', oderable: false, searchable: false },\n            ],\n            actions: [\n                {\n                    btnText: 'EDIT',\n                    status: 'info',\n                    icon: 'edit',\n                    disableStatus: 'FINISHED',\n                    action: 'inline',\n                    modalConf: {\n                        store: 'application-allowances',\n                        titleKey: 'item',\n                        context: 'Allowance',\n                        btnText: 'SAVE'\n                    }\n                },\n                {\n                    btnText: 'Rationalize',\n                    status: 'draft',\n                    icon: 'compare_arrows',\n                    disableStatus: 'FINISHED',\n                    class: 'text-success',\n                    action: 'modal',\n                    modalConf: {\n                        store: 'application-items',\n                        titleKey: 'item',\n                        context: 'rationalize',\n                        btnText: 'SAVE',\n                        width: '50%',\n                    }\n                },\n                {\n                    btnText: 'Approve',\n                    status: 'rationalized',\n                    icon: 'check',\n                    class: 'text-success',\n                    disableStatus: 'FINISHED',\n                    action: 'modal',\n                    modalConf: {\n                        store: 'application-items',\n                        titleKey: 'item',\n                        context: 'approve',\n                        btnText: 'SAVE',\n                        width: '50%',\n                    }\n                },\n                {\n                    btnText: 'Reject',\n                    status: 'rationalize',\n                    icon: 'close',\n                    class: 'text-danger',\n                    disableStatus: 'FINISHED',\n                    action: 'modal',\n                    modalConf: {\n                        store: 'application-items',\n                        titleKey: 'item',\n                        context: 'reject',\n                        btnText: 'SAVE',\n                        width: '50%',\n                    }\n                },\n            ]\n        },\n    },\n    { \n        count: 5,\n        label: 'Application Attachments',\n        shortLabel: 'Attachments',\n        help_text: 'Step 5',\n        icon: 'attach_file',\n        template: 'three',\n        inlineConf: {\n            store: 'visit',\n            cancelTxt: 'BACK',\n            nextTxt: 'COMPLETE',\n            editStore: 'visits',\n            getStore: 'visits'\n        },\n        active: false,\n        gridConf: {\n            store: 'applications',\n            getStore: 'application-attachments',\n            editStore: 'application-attachments',\n            topActions: [\n                {\n                    btnText: 'ADD ACTIVITY',\n                    status: 'info',\n                    icon: 'true',\n                    action: 'inline',\n                    conf: {\n                        context: 'BRANCH',\n                        store: 'branches',\n                        btnText: 'SAVE'\n                    }\n                }\n            ],\n            rows: [\n                { key: 'amount', type: 'string' },\n                { key: 'financial_year', type: 'string' },\n                { key: 'status', type: 'string' },\n            ],\n            headers: [\n                { title: 'Amount' },\n                { title: 'Financial Year' },\n                { title: 'Status' },\n                { title: 'Actions', oderable: false, searchable: false },\n            ],\n            actions: [\n                {\n                    btnText: 'EDIT',\n                    status: 'info',\n                    icon: false,\n                    disableStatus: 'FINISHED',\n                    action: 'inline',\n                    modalConf: {\n                        store: 'organization-budgets',\n                        titleKey: 'name',\n                        context: 'Organization Budget',\n                        btnText: 'SAVE'\n                    }\n                    }\n            ]\n        },\n    },\n    { \n        count: 6,\n        label: 'Alternative Fundings',\n        shortLabel: 'Other Funds',\n        help_text: 'Step 6',\n        icon: 'attach_money',\n        template: 'two',\n        inlineConf: {\n            store: 'visit',\n            cancelTxt: 'BACK',\n            nextTxt: 'COMPLETE',\n            editStore: 'visits',\n            getStore: 'visits'\n        },\n        active: false,\n        gridConf: {\n            store: 'applications',\n            modelKey: 'application',\n            getStore: 'application-alternate-funding-sources',\n            editStore: 'application-alternate-funding-sources',\n            topActions: [\n                {\n                    btnText: 'ADD ALTERNATIVE FUND',\n                    status: 'info',\n                    icon: 'true',\n                    action: 'inline',\n                    conf: {\n                        context: 'ALTERNATIVE FUNDING',\n                        store: 'application-alternate-funding-sources',\n                        btnText: 'SAVE'\n                    }\n                }\n            ],\n            rows: [\n                { key: 'entity_name', type: 'string' },\n                { key: 'estimated_amount', type: 'currency' },\n                { key: 'description', type: 'string' },\n            ],\n            headers: [\n                { title: 'Entity Name' },\n                { title: 'Estimated Amount' },\n                { title: 'Description' },\n                { title: 'Actions', oderable: false, searchable: false },\n            ],\n            actions: [\n                {\n                    btnText: 'EDIT',\n                    status: 'info',\n                    icon: false,\n                    disableStatus: 'FINISHED',\n                    action: 'inline',\n                    modalConf: {\n                        store: 'application-alternate-funding-sources',\n                        titleKey: 'entity_name',\n                        context: 'Alternative Funding',\n                        btnText: 'SAVE'\n                    }\n                },\n            ]\n        },\n    },\n];","export const OrganizationStepsConfig = [\n    { \n        count: 1,\n        label: 'Basic Details',\n        shortLabel: 'Basic',\n        help_text: 'Step 1',\n        icon: 'work',\n        template: 'one',\n        formConf: {\n            store: 'organizations',\n            cancelTxt: 'CANCEL',\n            nextTxt: 'MEMBERS',\n            addStore: 'organizations',\n            editStore: 'organizations',\n            getStore: 'organizations'\n        },\n        active: false\n    },\n    // { \n    //     count: 2,\n    //     label: 'Organization Roles',\n    //     shortLabel: 'Roles',\n    //     help_text: 'Step 2',\n    //     icon: 'ballot',\n    //     template: 'two',\n    //     inlineConf: {\n    //         store: 'visit',\n    //         cancelTxt: 'BACK',\n    //         nextTxt: 'COMPLETE',\n    //         editStore: 'visits',\n    //         getStore: 'visits'\n    //     },\n    //     active: false,\n    //     gridConf: {\n    //         store: 'organizations',\n    //         getStore: 'organization-roles',\n    //         editStore: 'organization-roles',\n    //         modelKey: 'organization',\n    //         topActions: [\n    //             {\n    //                 btnText: 'ADD ROLE',\n    //                 status: 'info',\n    //                 icon: 'true',\n    //                 action: 'inline',\n    //                 conf: {\n    //                     context: 'ROLE',\n    //                     store: 'organization-roles',\n    //                     btnText: 'SAVE'\n    //                 }\n    //             }\n    //         ],\n    //         rows: [\n    //             { key: 'description', type: 'string' },\n    //         ],\n    //         headers: [\n    //             { title: 'Description' },\n    //             { title: 'Actions', oderable: false, searchable: false },\n    //         ],\n    //         actions: [\n    //             {\n    //                 btnText: 'EDIT',\n    //                 status: 'info',\n    //                 icon: false,\n    //                 disableStatus: 'FINISHED',\n    //                 action: 'inline',\n    //                 modalConf: {\n    //                     store: 'organization-roles',\n    //                     titleKey: 'description',\n    //                     context: 'Role',\n    //                     btnText: 'SAVE'\n    //                 }\n    //                 }\n    //         ]\n    //     },\n    // },\n    { \n        count: 2,\n        label: 'Athletes & Officials',\n        shortLabel: 'Members',\n        help_text: 'Step 2',\n        icon: 'group',\n        template: 'two',\n        inlineConf: {\n            store: 'visit',\n            cancelTxt: 'BACK',\n            nextTxt: 'COMPLETE',\n            editStore: 'visits',\n            getStore: 'visits'\n        },\n        active: false,\n        gridConf: {\n            store: 'organizations',\n            getStore: 'organization-members',\n            editStore: 'organization-members',\n            modelKey: 'organization',\n            topActions: [\n                {\n                    btnText: 'ADD MEMBER',\n                    status: 'info',\n                    icon: 'true',\n                    action: 'inline',\n                    conf: {\n                        context: 'MEMBER',\n                        store: 'organization-members',\n                        btnText: 'SAVE'\n                    }\n                }\n            ],\n            rows: [\n                { \n                    key: 'federation_number', \n                    fieldType: 'nested_string',\n                    type: 'nested',\n                    primaryField: 'user.federation_number',\n                },\n                { \n                    key: 'user.first_name', \n                    fieldType: 'nested_multistrings',\n                    type: 'nested',\n                    primaryField: 'user.first_name',\n                    secondaryField: 'user.last_name',\n                },\n                { \n                    key: 'user.dob',\n                    fieldType: 'nested_string',\n                    type: 'nested',\n                    primaryField: 'user.dob',\n                },\n                { \n                    key: 'user.email', \n                    fieldType: 'nested_string',\n                    type: 'nested',\n                    primaryField: 'user.email',\n                },\n                { \n                    key: 'user.phone_number', \n                    fieldType: 'nested_string',\n                    type: 'nested',\n                    primaryField: 'user.phone_number',\n                },\n                { key: 'sports_category', type: 'string' },\n            ],\n            headers: [\n                { title: 'Federation #' },\n                    { title: 'Names' },\n                    { title: 'Date of Birth' },\n                    { \n                        title: 'Email' \n                    },\n                    { title: 'Phone #' },\n                    { title: 'Sports Category' },\n                    { title: 'Actions', oderable: false, searchable: false },\n            ],\n            actions: [\n                {\n                    btnText: 'EDIT',\n                    status: 'info',\n                    icon: false,\n                    disableStatus: 'FINISHED',\n                    action: 'inline',\n                    modalConf: {\n                        store: 'organization-members',\n                        titleKey: 'first_name',\n                        context: 'Member',\n                        btnText: 'SAVE'\n                    }\n                    }\n            ]\n        },\n    },\n    { \n        count: 3,\n        label: 'Bank Account',\n        shortLabel: 'Account',\n        help_text: 'Step 3',\n        icon: 'account_balance',\n        template: 'four',\n        inlineConf: {\n            store: 'visit',\n            cancelTxt: 'BACK',\n            nextTxt: 'COMPLETE',\n            editStore: 'visits',\n            getStore: 'visits'\n        },\n        active: false,\n        gridConf: {\n            store: 'organizations',\n            modelKey: 'organization',\n            getStore: 'organization-bank-accounts',\n            editStore: 'organization-bank-accounts',\n            topActions: [\n                {\n                    btnText: 'ADD BANK ACCOUNT',\n                    status: 'info',\n                    icon: 'true',\n                    action: 'inline',\n                    conf: {\n                        context: 'BRANCH',\n                        store: 'branches',\n                        btnText: 'SAVE'\n                    }\n                }\n            ],\n            rows: [\n                { key: 'amount', type: 'string' },\n                { key: 'financial_year', type: 'string' },\n                { key: 'status', type: 'string' },\n            ],\n            headers: [\n                { title: 'Amount' },\n                { title: 'Financial Year' },\n                { title: 'Status' },\n                { title: 'Actions', oderable: false, searchable: false },\n            ],\n            actions: [\n                {\n                    btnText: 'EDIT',\n                    status: 'info',\n                    icon: false,\n                    disableStatus: 'FINISHED',\n                    action: 'inline',\n                    modalConf: {\n                        store: 'organization-budgets',\n                        titleKey: 'name',\n                        context: 'Organization Budget',\n                        btnText: 'SAVE'\n                    }\n                    }\n            ]\n        },\n    }\n]","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule }  from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { HttpModule } from '../../../app/services/http/http.module';\nimport { \n    DynamicFormModule \n} from '@fuse/components/dynamic-form/dynamic-form.module';\nimport { \n    DynamicTableModule\n} from '@fuse/components/dynamic-table/dynamic-table.module';\n\nimport { StepperWrapperService } from './services/stepper-wrapper.service';\n\nimport { MainStepperWrapperComponent } from './components/main-wrapper/main-wrapper.component';\nimport { FormWrapperComponent }  from './components/form-wrapper/form-wrapper.component';\nimport { ListWrapperComponent } from './components/list-wrapper/list-wrapper.component';\nimport { AttachmentsWrapper } from './components/attachments-wrapper/attachments-wrapper.component';\nimport { InlineListWrapper } from './components/inline-list-wrapper/inline-list-wrapper.component';\nimport { NestedInlineList } from './components/nested-inline-list/nested-inline-list.component';\nimport { NestedListModule } from '../tabbed-wrapper/components/nested-list/nested-list.module';\n\n@NgModule({\n    imports: [\n        HttpModule,\n        CommonModule,\n        MatIconModule,\n        MatCardModule,\n        MatMenuModule,\n        MatButtonModule,\n        DynamicFormModule,\n        DynamicTableModule,\n        ReactiveFormsModule,\n        NestedListModule,\n        MatProgressSpinnerModule,\n    ],\n    declarations: [\n        InlineListWrapper,\n        AttachmentsWrapper,\n        FormWrapperComponent,\n        ListWrapperComponent,\n        NestedInlineList,\n        MainStepperWrapperComponent,\n    ],\n    exports: [\n        InlineListWrapper,\n        AttachmentsWrapper,\n        FormWrapperComponent,\n        ListWrapperComponent,\n        NestedInlineList,\n        MainStepperWrapperComponent,\n    ],\n    providers: [\n        StepperWrapperService\n    ],\n})\n\nexport class StepperWrapperModule {\n\n}"]}