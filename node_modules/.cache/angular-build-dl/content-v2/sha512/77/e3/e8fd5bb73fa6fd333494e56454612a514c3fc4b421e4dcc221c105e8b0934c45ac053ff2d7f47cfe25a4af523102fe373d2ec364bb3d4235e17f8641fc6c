{"version":3,"sources":["webpack:///src/@fuse/components/stepper-wrapper/components/form-wrapper/form-wrapper.component.html","webpack:///src/@fuse/components/stepper-wrapper/components/form-wrapper/form-wrapper.component.ts","webpack:///src/@fuse/components/stepper-wrapper/components/list-wrapper/list-wrapper.component.html","webpack:///src/@fuse/components/stepper-wrapper/components/list-wrapper/list-wrapper.component.ts","webpack:///src/@fuse/components/stepper-wrapper/components/attachments-wrapper/attachment-wrapper-dialog/attachment-wrapper-dialog.component.html","webpack:///src/@fuse/components/stepper-wrapper/components/attachments-wrapper/attachment-wrapper-dialog/attachment-wrapper-dialog.component.ts","webpack:///src/@fuse/components/stepper-wrapper/components/attachments-wrapper/attachments-wrapper.component.html","webpack:///src/@fuse/components/stepper-wrapper/components/attachments-wrapper/attachments-wrapper.component.ts","webpack:///src/@fuse/components/stepper-wrapper/components/inline-list-wrapper/inline-list-wrapper.component.html","webpack:///src/@fuse/components/stepper-wrapper/components/inline-list-wrapper/inline-list-wrapper.component.ts","webpack:///src/@fuse/components/stepper-wrapper/components/nested-inline-list/nested-inline-list.component.html","webpack:///src/@fuse/components/stepper-wrapper/components/nested-inline-list/nested-inline-list.component.ts","webpack:///src/@fuse/components/stepper-wrapper/components/main-wrapper/main-wrapper.component.html","webpack:///src/@fuse/components/stepper-wrapper/components/main-wrapper/main-wrapper.component.ts","webpack:///src/@fuse/components/stepper-wrapper/constants/appplication.constant.ts","webpack:///src/@fuse/components/stepper-wrapper/constants/steps.config.ts","webpack:///src/@fuse/components/stepper-wrapper/constants/organization.constant.ts","webpack:///src/@fuse/components/stepper-wrapper/services/stepper-wrapper.service.ts","webpack:///src/@fuse/components/stepper-wrapper/stepper-wrapper.module.ts"],"names":["FormWrapperComponent","_router","_route","_authConfig","_dataLayer","tabbed","onNavigate","item","organization","configs","direction","this","emit","showModal","resp","params","id","showToast","model","store","modelId","addStore","editStore","paramsObj","isUndefined","key","value","create","undefined","subscribe","postCrud","err","console","log","update","$event","stepperNext","opts","current_org_id","inlineConfs","getStore","get","readItem","queryParams","multistepConfig","back","current","parseInt","ind","steps","count","formConf","formStore","inlineConf","getItem","orgObj","JSON","parse","getOrganization","getConfs","ListWrapperComponent","headers","rows","actions","context","has","listParams","orgId","setCmptParams","loading","findIndex","isLast","length","gridConf","name","getItemId","changeStep","AttachmentWrapperDialog","http","_formBuilder","_dialogRef","data","progress","sUrl","serverURL","uploadForm","group","description","attachment","required","controls","frm","valid","form","control","Object","keys","markAsDirty","attachmentObj","document_type","cb","post","formValue","formData","FormData","append","file","attachment_type","reportProgress","observe","pipe","tap","event","type","UploadProgress","Math","round","loaded","total","filter","Response","map","res","body","reset","closeDialog","openDynamicSnackBar","close","field","error","dirty","hasError","formInit","submitForm","AttachmentsWrapper","_dialog","list","attachmentsList","files","fileFormat","target","budget","itemId","org_budget","uploadLoader","uploadFile","attachmentStore","getBudgetAttachments","docType","fileFormData","getApplicationAttachments","open","afterClosed","result","getDocumentTypes","appAttachments","docTypeObj","linkedFile","find","localStorage","obj","fileResp","push","org_type__org_type_code","org_type","InlineListWrapper","showForm","getRelatedList","updateListItem","addListItem","NestedInlineList","nestedList","cmptParams","actActions","allowanceId","selected","active","selectedAllowance","presetAllowance","indexOf","currInd","orgType","text","icon","iconClass","status","bpType","act","orgInd","statusInd","oldInd","getNestedList","budget_activity_allowance","loadActions","budget_activity","activity","setSelected","getMainList","MainStepperWrapperComponent","_datalayer","_stepperService","otherParams","routeParams","navigate","furthest","currentStep","cmpt","step","setFurthest","furthestStep","indVal","done","template","qParams","aKey","originalSteps","setTimeout","navigateByUrl","listRoute","goToNext","goToPrev","stepsCont","getSteps","checkStep","user","getUser","isEdit","url","includes","setParams","StepsConfig","label","shortLabel","help_text","cancelTxt","nextTxt","modelKey","topActions","btnText","action","conf","fieldType","primaryField","title","oderable","searchable","disableStatus","modalConf","titleKey","class","width","secondaryField","headerAction","StepperWrapperService","stepsArray","StepperWrapperModule"],"mappings":"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","file":"x","sourcesContent":["<div class=\"w-100-p\">\n    <div class=\"title-cont py-12 px-32 border-bottom\">\n        <div class=\"font-size-18 text-muted\">\n            Manage Details\n        </div>\n    </div>\n    <div class=\"w-100-p px-32 pb-12 pt-20\">\n        <div class=\"w-100-p\" *ngIf=\"configs && formStore\">\n            <dynamic-form [model]=\"item\"\n            btnClass=\"tiny mr-3\" [submitted]=\"submitted\" \n            [cancelBtn]=\"true\" btnStatus=\"primary\"\n            [store]=\"formStore\" \n            [stepConfig]=\"configs\"\n            [multiStep]=\"multistepConfig\"\n            [cancelTxt]=\"configs?.cancelTxt\"\n            [btnTxt]=\"configs?.nextTxt\"\n            (onBack)=\"stepBack()\"\n            (onPrestine)=\"noChanges($event)\"\n            (submitModel)=\"receiveModel($event)\">\n            </dynamic-form>\n        </div>\n    </div>\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ActivatedRoute, Router, NavigationEnd } from '@angular/router';\nimport { registerLocaleData }  from '@angular/common';\nimport * as _ from 'lodash';\nimport { DataLayerService } from 'app/services/http/dataLayer.service';\nimport { Authorization } from 'app/services/authorization.service';\nimport { isUndefined } from 'lodash';\n\n@Component({\n    selector: 'form-wrapper',\n    templateUrl: 'form-wrapper.component.html',\n    styleUrls: ['form-wrapper.component.scss'],\n    providers: [DataLayerService],\n})\n\nexport class FormWrapperComponent implements OnInit {\n    @Input() steps: Array<any>;\n    @Input() current: any;\n    @Input() tabbed: boolean = false;\n\n\n    @Output() onNavigate = new EventEmitter();\n\n    multistepConfig: any;\n    submitted: boolean;\n    error: any;\n    errors: any;\n    item: any = {};\n    organization: any = {};\n    readItem: any;\n    showModal: boolean;\n    modelId: any;\n\n    itemId: number;\n    formStore: string;\n    configs: any;\n    inlineConfs: any;\n\n    constructor(\n        private _router: Router,\n        private _route: ActivatedRoute,\n        private _authConfig: Authorization,\n        private _dataLayer: DataLayerService,\n    ) {}\n\n    showToast(configs?) {\n\n    }\n\n    stepperNext(direction) {\n        this.onNavigate.emit(direction);\n    }\n\n    stepBack() {\n        this.onNavigate.emit('prev');\n    }\n\n    toggleModal() {\n        this.showModal = !this.showModal;\n    }\n\n    postCrud(resp) {\n        const paramObj = { id: resp['id'] };\n        const evtObj = { direction: 'next', params: paramObj };\n        this.onNavigate.emit(evtObj);\n        this.showToast();\n    }\n\n    receiveModel(model) {\n        const store = _.isUndefined(this.modelId)\n            ? this.configs.addStore : this.configs.editStore;\n        const paramsObj = !isUndefined(this.organization)\n            ? { key: 'current_org_id', value: this.organization }\n            : {} ;\n        if (_.isUndefined(this.modelId)) {\n            model = { ...model, organization: this.organization };\n            this._dataLayer.create(store, model, undefined, paramsObj)\n            .subscribe(resp => {\n                this.postCrud(resp);\n            }, err => console.log(err));\n        } else {\n            this._dataLayer.update(store, this.modelId, model, paramsObj)\n            .subscribe(resp => {\n                this.postCrud(resp);\n            }, err => console.log(err));\n        }\n    }\n\n    noChanges($event) {\n        this.stepperNext('next');\n    }\n\n    getItem(params) {\n        this.item = {};\n        if (_.has(params, 'id')) {\n            this.modelId = params.id;\n            const opts = { current_org_id: this.organization };\n            const store = !_.isUndefined(this.configs)\n                ? this.configs.getStore : this.inlineConfs.getStore;\n            this._dataLayer.get(store, this.modelId, opts)\n            .subscribe(resp => {\n                this.readItem = resp;\n                this.item = resp;\n            }, err => console.log(err));\n        }\n    }\n\n    getConfs() {\n        this._route.queryParams.subscribe(params => {\n            if (this.tabbed) {\n\n            } else {\n                this.multistepConfig = { back: {} };\n                const current = parseInt(params['current'], 10);\n                const ind = _.findIndex(this.steps, { count: current });\n                if (_.has(this.steps[ind], 'formConf')) {\n                    this.configs = this.steps[ind].formConf;\n                    this.formStore = this.configs.store;\n                }\n                if (_.has(this.steps[ind], 'inlineConf')) {\n                    this.inlineConfs = this.steps[ind].inlineConf;\n                }\n                this.getItem(params);\n            }\n        });\n    }\n\n    ngOnInit() {\n        const orgObj = JSON.parse(\n            this._authConfig.getOrganization());\n        \n        this.organization = !_.isUndefined(orgObj) && !_.isNull(orgObj) \n            ? orgObj['organization'] : null;\n        this.getConfs();\n    }\n}","<div *ngIf=\"loading\" class=\"w-100-p\">\n    <div class=\"w-100-p d-flex justify-content-center py-28\">\n        <mat-spinner diameter=\"45\"></mat-spinner>\n    </div>\n</div>\n<div class=\"w-100-p\" *ngIf=\"item?.id\">\n    <dynamic-table title=\"Listing\"\n    [tabbedItem]=\"item\" [modelKey]=\"configs?.modelKey\"\n    [cmptParams]=\"configs?.cmptParams\"\n    class=\"w-100-p\" [addOrg]=\"true\"\n    [headers]=\"configs?.headers\" [no-card]=\"true\"\n    [has-action]=\"true\" [store]=\"configs?.getStore\"\n    [topActions]=\"configs?.topActions\" [hasSearch]=\"true\"\n    [actions]=\"configs?.actions\" [rows]=\"configs.rows\">\n    </dynamic-table>\n</div>\n<div class=\"btn-cont px-20 pb-12 pt-3 border-top\">\n    <div class=\"btn-cont mb-3 pt-12 w-100-p\n    d-flex justify-content-between\">\n        <button mat-raised-button\n        class=\"float-left\"\n        (click)=\"changeStep('prev')\">\n        <mat-icon class=\"btn-icon\">keyboard_arrow_left</mat-icon>\n        <mat-icon class=\"btn-icon\">keyboard_arrow_left</mat-icon>\n            &nbsp;&nbsp;BACK\n        </button>\n        <button mat-raised-button\n        *ngIf=\"!isLast\"\n        class=\"mt-10 float-right mr-0\"\n        color=\"accent\" \n        (click)=\"changeStep('next')\">\n            NEXT&nbsp;\n            <mat-icon class=\"btn-icon\">keyboard_arrow_right</mat-icon>\n            <mat-icon class=\"btn-icon\">keyboard_arrow_right</mat-icon>\n        </button>\n        <button mat-raised-button\n        *ngIf=\"isLast\" color=\"success\"\n        class=\"mt-10 float-right mr-0\"\n        (click)=\"changeStep('next')\">\n            COMPLETE\n        </button>\n    </div>\n</div>","import { Component, EventEmitter, Input, OnInit, Output }  from '@angular/core'\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Authorization } from 'app/services/authorization.service';\n\nimport { DataLayerService } from 'app/services/http/dataLayer.service';\nimport { findIndex, get, has } from 'lodash';\n\n@Component({\n    selector: 'list-wrapper',\n    templateUrl: 'list-wrapper.component.html',\n    styleUrls: ['list-wrapper.component.scss'],\n})\n\nexport class ListWrapperComponent implements OnInit {\n    @Input() steps: Array<any>;\n    @Input() current: any;\n\n    @Output() onNavigate = new EventEmitter();\n\n    multistepConfig: any;\n    submitted: any;\n    error: any;\n    errors: any;\n    item: any;\n    showModal: boolean;\n    loading: boolean;\n    modalConf: any;\n    configs: any;\n    isLast: any;\n\n    constructor(\n        private _route: ActivatedRoute,\n        private _authConfig: Authorization,\n        private _dataLayer: DataLayerService,\n    ) {}\n\n    headers: Array<any> =[];\n    rows: Array<any> = [];\n    actions: Array<any> = [];\n\n    toggleModal() {\n        this.showModal = !this.showModal;\n    }\n\n    changeStep(context) {\n        this.onNavigate.emit(context);\n    }\n\n    setCmptParams() {\n        if(has(this.configs, 'modelKey')) {\n            const listParams = get(this.configs, 'listParams', {});\n            this.configs['cmptParams'] = {\n                ...listParams,\n                [this.configs['modelKey']]: this.item['id']\n            }\n        }\n    }\n\n    getItem(params) {\n        const orgId = get(JSON.parse(\n            this._authConfig.getOrganization()), 'organization');\n        const opts = { current_org_id: orgId };\n        this._dataLayer.get(this.configs.store, params.id, opts)\n        .subscribe(resp => {\n            this.item = resp;\n            this.setCmptParams();\n            this.loading = false;\n        }, err => {\n            console.log(err);\n            this.loading = false;\n        });\n    }\n\n    getItemId() {\n        this._route.queryParams.subscribe(params => {\n            const current = parseInt(params.current, 10);\n            const ind = findIndex(this.steps, { count: current });\n            this.isLast = this.steps.length === ind + 1;\n            this.configs = this.steps[ind].gridConf;\n            this.loading = true;\n            this.getItem(params);\n        })\n    }\n\n    ngOnInit() {\n        this.multistepConfig = {\n            back: { name: 'CANCEL' }\n        };\n        this.getItemId();\n    }\n}","<div class=\"\">\n    <div class=\"d-flex algin-items-center mb-n3\">\n        <div class=\"flex-fill\">\n            <h4 mat-dialog-title class=\"pb-2 font\">\n                Upload Attachment\n            </h4>\n        </div>\n    </div>\n    <!-- Start of main content -->\n    <div class=\"text-muted fullwidth\"\n    mat-dialog-content>\n        <div>\n            <p>\n                Kindly complete the following form below\n            </p>\n            <div>\n                <form [formGroup]=\"uploadForm\" name=\"frm\"\n                (ngSubmit)=\"submitForm(uploadForm)\" class=\"w-100-p\">\n\n                <!-- Custom file upload input -->\n                <div class=\"w-100-p pt-1\">\n                    <div class=\"input-wrapper fullwidth\">\n                        <mat-form-field appearance=\"outline\"\n                        color=\"primary\" class=\"pb-0 mb-0 w-100-p\">\n                            <mat-label>File Description</mat-label>\n                            <textarea name=\"description\" id=\"\" matInput\n                            cols=\"30\" rows=\"2\" formControlName=\"description\"\n                            placeholder=\"Kindly enter a file descripition...\"></textarea>\n                        </mat-form-field>\n                    </div>\n                    <div *ngIf=\"f.description.invalid && \n                    (f.description.touched || f.description.dirty)\"  \n                    class=\"invalid-feedback\">\n                        <div *ngIf=\"f.description.errors.required\">\n                            Description is required\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"w-100-p\">\n                    <app-file-upload formControlName=\"attachment\"\n                    [progress]=\"progress\"></app-file-upload>\n                    <div class=\"invalid-feedback d-flex\">\n                        <div *ngIf=\"hasError('attachment', 'required')\">This field is required</div>\n                        <div *ngIf=\"hasError('attachment', 'requiredFileType')\">Only PNG 🤡</div>\n                    </div>\n                </div>\n\n                <!-- Action buttons -->\n                <div class=\"btn-container d-flex justify-content-end w-100-p\">\n                    <button mat-button mat-dialog-close\n                    type=\"button\" (click)=\"closeDialog()\">CLOSE</button>\n                    <button mat-button type=\"submit\"\n                    [class.spiner]=\"loading\" [disabled]=\"loading\">SUBMIT</button>\n                </div>\n                <!-- End of action buttons -->\n                </form>\n            </div>\n        </div>\n    </div>\n    <!-- End of main content -->\n</div>","import { HttpClient, HttpEvent, HttpEventType, HttpResponse } from '@angular/common/http';\n\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\n\nimport { pipe } from 'rxjs';\nimport { filter, map, tap } from 'rxjs/operators';\nimport { requiredFileType } from '@fuse/components/dynamic-form/common/upload-file-validators';\n\nimport { DataLayerService } from 'app/services/http/dataLayer.service';\nimport { environment as e } from 'environments/environment';\nimport { get } from 'lodash';\n\nexport function uploadProgress<T>(cb: (progress: number) => void) {\n    return tap((event: HttpEvent<T>) => {\n        if (event.type === HttpEventType.UploadProgress) {\n            cb(Math.round((100 * event.loaded)/ event.total));\n        }\n    })\n}\n\nexport function toResponseBody<T>() {\n    return pipe(\n        filter((event: HttpEvent<T>) => event.type === HttpEventType.Response),\n        map((res: HttpResponse<T>) => res.body)\n    );\n}\n\n@Component({\n    selector: 'attachment-dialog',\n    styleUrls: ['attachment-wrapper-dialog.component.scss'],\n    templateUrl: 'attachment-wrapper-dialog.component.html',\n    providers: [DataLayerService],\n})\n\nexport class AttachmentWrapperDialog implements OnInit {\n    loading: boolean;\n    submitted: boolean;\n    orgId: string;\n    context: string;\n    progress = 0;\n\n    sUrl = e.serverURL;\n\n    model: any;\n    success: false;\n    uploadForm: FormGroup;\n\n    constructor(\n        private http: HttpClient,\n        private _formBuilder: FormBuilder,\n        public _dialogRef: MatDialogRef<AttachmentWrapperDialog>,\n        private _dataLayer: DataLayerService,\n        @Inject(MAT_DIALOG_DATA) public data: any\n    ) {}\n\n    formInit() {\n        this.uploadForm = this._formBuilder.group({\n            description: [''],\n            attachment: ['', [Validators.required, requiredFileType('png')]],\n        });\n    }\n\n    get f() { return this.uploadForm.controls }\n\n    submitForm(frm) {\n        console.log(frm, this.uploadForm);\n        if (!frm.valid) {\n            markAllAsDirty(this.uploadForm);\n            return;\n        }\n        this.loading = true;\n        const { attachment, description } = this.uploadForm.value;\n        const fileObj = { file: attachment, attachment_type: 'APPLICATION_DOCUMENT' };\n        let attachmentObj = {\n            attachment: '',\n            description,\n            document_type: this.data.document_type,\n            organization: this.data.organization,\n        };\n        this.http.post(`${this.sUrl}/common/attachments/`, toFormData(fileObj), {\n            reportProgress: true,\n            observe: 'events',\n        }).pipe(\n            uploadProgress(progress => (this.progress = progress)),\n            toResponseBody()\n        ).subscribe(resp => {\n            this.progress = 0;\n            attachmentObj = { ...attachmentObj, attachment: resp['id'] };\n            this._dataLayer.create('organization-attachments', attachmentObj)\n                .subscribe(resp => {\n                    console.log(resp);\n                    this.uploadForm.reset();\n                    this.loading = false;\n                    this.closeDialog('regresh');\n                    const msg = 'File sucessfully uploaded';\n                    this._dataLayer.openDynamicSnackBar(msg, 'success');\n                }, err => {\n                    console.log(err);\n                    this.loading = false;\n                })\n        }, err => {\n            console.log(err);\n            this.loading = false;\n        });\n\n    }\n\n    closeDialog(resp?) {\n        this._dialogRef.close(resp);\n    }\n\n    hasError(field: string, error: string) {\n        const control =  this.uploadForm.get(field);\n        return control.dirty && control.hasError(error);\n    }\n\n    ngOnInit() {\n        console.log(this.data);\n        this.formInit();\n    }\n}\n\nexport function markAllAsDirty( form: FormGroup ) {\n    for ( const control of Object.keys(form.controls) ) {\n      form.controls[control].markAsDirty();\n    }\n  }\n  \nexport function toFormData<T>( formValue: T ) {\n    const formData = new FormData();\n  \n    for ( const key of Object.keys(formValue) ) {\n      const value = formValue[key];\n      formData.append(key, value);\n    }\n  \n    return formData;\n}","<div class=\"w-100-p\">\n    <div class=\"card\">\n        <div class=\"card-header bg-white\">\n            <div class=\"title flex-fill font-weight-600 font-size-16 \n            pt-2 pl-3 d-flex align-items-center\">\n                <div>\n                    <mat-icon>attachment</mat-icon>&nbsp;\n                </div>\n                <div class=\"flex-fill pl-3 mt-n2\">Attachments</div>\n                <div class=\"actions\" *ngIf=\"configs?.headerAction\">\n                    <input type=\"file\" [hidden]=\"true\" class=\"ng-hide\"\n                    id=\"input-file-id\" (change)=\"budgetAttachmentUpload($event)\">\n                    <label for=\"input-file-id\" class=\"mat-button \n                    mat-stroked-button md-primary d-flex pl-3\"\n                    [class.spinner]=\"uploadLoader\">\n                        <mat-icon class=\"mt-2\">cloud_upload</mat-icon>&nbsp;\n                        &nbsp;UPLOAD FILE\n                    </label>\n                </div>\n            </div>\n        </div>\n        <div class=\"card-body p-0\">\n            <div>\n                <table class=\"table borderless\">\n                    <thead class=\"thead-light\"\n                    *ngIf=\"!configs?.attachmentStore\">\n                        <th class=\"pl-24\">\n                            File\n                        </th>\n                        <th>\n                            Required\n                        </th>\n                        <th>\n                            Description\n                        </th>\n                        <th style=\"width:1px;\">\n                            Action\n                        </th>\n                    </thead>\n                    <tbody *ngIf=\"!configs?.attachmentStore\">\n                        <tr *ngFor=\"let attachment of list;let i = index\">\n                            <td class=\"pl-24 valign-middle\" valign=\"middle\">\n                                {{ attachment?.name }}\n                            </td>\n                            <td valign=\"middle\" class=\"valign-middle\">\n                                <span class=\"badge py-2 px-3 font-size-12 {{ \n                                    attachment?.required ? 'badge-danger' : 'badge-info'\n                                }}\" *ngIf=\"!attachment?.attachment_data\">\n                                    {{ attachment?.required ? 'Required' : 'Not Required' }}\n                                </span>\n                                <span class=\"badge badge-success \n                                py-2 px-3 font-size-12\" \n                                *ngIf=\"attachment?.attachment_data\">\n                                    Uploaded\n                                </span>\n                            </td>\n                            <td class=\"valign-middle\" valign=\"middle\">\n                                {{ attachment?.description }}\n                            </td>\n                            <td class=\"pr-24\">\n                                <!-- <input [hidden]=\"true\" class=\"ng-hide\" id=\"input-file-id-{{i}}\"\n                                (change)=\"fileChange($event, attachment)\" type=\"file\" />\n                                <label for=\"input-file-id-{{i}}\" class=\"mat-button \n                                mat-stroked-button md-primary d-flex\"\n                                *ngIf=\"!attachment?.attachment_data\">\n                                    <mat-icon class=\"mt-2\">cloud_upload</mat-icon>&nbsp;\n                                    Upload\n                                </label> -->\n                                <button mat-stroked-button \n                                *ngIf=\"!attachment?.attachment_data\"\n                                (click)=\"selectDocType(attachment)\">\n                                    <mat-icon class=\"mt-2\">cloud_upload</mat-icon>&nbsp;\n                                    Upload\n                                </button>\n                                <a mat-stroked-button download target=\"_blank\"\n                                *ngIf=\"attachment?.attachment_data\"\n                                [attr.href]=\"attachment?.attachment_data['file']\">\n                                    <mat-icon>cloud_download</mat-icon>&nbsp;\n                                    Download\n                                </a>\n                            </td>\n                        </tr>\n                        <tr *ngIf=\"!list?.length && !loading\">\n                            <td colspan=\"3\" class=\"pb-0 mb-0 pl-24\">\n                                <div class=\"w-100-p px-3\">\n                                    <div class=\"alert alert-primary mb-0 pb-2 pt-3\">\n                                        <div class=\"d-flex align-items-center\">\n                                            <div class=\"pr-20\">\n                                                <mat-icon>\n                                                    info_circle\n                                                </mat-icon>\n                                            </div>\n                                            <div class=\"flex-fill\">\n                                                There is currently no documents setup for this organization.\n                                                Kindly contact the administrator\n                                            </div>\n                                            <div class=\"pr-8\">\n                                                <button mat-raised-button color=\"default\"\n                                                (click)=\"toggleCreateForm()\" class=\"pl-3 mt-n2\">\n                                                    <mat-icon>add</mat-icon>&nbsp;\n                                                    ADD ACCOUNT\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                    <thead class=\"thead-light\"\n                    *ngIf=\"configs?.attachmentStore\">\n                        <th class=\"pl-24\">\n                            Name\n                        </th>\n                        <th>\n                            Uploaded At\n                        </th>\n                        <th style=\"width:1px;\">\n                            Action\n                        </th>\n                    </thead>\n                    <tbody *ngIf=\"configs?.attachmentStore\">\n                        <tr *ngFor=\"let attachment of list\">\n                            <td class=\"pl-20\"\n                            *ngIf=\"attachment?.file\">\n                                {{ attachment?.file.name || 'Unknown' }}\n                            </td>\n                            <td class=\"pl-20\"\n                            *ngIf=\"attachment?.file\">\n                                {{ attachment?.file.created | date: 'medium' }}\n                                <mat-icon *ngIf=\"!attachment?.file.created\">\n                                    remove\n                                </mat-icon>\n                            </td>\n                            <td class=\"pr-20\" style=\"width: 1px;\">\n                                <a mat-raised-button download \n                                target=\"_blank\"\n                                [attr.href]=\"attachment?.file.file\" >\n                                    <mat-icon>cloud_download</mat-icon>\n                                    &nbsp;Download\n                                </a>\n                            </td>\n                        </tr>\n                        <tr *ngIf=\"!attachmentsList?.length\">\n                            <td colspan=\"3\" class=\"pb-0 mb-0\">\n                                <div class=\"w-100-p px-3\">\n                                    <div class=\"alert alert-primary mb-0 pb-2 pt-3\">\n                                        <div class=\"d-flex\">\n                                            <div class=\"pr-20\">\n                                                <mat-icon>\n                                                    info_circle\n                                                </mat-icon>\n                                            </div>\n                                            <div>\n                                                There are currently no \n                                                attachments for this {{ context }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"btn-cont px-20 pb-12 pt-3 border-top\">\n    <div class=\"btn-cont mb-3 pt-12 w-100-p\n    d-flex justify-content-between\">\n        <button mat-raised-button\n        class=\"float-left\"\n        (click)=\"changeStep('prev')\">\n        <mat-icon class=\"btn-icon\">keyboard_arrow_left</mat-icon>\n        <mat-icon class=\"btn-icon\">keyboard_arrow_left</mat-icon>\n            &nbsp;BACK\n        </button>\n        <button mat-raised-button\n        *ngIf=\"!isLast\"\n        class=\"mt-10 float-right mr-0\"\n        color=\"accent\" \n        (click)=\"changeStep('next')\">\n            NEXT&nbsp;\n            <mat-icon class=\"btn-icon\">keyboard_arrow_right</mat-icon>\n            <mat-icon class=\"btn-icon\">keyboard_arrow_right</mat-icon>\n        </button>\n        <button mat-raised-button\n        *ngIf=\"isLast\" color=\"success\"\n        class=\"mt-10 float-right mr-0\"\n        (click)=\"changeStep('next')\">\n            COMPLETE\n        </button>\n    </div>\n</div>","import { Component, Input, OnInit, Output, EventEmitter }  from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { DataLayerService } from 'app/services/http/dataLayer.service';\nimport { Authorization } from 'app/services/authorization.service';\n\nimport { findIndex, find, isUndefined, has } from 'lodash';\nimport { AttachmentWrapperDialog } from './attachment-wrapper-dialog/attachment-wrapper-dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n    selector: 'attachment-wrapper',\n    templateUrl: 'attachments-wrapper.component.html',\n    styleUrls: ['../list-wrapper/list-wrapper.component.scss', \n        'attachments-wrapper.component.scss'],\n})\n\nexport class AttachmentsWrapper implements OnInit {\n    @Input() steps: any;\n    @Input() current: any;\n\n    @Output() onNavigate = new EventEmitter();\n\n    configs: any;\n    organization: any;\n    list: Array<any> = [];\n    attachmentsList: Array<any> = [];\n    loading: boolean = true;\n    uploadLoader: boolean;\n    isLast: boolean = false;\n    itemId: any;\n\n    constructor(private _route: ActivatedRoute,\n        private _authConfig: Authorization,\n        private _dialog: MatDialog,\n        private _dataLayer: DataLayerService) {}\n\n    changeStep(context) {\n        this.onNavigate.emit(context);\n    }\n\n    budgetAttachmentUpload(files) {\n        const file = files.target.files[0];\n        const fileFormat = {\n            file,\n            attachment_type: 'ORGANIZATION_BUDGET',\n            budget: this.itemId,\n        };\n        let attachmentObj = {\n            attachment: '',\n            organization: this.organization['organization'],\n            org_budget: this.itemId,\n        };\n        const formData = new FormData();\n        formData.append('file', fileFormat.file);\n        formData.append('attachment_type', fileFormat.attachment_type);\n        this.uploadLoader = true;\n        this._dataLayer.uploadFile('attachments', formData)\n            .subscribe(resp => {\n                attachmentObj = { ...attachmentObj, attachment: resp['id'] };\n                const params = { \n                    key: 'current_org_id', \n                    value: this.organization['organization' ]\n                };\n                this._dataLayer.create(this.configs.attachmentStore, attachmentObj, undefined, params)\n                    .subscribe(resp => {\n                        const msg = 'File succesfully uploaded';\n                        this._dataLayer.openDynamicSnackBar(msg, 'success');\n                        this.getBudgetAttachments();\n                        this.uploadLoader = false;\n                    }, err => {\n                        console.log(err);\n                        const msg = 'An error occurred while uploading file. Kindly try again';\n                        this._dataLayer.openDynamicSnackBar(msg, 'error');\n                        this.uploadLoader = false;\n                    })\n            }, err => {\n                this.uploadLoader = false;\n                console.log(err);\n            })\n    }\n\n    fileChange(files, docType) {\n        const file = files.target.files[0];\n        const fileFormData = {\n            file,\n            attachment_type: 'APPLICATION_DOCUMENT',\n            document_type: docType.id,\n            organization: this.organization['organization'],\n        };\n        const formData = new FormData();\n        formData.append('file', fileFormData.file);\n        formData.append('attachment_type', fileFormData.attachment_type);\n\n        let attachmentObj = {\n            attachment: '',\n            organization: this.organization['organization'],\n            // application: this.itemId,\n            document_type: fileFormData.document_type\n        };\n        this._dataLayer.uploadFile('attachments', formData)\n        .subscribe(resp => {\n            const params = { \n                key: 'current_org_id', \n                value: this.organization['organization' ]\n            };\n            attachmentObj = { ...attachmentObj, attachment: resp['id'] };\n            this._dataLayer.create('organization-attachments', attachmentObj, undefined, params)\n            .subscribe(resp => {\n                console.log(resp);\n                this.getApplicationAttachments();\n            }, err => console.log(err));\n        }, err => console.log(err));\n    }\n\n    selectDocType(docType) {\n        const dialogRef = this._dialog.open(AttachmentWrapperDialog, {\n            data: {\n                organization: this.organization,\n                document_type: docType,\n            }\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            console.log(result);\n            if (result === 'refresh') {\n                this.getDocumentTypes();\n            }\n        })\n    }\n\n    getApplicationAttachments() {\n        const params = {\n            organization: this.organization['organization'],\n            current_org_id: this.organization['organization'],\n        }\n        this._dataLayer.list('organization-attachments', params)\n        .subscribe(resp => {\n            const appAttachments = resp['results'];\n            this.list = this.list.map(docTypeObj => {\n                const linkedFile = find(appAttachments, { \n                    document_type: docTypeObj['id']\n                });\n                if (!isUndefined(linkedFile)) {\n                    docTypeObj['fileObj'] = linkedFile;\n                    docTypeObj['linkedAttachment'] = linkedFile['id'];\n                    docTypeObj['attachment_data'] = linkedFile['attachment_data'];\n                    return docTypeObj;\n                } else {\n                    return docTypeObj;\n                }\n            })\n        }, err => console.log(err));\n    }\n\n    getBudgetAttachments() {\n        this.organization = JSON.parse(localStorage.getItem('organization')) || {};\n        const params = {\n            current_org_id: this.organization['organization'],\n            org_budget: this.itemId,\n        };\n        this.loading = true;\n        this._dataLayer.list(this.configs.attachmentStore, { ...params })\n            .subscribe(resp => {\n                const attachArray = resp['results'];\n                attachArray.map(obj => {\n                    this._dataLayer.get('attachments', obj['attachment'],\n                    { current_org_id: this.organization['organization']})\n                    .subscribe(fileResp => {\n                        obj['file'] = fileResp;\n                        this.attachmentsList.push(obj);\n                        this.list.push(obj);\n                    })\n                });\n                this.loading = false;\n            }, err => {\n                console.log(err);\n                this.loading = false;\n                const msg = 'An error message occurred while retrieving list';\n                this._dataLayer.openDynamicSnackBar(msg, 'error');\n            })\n    }\n\n    getDocumentTypes() {\n        // TODO: Bring back once API fixed\n        const params = { \n            org_type__org_type_code: this.organization.org_type,\n            current_org_id: this.organization['organization'],\n        };\n        // const params = { };\n        this._dataLayer.list('document-types', { ...params })\n        .subscribe(resp => {\n            this.loading = false;\n            this.list = resp['results'];\n            this.getApplicationAttachments();\n        }, err => console.log(err));\n    }\n\n    getItem(params) {\n        this.organization = JSON.parse(localStorage.getItem('organization')) || {};\n        this.getDocumentTypes();\n    }\n\n    getItemId() {\n        this._route.queryParams.subscribe(params => {\n            const current = parseInt(params.current, 10);\n            this.itemId = params['id'];\n            const ind = findIndex(this.steps, { count: current });\n            this.isLast = this.steps.length === ind + 1;\n            this.configs = this.steps[ind].gridConf;\n            if (has(this.configs, 'attachmentStore')) {\n                this.getBudgetAttachments();\n            } else {\n                this.getItem(params);\n            }\n        })\n    }\n\n    ngOnInit() {\n        this.getItemId();\n    }\n}","<div class=\"card\">\n    <div class=\"card-header pt-3 bg-white\">\n        <div class=\"pl-3 text-muted font-weight-bold pb-2 d-flex\n        align-items-center\">\n            <div class=\"pt-2 pr-2\">\n                <mat-icon>account_balance</mat-icon>\n            </div>\n            <div>Bank Account</div>\n        </div>\n    </div>\n    <div class=\"card-body px-0 pb-3 pt-0\">\n        <div>\n            <table class=\"table borderless\">\n                <thead class=\"thead-light\">\n                    <tr>\n                        <th *ngFor=\"let header of gridConf\"\n                        class=\"pl-24\">\n                            {{ header.name }}\n                        </th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let anItem of list;let i = index;\">\n                        <td *ngFor=\"let data of gridConf\"\n                        [hidden]=\"showForm\"\n                        [class.pl-24]=\"i === 0\">\n                            {{ anItem[data.key] }}\n                            <mat-icon *ngIf=\"!anItem[data.key]\">\n                                remove\n                            </mat-icon>\n                        </td>\n                        <td [hidden]=\"showForm\">\n                            <button mat-stroked-button\n                            (click)=\"toggleForm(anItem)\"\n                            color=\"accent\">Edit</button>\n                        </td>\n                        <td [attr.colspan]=\"gridConf.length + 1\"\n                        class=\"bg-light-grey py-3 px-5\" *ngIf=\"showForm\">\n                            <div class=\"col-12 col-lg-8\"\n                            style=\"margin: auto;\">\n                                <mat-card class=\"card p-0\">\n                                    <div class=\"card-header py-0\">\n                                        <div class=\"d-flex\">\n                                            <div class=\"flex-fill pt-3\">\n                                                EDIT BANK DETAILS\n                                            </div>\n                                            <div>\n                                                <span style=\"cursor: pointer;\"\n                                                class=\"font-size-28 text-muted\"\n                                                (click)=\"toggleForm(anItem)\">\n                                                    &times;\n                                                </span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"card-body px-5 pt-5\">\n                                        <!-- TODO: Implement inline form -->\n                                        <dynamic-form btnText=\"SAVE\"\n                                        btnClass=\"tiny\" [model]=\"anItem\"\n                                        [submitted]=\"submitted\" [baseCancel]=\"true\"\n                                        store=\"organization-bank-accounts\" btnStatus=\"primary\"\n                                        (cancelFxn)=\"toggleForm(anItem)\"\n                                        (submitModel)=\"receiveModel($event)\">\n                                        </dynamic-form>\n                                    </div>\n                                </mat-card>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"list?.length === 0 && !loading\">\n                        <td  [attr.colspan]=\"gridConf.length + 1\"\n                        class=\"bg-light-grey py-3 px-5\">\n                            <div class=\"col-12 col-lg-8\"\n                            style=\"margin: auto;\">\n                                <mat-card class=\"card p-0\">\n                                    <div class=\"card-header pt-2 pb-16\">\n                                        <div class=\"d-flex\">\n                                            <div class=\"flex-fill pt-3\">\n                                                ADD BANK DETAILS\n                                            </div>\n                                            <div>\n                                                <!-- <span style=\"cursor: pointer;\"\n                                                class=\"font-size-28 text-muted\"\n                                                (click)=\"toggleForm(anItem)\">\n                                                    &times;\n                                                </span> -->\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"card-body px-5 pt-5\">\n                                        <!-- TODO: Implement inline form -->\n                                        <dynamic-form btnText=\"SAVE\"\n                                        btnClass=\"tiny\"\n                                        [submitted]=\"submitted\" \n                                        store=\"organization-bank-accounts\" \n                                        btnStatus=\"primary\"\n                                        (submitModel)=\"receiveModel($event)\">\n                                        </dynamic-form>\n                                    </div>\n                                </mat-card>\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n<div class=\"btn-cont px-20 pb-12 pt-3 border-top\">\n    <div class=\"btn-cont mb-3 pt-12 w-100-p\n    d-flex justify-content-between\">\n        <button mat-raised-button\n        class=\"float-left\"\n        (click)=\"changeStep('prev')\">\n        <mat-icon class=\"btn-icon\">keyboard_arrow_left</mat-icon>\n        <mat-icon class=\"btn-icon\">keyboard_arrow_left</mat-icon>\n            &nbsp;&nbsp;BACK\n        </button>\n        <button mat-raised-button\n        *ngIf=\"!isLast\"\n        class=\"mt-10 float-right mr-0\"\n        color=\"accent\" \n        (click)=\"changeStep('next')\">\n            NEXT&nbsp;\n            <mat-icon class=\"btn-icon\">keyboard_arrow_right</mat-icon>\n            <mat-icon class=\"btn-icon\">keyboard_arrow_right</mat-icon>\n        </button>\n        <button mat-raised-button\n        *ngIf=\"isLast\" color=\"success\"\n        class=\"mt-10 float-right mr-0\"\n        (click)=\"changeStep('next')\">\n            COMPLETE\n        </button>\n    </div>\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Authorization }  from 'app/services/authorization.service';\nimport { DataLayerService }  from 'app/services/http/dataLayer.service';\nimport { findIndex, get, has } from 'lodash';\n\n@Component({\n    selector: 'inline-list-wrapper',\n    templateUrl: 'inline-list-wrapper.component.html',\n    styleUrls: ['../list-wrapper/list-wrapper.component.scss'],\n})\n\nexport class InlineListWrapper implements OnInit {\n    @Input() steps: Array<any>;\n    @Input() current: any;\n\n    @Output() onNavigate = new EventEmitter();\n\n    multistepConfig: any;\n    list: Array<any>;\n    submitted: any;\n    item: any;\n    loading: boolean = true;\n    showForm: boolean;\n    isLast: boolean;\n    configs: any;\n    orgId: any;\n\n    gridConf: Array<any> = [\n        {\n            name: 'Account Name',\n            key: 'account_name',\n        },\n        {\n            name: 'Account #',\n            key: 'account_number',\n        },\n        {\n            name: 'Bank Name',\n            key: 'bank_name',\n        },\n        {\n            name: 'Branch Name',\n            key: 'branch_name',\n        }\n    ];\n\n    constructor(private _route: ActivatedRoute,\n        private _authConfig: Authorization,\n        private _dataLayer: DataLayerService) {}\n    \n    toggleForm() {\n        this.showForm = !this.showForm;\n    }\n\n    changeStep(context) {\n        this.onNavigate.emit(context);\n    }\n\n    addListItem(model) {\n        model = { ...model, organization: this.orgId };\n        this._dataLayer.create('organization-bank-accounts', model)\n        .subscribe(() => {\n            this.getRelatedList();\n            this.loading = false;\n        }, err => { this.loading = false; console.log(err)});\n    }\n\n    updateListItem(model) {\n        const params = { current_org_id: this.orgId };\n        this._dataLayer.update('organization-bank-account', \n        model.id, model, params).subscribe(() => {\n            this.getRelatedList();\n            this.loading = false;\n        }, err => { this.loading = false; console.log(err)});\n    }\n\n    receiveModel(model) {\n        if (has(model, 'id')) {\n            this.updateListItem(model);\n        } else {\n            this.addListItem(model);\n        }\n    }\n\n    getRelatedList(params?) {\n        const opts = {\n            organization: this.orgId, \n            current_org_id: this.orgId \n        };\n        this._dataLayer.list('organization-bank-accounts', opts)\n        .subscribe(resp => {\n            this.list = resp['results'];\n            this.loading = false;\n            this.showForm =  this.list.length > 0;\n        }, err => { this.loading = false; console.log(err)});\n    }\n\n    getItemId() {\n        this._route.queryParams.subscribe(params => {\n            const current = parseInt(params.current, 10);\n            this.orgId = parseInt(params['id'], 10);\n            const ind = findIndex(this.steps, { count: current });\n            this.isLast = this.steps.length === ind + 1;\n            this.configs = this.steps[ind].gridConf;\n            this.getRelatedList();\n        })\n    }\n\n    ngOnInit() {\n        this.getItemId();\n    }\n}","<div class=\"card main-wrapper\">\n    <div class=\"card-header pt-3 bg-white\">\n        <div class=\"pl-3 text-muted font-weight-bold pb-2 d-flex\n        align-items-center\">\n            <div class=\"pt-2 pr-2\">\n                <mat-icon>account_balance_wallet</mat-icon>\n            </div>\n            <div>\n                Allowances\n            </div>\n        </div>\n    </div>\n    <div class=\"card-body px-0 pb-0 pt-0\">\n        <div>\n            <!-- Start of content -->\n            <div class=\"w-100-p d-flex flex-row  px-0\">\n                <div class=\"h-100-p overflow-auto innerScroll\n                page-layout col-lg-3 main-list\">\n                    <div class=\"ps\">\n                        <div class=\"mail-list overflow-auto\"\n                        fuseperfectscrollbar>\n                            <div class=\"list-item\"\n                            *ngFor=\"let allowance of list;let i = index;\"\n                            [class.active]=\"allowance.active\"\n                            (click)=\"setSelected(allowance.id)\">\n                                <div class=\"pb-0\">\n                                    {{allowance?.allowance_data.name}}\n                                </div>\n                                <div class=\"d-flex flex-column align-items-start\">\n                                    <div class=\"d-flex flex-row align-items-center fullwidth ml-n1\">\n                                        <div class=\"pt-2\"><mat-icon class=\"font-size-18\n                                        text-muted\">attach_money</mat-icon>\n                                        </div>\n                                        <div class=\"font-size-14 text-muted pl-1\">\n                                            {{allowance?.actual_total | currency: 'Kshs '}}\n                                        </div>\n                                    </div>\n                                    <div class=\"d-flex flex-row align-items-center fullwidth pt-0 mt-n2\">\n                                        <div class=\"pt-2\"><mat-icon class=\"font-size-16\n                                            text-muted\">people</mat-icon>\n                                        </div>\n                                        <div class=\"font-size-14 text-muted\">\n                                            {{allowance?.head_count }} \n                                            <span class=\"font-weight-bold\">\n                                                &nbsp;For&nbsp;\n                                            </span>\n                                            {{allowance?.days | number: '1.0'}} day(s)\n                                        </div>\n                                    </div>\n                                </div>\n                                <!-- <div>\n                                    <span class=\"badge {{activity?.status | lowercase }}\n                                    font-size-10 pt-2 font-size-10 px-8\">\n                                        {{activity?.status | removeUnderscore}}\n                                    </span>\n                                </div> -->\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!-- Start of nested list content -->\n                <div class=\"col-lg-9 overflow-auto innerScroll px-0 mt-1\n                bg-light pb-12\"\n                *ngIf=\"selectedAllowance && !loading\">\n                    <div class=\"full-width bg-light px-16 pt-12 pb-2\">\n                        <mat-card class=\"mat-elevation-z1 p-0 mb-2 w-100-p\">\n                            <div class=\"card-header bg-white font-size-16\">\n                                <div class=\"d-flex flex-row\">\n                                    <div class=\"flex-fill pb-1 pl-8 title pt-2\">\n                                        Select Members\n                                    </div>\n                                    <div class=\"pt-1 pr-3\">\n                                        <button mat-mini-fab color=\"default\"\n                                        class=\"mat-elevation-z0 border bg-light h-32 w-32\"\n                                        aria-label=\"Activity actions\"\n                                        [matMenuTriggerFor]=\"menu\">\n                                            <mat-icon class=\"mt-n2 fonnt-size-20\">more_vert</mat-icon>\n                                        </button>\n                                        <mat-menu #menu=\"matMenu\">\n                                            <button mat-menu-item\n                                            *ngFor=\"let btnAct of actActions\"\n                                            (click)=\"openCRUDDialog(btnAct.context)\">\n                                                <mat-icon [class]=\"btnAct?.iconClass\">\n                                                    {{btnAct?.icon}}\n                                                </mat-icon>\n                                                {{btnAct?.text}}\n                                            </button>\n                                        </mat-menu>\n                                    </div>\n                                </div>\n                            </div> \n                            <mat-card-body class=\"p-0\">\n                                <div class=\"w-100-p mt-0 px-0\">\n                                    <dynamic-table title=\"Listing\"\n                                        [tabbedItem]=\"item\" [largeForms]=\"true\"\n                                        class=\"w-100-p\" [addOrg]=\"true\" [customHeader]=\"true\"\n                                        [modelKey]=\"configs?.modelKey\" [cmptParams]=\"cmptParams\"\n                                        [headers]=\"configs?.headers\" [no-card]=\"true\"\n                                        [has-action]=\"true\" [store]=\"configs?.getStore\"\n                                        [topActions]=\"configs?.topActions\" [hasSearch]=\"true\"\n                                        (postCRUDFxn)=\"refreshSelected()\"\n                                        [dropDownActions]=\"configs?.actions\" [rows]=\"configs.rows\">\n                                    </dynamic-table>\n                                </div>\n                            </mat-card-body>\n                        </mat-card>\n                    </div>\n                </div>\n            </div>\n            <!-- End of content -->\n        </div>\n    </div>\n</div>\n<div class=\"btn-cont px-20 pb-12 pt-3 border-top\">\n    <div class=\"btn-cont mb-3 pt-12 w-100-p\n    d-flex justify-content-between\">\n        <button mat-raised-button\n        class=\"float-left\"\n        (click)=\"changeStep('prev')\">\n        <mat-icon class=\"btn-icon\">keyboard_arrow_left</mat-icon>\n        <mat-icon class=\"btn-icon\">keyboard_arrow_left</mat-icon>\n            &nbsp;&nbsp;BACK\n        </button>\n        <button mat-raised-button\n        *ngIf=\"!isLast\"\n        class=\"mt-10 float-right mr-0\"\n        color=\"accent\" \n        (click)=\"changeStep('next')\">\n            NEXT&nbsp;\n            <mat-icon class=\"btn-icon\">keyboard_arrow_right</mat-icon>\n            <mat-icon class=\"btn-icon\">keyboard_arrow_right</mat-icon>\n        </button>\n        <button mat-raised-button\n        *ngIf=\"isLast\" color=\"success\"\n        class=\"mt-10 float-right mr-0\"\n        (click)=\"changeStep('next')\">\n            COMPLETE\n        </button>\n    </div>\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { DataLayerService } from 'app/services/http/dataLayer.service';\nimport { find, findIndex, get, indexOf, isUndefined } from 'lodash';\n\n@Component({\n    selector: 'nested-inline-list',\n    templateUrl: 'nested-inline-list.component.html',\n    styleUrls: ['nested-inline-list.component.scss'],\n    providers: [DataLayerService],\n})\n\nexport class NestedInlineList implements OnInit {\n    @Input() steps: Array<any>;\n    @Input() current: any;\n\n    @Output() onNavigate = new EventEmitter();\n\n    multistepConfig: any;\n    list: Array<any> = [];\n    nestedList: Array<any> = [];\n    submitted: any;\n    item: any;\n    loading:boolean = true;\n    isLast: boolean;\n    configs: any;\n    orgId: any;\n    itemId: any;\n    selectedAllowance: any;\n    cmptParams: any = { };\n    actActions: Array<any> = [];\n\n    constructor(private _route: ActivatedRoute,\n        private _dataLayer: DataLayerService) {}\n\n    changeStep(context) {\n        this.onNavigate.emit(context);\n    }\n\n    setSelected(allowanceId?) {\n        if (this.list.length) {\n            let selected = find(this.list, { active: true });\n            if (isUndefined(selected) && isUndefined(allowanceId)) {\n                this.list[0].active = true;\n                this.selectedAllowance = undefined;\n                this.presetAllowance(0);\n            } else {\n                if (!isUndefined(allowanceId)) {\n                    const currInd = indexOf(this.list, find(this.list, { id: allowanceId }));\n                    this.selectedAllowance = undefined;\n                    this.presetAllowance(currInd);\n                } else {\n                    this.selectedAllowance = indexOf(this.list, selected);\n                }\n            }\n        }\n    }\n\n    loadActions() {\n        const defaultActions = [\n            {\n                text: 'Rationalize', icon: 'compare_arrows',\n                iconClass: 'text-success',\n                context: 'rationalize', status: ['DRAFT'],\n                bpType: ['MINISTRY', 'SASDEF'],\n            },\n            {\n                text: 'Approve', icon: 'check',\n                iconClass: 'text-success',\n                context: 'approve', status: ['RATIONALIZED'],\n                bpType: ['SASDEF'],\n            },\n            {\n                text: 'Reject', icon: 'close',\n                iconClass: 'text-danger',\n                context: 'reject', status: ['DRAFT', 'RATIONALIZED'],\n                bpType: ['MINISTRY', 'SASDEF'],\n            }\n        ];\n        const orgType = get(\n            JSON.parse(localStorage.getItem('organization')), 'org_type', null);\n        this.actActions = defaultActions.filter(act => {\n            const orgInd = indexOf(act.bpType, orgType);\n            const statusInd = indexOf(act.status, this.item.status);\n            if (orgInd >= 0 && statusInd >= 0) return act;\n        });\n    }\n\n    presetAllowance(currInd: number) {\n        this.loading = true;\n        const oldInd = indexOf(this.list, find(this.list, { active: true }));\n        this.selectedAllowance = undefined;\n        if (oldInd >= 0) {\n            this.list[oldInd].active = false;\n        }\n        this.list[currInd].active = true;\n        this.getNestedList(this.list[currInd].id);\n        const opts = { current_org_id: this.orgId };\n        this._dataLayer.get('organization-budget-activity-allowances', \n            this.list[currInd].id, opts)\n            .subscribe(resp => {\n                this.selectedAllowance = this.list[currInd] || resp;\n                this.cmptParams = {\n                    ...this.cmptParams, \n                    budget_activity_allowance: this.list[currInd].id\n                }\n                this.loadActions();\n                this.loading = false;\n            }, err => { console.log(err); this.loading = false; });\n    }\n\n    getNestedList(id: any) {\n        const params = {\n            current_org_id: this.orgId,\n            budget_activity_allowance: id,\n        };\n        this._dataLayer.list('application-allowances', params)\n            .subscribe(resp => {\n                this.nestedList = resp['results'];\n            }, err => console.log(err));\n    }\n\n    getMainList() {\n        const params = {\n            current_org_id: this.orgId,\n            budget_activity: this.item.activity,\n        };\n        this._dataLayer.list('organization-budget-activity-allowances', params)\n            .subscribe(resp => {\n                this.list = resp['results'];\n                this.setSelected();\n            }, err => console.log(err));\n    }\n\n    getItem() {\n        const getParams = { 'current_org_id': this.orgId };\n        this._dataLayer.get('applications', this.itemId, getParams)\n            .subscribe(resp => {\n                this.item = resp;\n                this.getMainList();\n            }, err => console.log(err));\n    }\n\n    getItemId() {\n        this._route.queryParams.subscribe(params => {\n            const current = parseInt(params.current, 10);\n            this.itemId = parseInt(params['id'], 10);\n            const ind = findIndex(this.steps, { count: current });\n            this.configs = this.steps[ind].gridConf;\n            this.getItem();\n        })\n    }\n\n    ngOnInit() {\n        this.orgId = get(JSON.parse(\n            localStorage.getItem('organization')), 'organization', null);\n        this.getItemId();\n    }\n}","<div class=\"w-100-p\">\n    <!-- Start of stepper header -->\n    <div class=\"container-header w-100-p\">\n        <div class=\"d-flex\">\n            <div class=\"d-flex flex-column flex-fill pt-12\">\n                <div class=\"title\">\n                    {{ isEdit ? 'Review' : 'New' }} {{ context }}\n                </div>\n                <div class=\"text-light pt-2 d-flex\">\n                    <div class=\"pr-2\">\n                        {{ currentStep?.help_text }}:\n                    </div>\n                    <div>\n                        <b>{{ currentStep?.label }}</b>\n                    </div>\n                </div>\n            </div>\n            <div class=\"d-flex justify-content-around\">\n                <div *ngFor=\"let step of steps\"\n                class=\"steps-cont sm\">\n                    <div class=\"circle d-flex justify-content-center\">\n                        <div class=\"rounded-circle counter\n                        {{ step.active ? 'active' : '' }}\n                        {{ step.done ? 'done' : '' }}\">\n                            <span class=\"font-size-18\">\n                                <mat-icon *ngIf=\"!step.done\">\n                                    {{ step.icon }}\n                                </mat-icon>\n                                <mat-icon *ngIf=\"step.done && !step.active\">\n                                    check\n                                </mat-icon>\n                                <mat-icon \n                                *ngIf=\"step.done && step.active\">\n                                    {{ step.icon }}\n                                </mat-icon>\n                            </span>\n                        </div>\n                    </div>\n                    <div class=\"stepper-label sm pt-3\n                    {{ step.active ? 'active font-weight-bold' : '' }}\n                    {{ step.done ? 'done font-weight-bold' : '' }}\">\n                        <div class=\"w-100-p text-center text-light\">\n                            {{ step.shortLabel }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- End of stepper header -->\n\n    <!-- Start of stepper content -->\n    <div class=\"px-5\">\n        <div class=\"px-5\">\n            <mat-card class=\"w-100-p raised mb-5 p-0\">\n                <mat-card-content class=\"p-0\">\n                    <ng-container [ngTemplateOutlet]=\"this[cmpt]\"></ng-container>\n                </mat-card-content>\n            </mat-card>\n        </div>\n    </div>\n    <!-- End of stepper content -->\n</div>\n\n<ng-template #one>\n    <form-wrapper\n    [steps]=\"steps\" class=\"fade-in\"\n    (onNavigate)=\"navigate($event)\">\n    </form-wrapper>\n</ng-template>\n<ng-template #two>\n    <div *ngIf=\"cmpt === 'two'\">\n        <list-wrapper \n        [steps]=\"steps\" class=\"fade-in\"\n        (onNavigate)=\"navigate($event)\">\n        </list-wrapper>\n    </div>\n</ng-template>\n<ng-template #three>\n    <div *ngIf=\"cmpt === 'three'\">\n        <attachment-wrapper\n        [steps]=\"steps\" class=\"fade-in\"\n        (onNavigate)=\"navigate($event)\">\n        </attachment-wrapper>\n    </div>\n</ng-template>\n<ng-template #four>\n    <div *ngIf=\"cmpt === 'four'\">\n        <inline-list-wrapper\n        [steps]=\"steps\" class=\"fade-in\"\n        (onNavigate)=\"navigate($event)\">\n        </inline-list-wrapper>\n    </div>\n</ng-template>\n<ng-template #five>\n    <div *ngIf=\"cmpt === 'five'\">\n        <nested-inline-list\n        [steps]=\"steps\" class=\"fade-in\"\n        (onNavigate)=\"navigate($event)\">\n        </nested-inline-list>\n    </div>\n</ng-template>\n<ng-template #six>\n    <div *ngIf=\"cmpt === 'six'\">\n        <nested-list [steps]=\"steps\"\n        (onNavigate)=\"navigate($event)\">\n        </nested-list>\n    </div>\n</ng-template>","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Authorization } from 'app/services/authorization.service';\nimport { DataLayerService } from 'app/services/http/dataLayer.service';\nimport { StepperWrapperService } from '../../services/stepper-wrapper.service';\n\nimport * as _ from 'lodash';\n\n@Component({\n    selector: 'stepper-wrapper',\n    templateUrl: 'main-wrapper.component.html',\n    styleUrls: ['main-wrapper.component.scss'],\n    providers: [DataLayerService],\n})\n\nexport class MainStepperWrapperComponent implements OnInit {\n    @ViewChild('one') one: TemplateRef<any>;\n    @ViewChild('two') two: TemplateRef<any>;\n    @ViewChild('three') three: TemplateRef<any>;\n    @ViewChild('four') four: TemplateRef<any>;\n    @ViewChild('five') five: TemplateRef<any>;\n    @ViewChild('six') six: TemplateRef<any>;\n    // global stepper variables\n    user: any;\n    context: string;\n    title: string;\n    subHeaderKey: string;\n    store: string;\n    // item container variables\n    item: any = {};\n    itemId: string;\n    listRoute: string;\n    configs: any;\n    isEdit: boolean;\n    // stepper logic variables\n    steps: Array<any>;\n    step: string;\n    originalSteps: Array<any>;\n    cmpt: string;\n    current: any;\n    currentStep: any;\n    furthest: any;\n    otherParams: any;\n\n    constructor(\n        private _router: Router,\n        private _route: ActivatedRoute,\n        private _authConfig: Authorization,\n        private _datalayer: DataLayerService,\n        private _stepperService: StepperWrapperService,\n    ) {}\n\n    setFurthest(params: any, otherParams?) {\n        const routeParams = { ...params, ...otherParams };\n        this._router.navigate([], { queryParams: routeParams });\n    }\n\n    checkStep(otherParams?) {\n        if (_.isUndefined(this.furthest) || this.furthest === 0) {\n            this.steps[0].active = true;\n            this.currentStep = this.steps[0];\n            this.furthest = 1;\n            this.current = 1;\n            this.cmpt = 'one';\n            const params = { step: 1, current: 1, ...this.otherParams };\n            this.setFurthest(params, otherParams);\n        } else {\n            const furthestStep = this.furthest - 1;\n            this.currentStep = _.find(this.steps, { count: this.current });\n            const indVal = _.findIndex(this.steps, this.currentStep);\n            this.steps = this.steps.map((step, ind) => {\n                if (ind < furthestStep && furthestStep !== 0) {\n                    return { ...step, done: true, active: false };\n                }\n                if (furthestStep === 0 && ind !== 0) {\n                    return { ...step, done: false, active: false };\n                }\n                return step;\n            });\n            this.steps[furthestStep].active = true;\n            this.steps[indVal].active = true;\n            this.cmpt = this.steps[indVal].template;\n        }\n    }\n\n    goToNext(qParams?) {\n        const ind = _.findIndex(this.steps, { count: this.current });\n        if ((ind + 1) < this.steps.length) {\n            this.cmpt = this.steps[ind + 1].template;\n            const current = this.steps[ind + 1].count;\n            this.furthest = (this.steps[ind + 1].count > this.furthest)\n                ? (this.furthest + 1) \n                : this.furthest;\n            const params = { step: this.furthest, current, id: this.itemId };\n            // check for any additional params\n            if (qParams) {\n                const keys = _.keys(qParams);\n                _.each(keys, aKey => {\n                    params[aKey] = qParams[aKey];\n                });\n            }\n            // navigate to set new params to be used\n            this.setFurthest(params);\n        } else if ((ind + 1) === this.steps.length) {\n            this.steps = this.originalSteps;\n            setTimeout(() => {\n                this.steps = [];\n                this.furthest = undefined;\n                this._router.navigateByUrl(this.listRoute);\n            }, 250);\n        }\n    }\n\n    goToPrev() {\n        const ind = _.findIndex(this.steps, { count: this.current });\n        if (ind === 0) {\n            this._router.navigateByUrl(this.listRoute);\n        } else {\n            this.current = this.steps[ind - 1].count;\n            this.steps[this.current].active = true;\n            const params = { \n                step: this.furthest, \n                current: this.current, \n                id: this.itemId \n            };\n            this.setFurthest(params);\n        }\n    }\n    // executed from nested component\n    navigate($event, qParams?) {\n        const evt = _.isObject($event) ? $event['direction'] : $event;\n        if (evt === 'next') {\n            this.goToNext($event.params);\n        } else {\n            this.goToPrev();\n        }\n    }\n\n    setParams() {\n        this._route.queryParams\n        .subscribe(params => {\n            console.log(params);\n            this.step = params['step'];\n            this.current = parseInt(params['current'], 10) || 1;\n            this.itemId = params['id'];\n            this.furthest = !_.isUndefined(params['step'])\n                ? parseInt(params['step'], 10) : undefined;\n            this._route.data.subscribe(data => {\n                const stepsCont = this._stepperService.getSteps(data['stepsKey']);\n                this.steps = [ ...stepsCont ];\n                this.originalSteps = this.steps;\n                this.listRoute = data['listRoute'];\n                this.context = data['context'];\n                this.checkStep(params);\n            });\n        })\n    }\n\n    ngOnInit() {\n        this.otherParams = {};\n        this.current = 'one';\n        this.user = JSON.parse(this._authConfig.getUser());\n        this.isEdit = this._router.url.includes('edit');\n        setTimeout(() => {\n            this.cmpt = 'one';\n            this.setParams();\n        })\n    }\n}","export const ApplicationStepsConfig = [\n    { \n        count: 1,\n        label: 'Basic Details',\n        shortLabel: 'Basic',\n        help_text: 'Step 1',\n        icon: 'work',\n        template: 'one',\n        formConf: {\n            store: 'applications',\n            cancelTxt: 'CANCEL',\n            nextTxt: 'NEXT',\n            addStore: 'auto-create-application',\n            editStore: 'applications',\n            getStore: 'applications'\n        },\n        active: false\n    },\n    { \n        count: 2,\n        label: 'Application Billabe Items',\n        shortLabel: 'Items',\n        help_text: 'Step 2',\n        icon: 'list_alt',\n        template: 'two',\n        inlineConf: {\n            store: 'visit',\n            cancelTxt: 'BACK',\n            nextTxt: 'COMPLETE',\n            editStore: 'visits',\n            getStore: 'visits'\n        },\n        active: false,\n        modelKey: 'application',\n        listParams: { 'member_null': true },\n        gridConf: {\n            store: 'applications',\n            modelKey: 'application',\n            listParams: { 'member_null': true },\n            getStore: 'application-items',\n            editStore: 'application-items',\n            topActions: [\n                {\n                    btnText: 'ADD BILLABLE ITEM',\n                    status: 'info',\n                    icon: 'true',\n                    action: 'inline',\n                    conf: {\n                        context: 'BILLABLE ITEM',\n                        store: 'application-items',\n                        btnText: 'SAVE'\n                    }\n                }\n            ],\n            rows: [\n                {\n                    key: 'item',\n                    type: 'compact-line',\n                    context: 'billable-item',\n                    fieldType: 'nested_string',\n                    primaryField: 'item_data.name',\n                },\n                {\n                    key: 'item',\n                    type: 'compact-line',\n                    context: 'billable-item',\n                    fieldType: 'activity_details',\n                    primaryField: 'item_data.name',\n                },\n                { \n                    key: 'item', \n                    type: 'compact-line',\n                    context: 'billable-item',\n                    fieldType: 'nested_status_total',\n                    primaryField: 'item_data.name', \n                },\n                { \n                    key: 'item', \n                    type: 'compact-line',\n                    context: 'billable-item',\n                    fieldType: 'nested_totals',\n                    primaryField: 'item_data.name', \n                },\n            ],\n            headers: [\n                { title: 'Item' },\n                { title: 'Activity Item' },\n                { title: 'Total' },\n                { title: 'Approved Totals' },\n                { title: 'Actions', oderable: false, searchable: false },\n            ],\n            actions: [\n                {\n                    btnText: 'EDIT',\n                    status: 'info',\n                    icon: false,\n                    disableStatus: 'FINISHED',\n                    action: 'inline',\n                    modalConf: {\n                        store: 'application-items',\n                        titleKey: 'item',\n                        context: 'Billable Item',\n                        btnText: 'SAVE'\n                    }\n                },\n            ]\n        },\n    },\n    { \n        count: 3,\n        label: 'Event Attendees',\n        shortLabel: 'Attendees',\n        help_text: 'Step 3',\n        icon: 'people',\n        template: 'two',\n        inlineConf: {\n            store: 'visit',\n            cancelTxt: 'BACK',\n            nextTxt: 'COMPLETE',\n            editStore: 'visits',\n            getStore: 'visits'\n        },\n        active: false,\n        gridConf: {\n            store: 'applications',\n            modelKey: 'application',\n            listParams: { 'member_null': false },\n            getStore: 'application-attendees',\n            editStore: 'application-attendees',\n            topActions: [\n                {\n                    btnText: 'ADD ATTENDEE',\n                    status: 'info',\n                    icon: 'true',\n                    action: 'inline',\n                    conf: {\n                        context: 'ATTENDEE',\n                        store: 'application-attendees',\n                        btnText: 'SAVE'\n                    }\n                }\n            ],\n            rows: [\n                { \n                    key: 'item', \n                    type: 'compact-line',\n                    context: 'attendees',\n                    fieldType: 'nested_string',\n                    primaryField: 'item_data.name', \n                },\n                {\n                    key: 'item',\n                    type: 'compact-line',\n                    context: 'billable-item',\n                    fieldType: 'activity_details',\n                    primaryField: 'item_data.name',\n                },\n                { \n                    key: 'item', \n                    type: 'compact-line',\n                    context: 'billable-item',\n                    fieldType: 'nested_status_total',\n                    primaryField: 'item_data.name', \n                },\n                { \n                    key: 'item', \n                    type: 'compact-line',\n                    context: 'billable-item',\n                    fieldType: 'nested_totals',\n                    primaryField: 'item_data.name', \n                },\n            ],\n            headers: [\n                { title: 'Member' },\n                { title: 'Activity Details' },\n                { title: 'Totals' },\n                { title: 'Approved Totals' },\n                { title: 'Actions', oderable: false, searchable: false },\n            ],\n            actions: [\n                {\n                    btnText: 'EDIT',\n                    status: 'info',\n                    icon: false,\n                    disableStatus: 'FINISHED',\n                    action: 'inline',\n                    modalConf: {\n                        store: 'application-attendees',\n                        titleKey: 'item',\n                        context: 'Attendee',\n                        btnText: 'SAVE'\n                    }\n                }\n            ]\n        },\n    },\n    { \n        count: 4,\n        label: 'Event Allowances',\n        shortLabel: 'Allowances',\n        help_text: 'Step 4',\n        icon: 'account_balance_wallet',\n        template: 'five',\n        inlineConf: {\n            store: 'visit',\n            cancelTxt: 'BACK',\n            nextTxt: 'COMPLETE',\n            editStore: 'visits',\n            getStore: 'visits'\n        },\n        active: false,\n        gridConf: {\n            store: 'applications',\n            modelKey: 'application',\n            getStore: 'application-allowances',\n            editStore: 'application-allowances',\n            topActions: [\n                {\n                    btnText: 'ADD ALLOWANCE',\n                    status: 'info',\n                    icon: 'true',\n                    action: 'inline',\n                    conf: {\n                        context: 'ALLOWANCES',\n                        store: 'application-allowances',\n                        btnText: 'SAVE'\n                    }\n                }\n            ],\n            rows: [\n                { \n                    key: 'item', \n                    type: 'compact-line',\n                    context: 'allowances',\n                    fieldType: 'nested_member',\n                    primaryField: 'item_data.name', \n                },\n                { \n                    key: 'item', \n                    type: 'compact-line',\n                    context: 'billable-item',\n                    fieldType: 'nested_status_total',\n                    primaryField: 'item_data.name', \n                },\n                { \n                    key: 'item', \n                    type: 'compact-line',\n                    context: 'billable-item',\n                    fieldType: 'nested_totals',\n                    primaryField: 'item_data.name', \n                },\n            ],\n            headers: [\n                { title: 'Allowance' },\n                { title: 'Totals' },\n                { title: 'Approved Totals' },\n                { title: 'Actions', oderable: false, searchable: false },\n            ],\n            actions: [\n                {\n                    btnText: 'EDIT',\n                    status: 'info',\n                    icon: 'edit',\n                    disableStatus: 'FINISHED',\n                    action: 'inline',\n                    modalConf: {\n                        store: 'application-allowances',\n                        titleKey: 'item',\n                        context: 'Allowance',\n                        btnText: 'SAVE'\n                    }\n                },\n                {\n                    btnText: 'Rationalize',\n                    status: 'draft',\n                    icon: 'compare_arrows',\n                    disableStatus: 'FINISHED',\n                    class: 'text-success',\n                    action: 'modal',\n                    modalConf: {\n                        store: 'application-items',\n                        titleKey: 'item',\n                        context: 'rationalize',\n                        btnText: 'SAVE',\n                        width: '50%',\n                    }\n                },\n                {\n                    btnText: 'Approve',\n                    status: 'rationalized',\n                    icon: 'check',\n                    class: 'text-success',\n                    disableStatus: 'FINISHED',\n                    action: 'modal',\n                    modalConf: {\n                        store: 'application-items',\n                        titleKey: 'item',\n                        context: 'approve',\n                        btnText: 'SAVE',\n                        width: '50%',\n                    }\n                },\n                {\n                    btnText: 'Reject',\n                    status: 'rationalize',\n                    icon: 'close',\n                    class: 'text-danger',\n                    disableStatus: 'FINISHED',\n                    action: 'modal',\n                    modalConf: {\n                        store: 'application-items',\n                        titleKey: 'item',\n                        context: 'reject',\n                        btnText: 'SAVE',\n                        width: '50%',\n                    }\n                },\n            ]\n        },\n    },\n    { \n        count: 5,\n        label: 'Application Attachments',\n        shortLabel: 'Attachments',\n        help_text: 'Step 5',\n        icon: 'attach_file',\n        template: 'three',\n        inlineConf: {\n            store: 'visit',\n            cancelTxt: 'BACK',\n            nextTxt: 'COMPLETE',\n            editStore: 'visits',\n            getStore: 'visits'\n        },\n        active: false,\n        gridConf: {\n            store: 'applications',\n            getStore: 'application-attachments',\n            editStore: 'application-attachments',\n            topActions: [\n                {\n                    btnText: 'ADD ACTIVITY',\n                    status: 'info',\n                    icon: 'true',\n                    action: 'inline',\n                    conf: {\n                        context: 'BRANCH',\n                        store: 'branches',\n                        btnText: 'SAVE'\n                    }\n                }\n            ],\n            rows: [\n                { key: 'amount', type: 'string' },\n                { key: 'financial_year', type: 'string' },\n                { key: 'status', type: 'string' },\n            ],\n            headers: [\n                { title: 'Amount' },\n                { title: 'Financial Year' },\n                { title: 'Status' },\n                { title: 'Actions', oderable: false, searchable: false },\n            ],\n            actions: [\n                {\n                    btnText: 'EDIT',\n                    status: 'info',\n                    icon: false,\n                    disableStatus: 'FINISHED',\n                    action: 'inline',\n                    modalConf: {\n                        store: 'organization-budgets',\n                        titleKey: 'name',\n                        context: 'Organization Budget',\n                        btnText: 'SAVE'\n                    }\n                    }\n            ]\n        },\n    },\n    { \n        count: 6,\n        label: 'Alternative Fundings',\n        shortLabel: 'Other Funds',\n        help_text: 'Step 6',\n        icon: 'attach_money',\n        template: 'two',\n        inlineConf: {\n            store: 'visit',\n            cancelTxt: 'BACK',\n            nextTxt: 'COMPLETE',\n            editStore: 'visits',\n            getStore: 'visits'\n        },\n        active: false,\n        gridConf: {\n            store: 'applications',\n            modelKey: 'application',\n            getStore: 'application-alternate-funding-sources',\n            editStore: 'application-alternate-funding-sources',\n            topActions: [\n                {\n                    btnText: 'ADD ALTERNATIVE FUND',\n                    status: 'info',\n                    icon: 'true',\n                    action: 'inline',\n                    conf: {\n                        context: 'ALTERNATIVE FUNDING',\n                        store: 'application-alternate-funding-sources',\n                        btnText: 'SAVE'\n                    }\n                }\n            ],\n            rows: [\n                { key: 'entity_name', type: 'string' },\n                { key: 'estimated_amount', type: 'currency' },\n                { key: 'description', type: 'string' },\n            ],\n            headers: [\n                { title: 'Entity Name' },\n                { title: 'Estimated Amount' },\n                { title: 'Description' },\n                { title: 'Actions', oderable: false, searchable: false },\n            ],\n            actions: [\n                {\n                    btnText: 'EDIT',\n                    status: 'info',\n                    icon: false,\n                    disableStatus: 'FINISHED',\n                    action: 'inline',\n                    modalConf: {\n                        store: 'application-alternate-funding-sources',\n                        titleKey: 'entity_name',\n                        context: 'Alternative Funding',\n                        btnText: 'SAVE'\n                    }\n                },\n            ]\n        },\n    },\n];","import { ApplicationStepsConfig } from './appplication.constant';\nimport { OrganizationStepsConfig } from './organization.constant';\n\nexport const StepsConfig = [\n    {\n        key: 'application',\n        context: 'Application',\n        steps: ApplicationStepsConfig,\n    },\n    {\n        key: 'organization',\n        context: 'Organization',\n        steps: OrganizationStepsConfig,\n    },\n    {\n        key: 'budget',\n        context: 'Calendar of Events',\n        steps: [\n            { \n                count: 1,\n                label: 'Basic Details',\n                shortLabel: 'Basic',\n                help_text: 'Step 1',\n                icon: 'work',\n                template: 'one',\n                formConf: {\n                    store: 'organization-budgets',\n                    cancelTxt: 'CANCEL',\n                    nextTxt: 'NEXT',\n                    addStore: 'organization-budgets',\n                    editStore: 'organization-budgets',\n                    getStore: 'organization-budgets'\n                },\n                active: false\n            },\n            { \n                count: 2,\n                label: 'Budgeted Activities',\n                shortLabel: 'Activities',\n                help_text: 'Step 2',\n                icon: 'directions_run',\n                template: 'six',\n                inlineConf: {\n                    store: 'visit',\n                    cancelTxt: 'BACK',\n                    nextTxt: 'COMPLETE',\n                    editStore: 'visits',\n                    getStore: 'visits'\n                },\n                active: false,\n                gridConf: {\n                    store: 'organization-budgets',\n                    modelKey: 'org_budget',\n                    getStore: 'organization-budget-activities',\n                    editStore: 'organization-budget-activities',\n                    topActions: [\n                        {\n                            btnText: 'ADD ACTIVITY',\n                            status: 'info',\n                            icon: 'true',\n                            action: 'inline',\n                            conf: {\n                                context: 'Budget Activity',\n                                store: 'organization-budget-activities',\n                                btnText: 'SAVE'\n                            }\n                        }\n                    ],\n                    rows: [\n                        { key: 'title', type: 'string' },\n                        { key: 'activity_date', type: 'date' },\n                        { key: 'estimated_amount', type: 'currency' },\n                        { key: 'status', type: 'status' },\n                    ],\n                    headers: [\n                        { title: 'Title' },\n                        { title: 'Activity Date' },\n                        { title: 'Estimated Amount' },\n                        { title: 'Status' },\n                        { title: 'Actions', oderable: false, searchable: false },\n                    ],\n                    actions: [\n                        {\n                            btnText: 'EDIT',\n                            status: 'info',\n                            icon: false,\n                            disableStatus: 'FINISHED',\n                            action: 'inline',\n                            modalConf: {\n                                store: 'organization-budget-activities',\n                                titleKey: 'name',\n                                context: 'Budget Activity',\n                                btnText: 'SAVE'\n                            }\n                            }\n                    ]\n                },\n            },\n            { \n                count: 3,\n                label: 'Statutory Attachments',\n                shortLabel: 'Attachments',\n                help_text: 'Step 3',\n                icon: 'attach_file',\n                template: 'three',\n                inlineConf: {\n                    store: 'visit',\n                    cancelTxt: 'BACK',\n                    nextTxt: 'COMPLETE',\n                    editStore: 'visits',\n                    getStore: 'visits'\n                },\n                active: false,\n                gridConf: {\n                    store: 'applications',\n                    getStore: 'application-attachments',\n                    editStore: 'application-attachments',\n                    topActions: [\n                        {\n                            btnText: 'ADD ACTIVITY',\n                            status: 'info',\n                            icon: 'true',\n                            action: 'inline',\n                            conf: {\n                                context: 'BRANCH',\n                                store: 'branches',\n                                btnText: 'SAVE'\n                            }\n                        }\n                    ],\n                    rows: [\n                        { key: 'amount', type: 'string' },\n                        { key: 'financial_year', type: 'string' },\n                        { key: 'status', type: 'string' },\n                    ],\n                    headers: [\n                        { title: 'Amount' },\n                        { title: 'Financial Year' },\n                        { title: 'Status' },\n                        { title: 'Actions', oderable: false, searchable: false },\n                    ],\n                    actions: [\n                        {\n                            btnText: 'EDIT',\n                            status: 'info',\n                            icon: false,\n                            disableStatus: 'FINISHED',\n                            action: 'inline',\n                            modalConf: {\n                                store: 'organization-budgets',\n                                titleKey: 'name',\n                                context: 'Organization Budget',\n                                btnText: 'SAVE'\n                            }\n                            }\n                    ]\n                },\n            },\n            { \n                count: 4,\n                label: 'Additional Attachments',\n                shortLabel: 'Documents',\n                help_text: 'Step 4',\n                icon: 'insert_drive_file',\n                template: 'three',\n                inlineConf: {\n                    store: 'visit',\n                    cancelTxt: 'BACK',\n                    nextTxt: 'COMPLETE',\n                    editStore: 'visits',\n                    getStore: 'visits'\n                },\n                active: false,\n                gridConf: {\n                    store: 'organization-budgets',\n                    getStore: 'organization-budgets',\n                    editStore: 'organization-budgets',\n                    attachmentStore: 'organization-budget-attachments',\n                    headerAction: true,\n                    topActions: [\n                        {\n                            btnText: 'ADD ACTIVITY',\n                            status: 'info',\n                            icon: 'true',\n                            action: 'inline',\n                            conf: {\n                                context: 'BRANCH',\n                                store: 'branches',\n                                btnText: 'SAVE'\n                            }\n                        }\n                    ],\n                    rows: [\n                        { key: 'amount', type: 'string' },\n                        { key: 'financial_year', type: 'string' },\n                        { key: 'status', type: 'string' },\n                    ],\n                    headers: [\n                        { title: 'Amount' },\n                        { title: 'Financial Year' },\n                        { title: 'Status' },\n                        { title: 'Actions', oderable: false, searchable: false },\n                    ],\n                    actions: [\n                        {\n                            btnText: 'EDIT',\n                            status: 'info',\n                            icon: false,\n                            disableStatus: 'FINISHED',\n                            action: 'inline',\n                            modalConf: {\n                                store: 'organization-budgets',\n                                titleKey: 'name',\n                                context: 'Organization Budget',\n                                btnText: 'SAVE'\n                            }\n                            }\n                    ]\n                },\n            }\n        ],\n    }\n]","export const OrganizationStepsConfig = [\n    { \n        count: 1,\n        label: 'Basic Details',\n        shortLabel: 'Basic',\n        help_text: 'Step 1',\n        icon: 'work',\n        template: 'one',\n        formConf: {\n            store: 'organizations',\n            cancelTxt: 'CANCEL',\n            nextTxt: 'MEMBERS',\n            addStore: 'organizations',\n            editStore: 'organizations',\n            getStore: 'organizations'\n        },\n        active: false\n    },\n    // { \n    //     count: 2,\n    //     label: 'Organization Roles',\n    //     shortLabel: 'Roles',\n    //     help_text: 'Step 2',\n    //     icon: 'ballot',\n    //     template: 'two',\n    //     inlineConf: {\n    //         store: 'visit',\n    //         cancelTxt: 'BACK',\n    //         nextTxt: 'COMPLETE',\n    //         editStore: 'visits',\n    //         getStore: 'visits'\n    //     },\n    //     active: false,\n    //     gridConf: {\n    //         store: 'organizations',\n    //         getStore: 'organization-roles',\n    //         editStore: 'organization-roles',\n    //         modelKey: 'organization',\n    //         topActions: [\n    //             {\n    //                 btnText: 'ADD ROLE',\n    //                 status: 'info',\n    //                 icon: 'true',\n    //                 action: 'inline',\n    //                 conf: {\n    //                     context: 'ROLE',\n    //                     store: 'organization-roles',\n    //                     btnText: 'SAVE'\n    //                 }\n    //             }\n    //         ],\n    //         rows: [\n    //             { key: 'description', type: 'string' },\n    //         ],\n    //         headers: [\n    //             { title: 'Description' },\n    //             { title: 'Actions', oderable: false, searchable: false },\n    //         ],\n    //         actions: [\n    //             {\n    //                 btnText: 'EDIT',\n    //                 status: 'info',\n    //                 icon: false,\n    //                 disableStatus: 'FINISHED',\n    //                 action: 'inline',\n    //                 modalConf: {\n    //                     store: 'organization-roles',\n    //                     titleKey: 'description',\n    //                     context: 'Role',\n    //                     btnText: 'SAVE'\n    //                 }\n    //                 }\n    //         ]\n    //     },\n    // },\n    { \n        count: 2,\n        label: 'Athletes & Officials',\n        shortLabel: 'Members',\n        help_text: 'Step 2',\n        icon: 'group',\n        template: 'two',\n        inlineConf: {\n            store: 'visit',\n            cancelTxt: 'BACK',\n            nextTxt: 'COMPLETE',\n            editStore: 'visits',\n            getStore: 'visits'\n        },\n        active: false,\n        gridConf: {\n            store: 'organizations',\n            getStore: 'organization-members',\n            editStore: 'organization-members',\n            modelKey: 'organization',\n            topActions: [\n                {\n                    btnText: 'ADD MEMBER',\n                    status: 'info',\n                    icon: 'true',\n                    action: 'inline',\n                    conf: {\n                        context: 'MEMBER',\n                        store: 'organization-members',\n                        btnText: 'SAVE'\n                    }\n                }\n            ],\n            rows: [\n                { \n                    key: 'federation_number', \n                    fieldType: 'nested_string',\n                    type: 'nested',\n                    primaryField: 'user.federation_number',\n                },\n                { \n                    key: 'user.first_name', \n                    fieldType: 'nested_multistrings',\n                    type: 'nested',\n                    primaryField: 'user.first_name',\n                    secondaryField: 'user.last_name',\n                },\n                { \n                    key: 'user.dob',\n                    fieldType: 'nested_string',\n                    type: 'nested',\n                    primaryField: 'user.dob',\n                },\n                { \n                    key: 'user.email', \n                    fieldType: 'nested_string',\n                    type: 'nested',\n                    primaryField: 'user.email',\n                },\n                { \n                    key: 'user.phone_number', \n                    fieldType: 'nested_string',\n                    type: 'nested',\n                    primaryField: 'user.phone_number',\n                },\n                { key: 'sports_category', type: 'string' },\n            ],\n            headers: [\n                { title: 'Federation #' },\n                    { title: 'Names' },\n                    { title: 'Date of Birth' },\n                    { \n                        title: 'Email' \n                    },\n                    { title: 'Phone #' },\n                    { title: 'Sports Category' },\n                    { title: 'Actions', oderable: false, searchable: false },\n            ],\n            actions: [\n                {\n                    btnText: 'EDIT',\n                    status: 'info',\n                    icon: false,\n                    disableStatus: 'FINISHED',\n                    action: 'inline',\n                    modalConf: {\n                        store: 'organization-members',\n                        titleKey: 'first_name',\n                        context: 'Member',\n                        btnText: 'SAVE'\n                    }\n                    }\n            ]\n        },\n    },\n    { \n        count: 3,\n        label: 'Bank Account',\n        shortLabel: 'Account',\n        help_text: 'Step 3',\n        icon: 'account_balance',\n        template: 'four',\n        inlineConf: {\n            store: 'visit',\n            cancelTxt: 'BACK',\n            nextTxt: 'COMPLETE',\n            editStore: 'visits',\n            getStore: 'visits'\n        },\n        active: false,\n        gridConf: {\n            store: 'organizations',\n            modelKey: 'organization',\n            getStore: 'organization-bank-accounts',\n            editStore: 'organization-bank-accounts',\n            topActions: [\n                {\n                    btnText: 'ADD BANK ACCOUNT',\n                    status: 'info',\n                    icon: 'true',\n                    action: 'inline',\n                    conf: {\n                        context: 'BRANCH',\n                        store: 'branches',\n                        btnText: 'SAVE'\n                    }\n                }\n            ],\n            rows: [\n                { key: 'amount', type: 'string' },\n                { key: 'financial_year', type: 'string' },\n                { key: 'status', type: 'string' },\n            ],\n            headers: [\n                { title: 'Amount' },\n                { title: 'Financial Year' },\n                { title: 'Status' },\n                { title: 'Actions', oderable: false, searchable: false },\n            ],\n            actions: [\n                {\n                    btnText: 'EDIT',\n                    status: 'info',\n                    icon: false,\n                    disableStatus: 'FINISHED',\n                    action: 'inline',\n                    modalConf: {\n                        store: 'organization-budgets',\n                        titleKey: 'name',\n                        context: 'Organization Budget',\n                        btnText: 'SAVE'\n                    }\n                    }\n            ]\n        },\n    }\n]","import { Injectable }  from '@angular/core';\nimport * as _ from 'lodash';\n\nimport { StepsConfig } from '../constants/steps.config';\n\n@Injectable()\n\nexport class StepperWrapperService {\n    stepsArray = StepsConfig;\n    currentStep: any;\n\n    getSteps(key) {\n        return _.get(_.find(this.stepsArray, { key }), \n            'steps', []);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule }  from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { HttpModule } from '../../../app/services/http/http.module';\nimport { \n    DynamicFormModule \n} from '@fuse/components/dynamic-form/dynamic-form.module';\nimport { \n    DynamicTableModule\n} from '@fuse/components/dynamic-table/dynamic-table.module';\n\nimport { StepperWrapperService } from './services/stepper-wrapper.service';\n\nimport { MainStepperWrapperComponent } from './components/main-wrapper/main-wrapper.component';\nimport { FormWrapperComponent }  from './components/form-wrapper/form-wrapper.component';\nimport { ListWrapperComponent } from './components/list-wrapper/list-wrapper.component';\nimport { AttachmentsWrapper } from './components/attachments-wrapper/attachments-wrapper.component';\nimport { InlineListWrapper } from './components/inline-list-wrapper/inline-list-wrapper.component';\nimport { NestedInlineList } from './components/nested-inline-list/nested-inline-list.component';\nimport { NestedListModule } from '../tabbed-wrapper/components/nested-list/nested-list.module';\nimport { AttachmentWrapperDialog } from './components/attachments-wrapper/attachment-wrapper-dialog/attachment-wrapper-dialog.component';\n\n@NgModule({\n    imports: [\n        HttpModule,\n        CommonModule,\n        MatIconModule,\n        MatCardModule,\n        MatInputModule,\n        MatMenuModule,\n        MatButtonModule,\n        DynamicFormModule,\n        DynamicTableModule,\n        ReactiveFormsModule,\n        NestedListModule,\n        MatProgressSpinnerModule,\n    ],\n    declarations: [\n        InlineListWrapper,\n        AttachmentsWrapper,\n        FormWrapperComponent,\n        ListWrapperComponent,\n        NestedInlineList,\n        AttachmentWrapperDialog,\n        MainStepperWrapperComponent,\n    ],\n    exports: [\n        InlineListWrapper,\n        AttachmentsWrapper,\n        FormWrapperComponent,\n        ListWrapperComponent,\n        NestedInlineList,\n        AttachmentWrapperDialog,\n        MainStepperWrapperComponent,\n    ],\n    providers: [\n        StepperWrapperService\n    ],\n})\n\nexport class StepperWrapperModule {\n\n}"]}