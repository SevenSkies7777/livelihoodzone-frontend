{"version":3,"sources":["webpack:///src/app/features/auth/complaint-dialog/complaint-dialog.component.html","webpack:///src/app/features/auth/complaint-dialog/complaint-dialog.component.ts","webpack:///src/app/services/session.service.ts","webpack:///src/app/features/auth/feedback/feedback.component.ts","webpack:///src/app/features/auth/sign-up/sign-up.component.ts","webpack:///src/app/features/auth/sign-in/sign-in.component.ts","webpack:///src/app/features/auth/auth-routing.module.ts","webpack:///src/app/features/auth/feedback/feedback.module.ts","webpack:///src/app/services/authenticate.service.ts","webpack:///src/app/features/auth/auth.module.ts","webpack:///src/app/features/auth/sign-in/sign-in.component.html","webpack:///src/app/features/auth/sign-up/sign-up.component.html","webpack:///src/app/features/auth/feedback/feedback.component.html","webpack:///src/@fuse/components/page-container/page-container.component.ts","webpack:///node_modules/@angular/material/fesm2015/progress-spinner.js"],"names":["ComplaintDialogComponent","Session","FeedbackComponent","SignUpComponent","SignInComponent","AuthRoutingModule","FeedBackModule","AuthenticationService","AuthModule","_formBuilder","_dataLayer","_dialogRef","fields","field","type","label","required","formFields","this","forEach","ctrl","complaintForm","close","model","value","loading","console","log","valid","create","subscribe","resp","closeDialog","openDynamicSnackBar","err","formInit","controls","submitComplaint","authConfig","STATE_STORE","loadState","dump","JSON","parse","localStorage","getItem","user","getUser","uid","id","name","params","queryParams","extraParams","state","opts","stateDump","setItem","stringify","removeItem","routes","path","component","children","redirectTo","pathMatch","cd","_router","_route","_authConfig","_complete","_session","_dialog","authError","redirectDelay","formToggle","progressMsg","logout","showToast","isLoggedIn","postLoginRedirect","logoutUser","open","width","afterClosed","result","submitted","setTimeout","navigateByUrl","completeAuth","msg","postLogin","openSnackBar","errors","detectChanges","errArr","get","error","errMsg","isUndefined","login","checkParams","receiveModel","openDialog","userModel","navigate","regiserUser","token","verifyUser","url","getToken","checkRoute","forChild","CREDZ_STORE","USER_STORE","hasToken","moment","isAfter","AuthServices","PageContainerComponent","MatProgressSpinner__svg_circle_1_Template","rf","ctx","ctx_r0","_spinnerAnimationLabel","_getStrokeDashOffset","_getStrokeCircumference","_getCircleStrokeWidth","_getCircleRadius","MatProgressSpinner__svg_circle_2_Template","ctx_r1","MatSpinner__svg_circle_1_Template","MatSpinner__svg_circle_2_Template","_c0","_MatProgressSpinnerMixinBase","_elementRef","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","providedIn","factory","diameter","MatProgressSpinner","platform","_document","animationMode","defaults","super","_diameter","_value","_fallbackAnimation","mode","trackedDiameters","_diameters","_getSpinnerAnimationLabel","has","head","set","Set","EDGE","TRIDENT","_noopAnimations","_forceAnimations","strokeWidth","element","nativeElement","_styleRoot","_attachStyleNode","classList","add","viewBox","Math","PI","styleRoot","currentDiameter","diameters","diametersForElement","styleTag","createElement","setAttribute","textContent","_getAnimationText","appendChild","strokeCircumference","replace","toString","size","_strokeWidth","newValue","max","min","ɵfac","t","ɵcmp","selectors","hostAttrs","hostVars","hostBindings","inputs","color","exportAs","features","decls","vars","consts","template","_getViewBox","directives","styles","encapsulation","changeDetection","WeakMap","MatSpinner","elementRef","document","MatProgressSpinnerModule","ɵmod","ɵinj","imports"],"mappings":"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","file":"x","sourcesContent":["<div class=\"px-20 pt-20\">\n    <h3 mnat-dialog-title class=\"pb-0 font-size-18 font-weight-600\">Submit Complaint / Feedback</h3>\n    <div mat-dialog-content class=\"pb-2 pt-2\">\n        Kindly tell more about yourself, incase we require to contact you:\n    </div>\n    <div class=\"w-100-p\">\n        <form class=\"w-100-p\" [formGroup]=\"complaintForm\"\n        name=\"frm\" novalidate (ngSubmit)=\"submitComplaint()\">\n            <div class=\"form-controls row px-3\">\n                <div *ngFor=\"let ctrl of fields\" class=\"w-100-p\">\n                    <div [ngSwitch]=\"ctrl.type\" class=\"d-flex w-100-p\">\n                        <div *ngSwitchCase=\"'text'\" class=\"w-100-p\">\n                            <mat-form-field appearance=\"outline\"\n                            class=\"w-100-p\">\n                                <mat-label>{{ctrl?.label}}{{ ctrl?.required ? '*' : '' }}</mat-label>\n                                <input type=\"text\" matInput [formControlName]=\"ctrl.field\"\n                                [placeholder]=\"ctrl.label\">\n                            </mat-form-field>\n                        </div>\n                        <div *ngSwitchCase=\"'text-area'\" class=\"w-100-p\">\n                            <mat-form-field appearance=\"outline\"\n                            class=\"w-100-p\">\n                                <mat-label>{{ctrl?.label}}{{ ctrl?.required ? '*' : '' }}</mat-label>\n                                <textarea type=\"text\" matInput [formControlName]=\"ctrl.field\"\n                                rows=\"6\"\n                                [placeholder]=\"ctrl.label\"></textarea>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div mat-dialog-actions class=\"pt-2 d-flex justify-content-end pb-4\">\n                <button mat-button mat-dialog-close\n                type=\"button\"\n                (click)=\"closeDialog()\">CLOSE</button>\n                <button mat-button type=\"submit\"\n                [disabled]=\"loading\" [class.spinner]=\"loading\">\n                    <mat-icon>save</mat-icon>\n                    &nbsp;SUBMIT\n                </button>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { DataLayerService } from 'app/services/http/dataLayer.service';\n\n@Component({\n    selector: 'complaint-dialog',\n    templateUrl: 'complaint-dialog.component.html',\n    styleUrls: ['complaint-dialog.component.scss'],\n    providers: [DataLayerService],\n})\n\nexport class ComplaintDialogComponent implements OnInit {\n    complaintForm: FormGroup;\n    loading: boolean;\n    fields: Array<any> = [\n        {\n            field: 'full_name',\n            type: 'text',\n            label: 'Full name',\n            required: true,\n        },\n        {\n            field: 'email',\n            type: 'text',\n            label: 'Email',\n            required: false,\n        },\n        {\n            field: 'phone_number',\n            type: 'text',\n            label: 'Phone Number',\n            required: false,\n        },\n        {\n            field: 'subject',\n            type: 'text',\n            label: 'Subject',\n            required: false,\n        },\n        {\n            field: 'body',\n            type: 'text-area',\n            label: 'Message',\n            required: true,\n        },\n    ]\n\n    constructor(private _formBuilder: FormBuilder,\n        private _dataLayer: DataLayerService,\n        public _dialogRef: MatDialogRef<ComplaintDialogComponent>) {}\n\n    formInit() {\n        let formFields = {};\n        this.fields.forEach(ctrl => {\n            formFields[ctrl.field] = ctrl.required \n                ? new FormControl('', [Validators.required])\n                : new FormControl('');\n        })\n        this.complaintForm = new FormGroup({\n            ...formFields,\n        })\n    }\n\n    closeDialog() {\n        this._dialogRef.close();\n    }\n\n    get f() { return this.complaintForm.controls };\n\n    submitComplaint() {\n        const model = this.complaintForm.value;\n        this.loading = true;\n        console.log(this.complaintForm.valid, model);\n        this._dataLayer.create('complaints', model)\n            .subscribe(resp => {\n                console.log(resp)\n                const msg = 'Thank you for your feedback. We will be working on it.';\n                this.closeDialog();\n                this._dataLayer.openDynamicSnackBar(msg, 'success');\n            }, err => {\n                console.log(err);\n                const errMsg = 'An error occurred, during submission. Kindly try again';\n                this._dataLayer.openDynamicSnackBar(errMsg, 'error');\n            })\n    }\n\n    ngOnInit() {\n        this.formInit();\n    }\n}","import { Injectable } from '@angular/core';\nimport { Authorization } from './authorization.service';\n\n@Injectable()\nexport class Session {\n    STATE_STORE = 'state.dump';\n\n    constructor(public authConfig: Authorization) {}\n    dumpState(state: string, params: Object, opts?: any): void {\n        const user = this.authConfig.getUser() as { id };\n        const stateObj = JSON.parse(state) as { name };\n        const stateDump = {\n            name: stateObj.name,\n            params: opts,\n            queryParams: params,\n            uid: null,\n        };\n\n        if (user) {\n            stateDump.uid = user.id;\n        }\n\n        localStorage.setItem(this.STATE_STORE, JSON.stringify(stateDump));\n    }\n\n    loadState = (): Object => {\n        const dump = JSON.parse(localStorage.getItem(this.STATE_STORE)) as { uid; name; params;\n            queryParams; extraParams; };\n        const user = this.authConfig.getUser();\n        if (dump && (\n            (dump.uid && user.id === dump.uid) ||\n            (dump && !dump.uid))) {\n            return {\n                uid: dump.uid,\n                name: dump.name,\n                params: dump.params,\n                queryParams: dump.queryParams,\n                extraParams: dump.extraParams,\n            };\n        }\n\n        return null;\n    }\n\n    clearState(): void {\n        localStorage.removeItem(this.STATE_STORE);\n        return;\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DataLayerService } from 'app/services/http/dataLayer.service';\nimport { get, isUndefined } from 'lodash';\n\n@Component({\n    selector: 'feed-back',\n    templateUrl: './feedback.component.html',\n    styleUrls: ['../sign-in/sign-in.component.scss'],\n    providers: [DataLayerService],\n})\n\nexport class FeedbackComponent implements OnInit {\n    loading: boolean;\n\n    constructor(private _dataLayer: DataLayerService,\n        private _router: Router,\n        private _route: ActivatedRoute) {}\n    \n    verifyUser(token, uid) {\n        this.loading = true;\n        const postObj = { token, uid };\n        this._dataLayer.create('email-verification', postObj)\n            .subscribe(resp => {\n                this.loading = false;\n                const msg = 'Email verified successfully'\n                this._dataLayer.openDynamicSnackBar(msg, 'success');\n            }, err => {\n                this.loading = false;\n                console.log(err);\n                const errArr = get(err.error, 'error', null);\n                const msg = 'An error occurred during verification. ' +\n                    'Kindly click the link and try again.';\n                const errMsg = !isUndefined(errArr) ? errArr[0] : msg;\n                this._dataLayer.openDynamicSnackBar(errMsg, 'error');\n            })\n    }\n\n    getToken() {\n        this._route.queryParams.subscribe(params => {\n            const token = params['verify_token'];\n            const uid = params['uid'];\n            this.verifyUser(token, uid);\n        })\n    }\n\n    goToLogin() {\n        console.log('called');\n    }\n\n    checkRoute() {\n        if (this._router.url !== '/auth/feedback') {\n            this.getToken();\n        }\n    }\n\n    ngOnInit() {\n        this.checkRoute();\n    }\n    \n}","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { get, isUndefined } from 'lodash';\n\nimport { DataLayerService } from 'app/services/http/dataLayer.service';\n\n@Component({\n    selector: 'sign-up',\n    templateUrl: './sign-up.component.html',\n    styleUrls: ['../sign-in/sign-in.component.scss'],\n    providers: [DataLayerService],\n})\n\nexport class SignUpComponent implements OnInit {\n    submitted: boolean;\n    \n    constructor(private _dataLayer: DataLayerService,\n        private _router: Router,\n        private _route: ActivatedRoute) {}\n\n    regiserUser(userModel) {\n        this.submitted = true;\n        this._dataLayer.create('register', userModel)\n            .subscribe(resp => {\n                console.log(resp);\n                this.submitted = false;\n                const msg = 'Registration to E-Fund was successfull';\n                this._dataLayer.openDynamicSnackBar(msg, 'success');\n                this._router.navigate(['/auth/feedback']);\n            }, err => {\n                console.log(err);\n                this.submitted = false;\n                const errArr = get(err.error, 'error', null);\n                const msg = 'Sorry, an error occured while ' +\n                'signing up. Please try again, if persists please contact the administrator';\n                const errMsg = !isUndefined(errArr) ? errArr[0] : msg;\n                this._dataLayer.openDynamicSnackBar(errMsg, 'error');\n            })\n    }\n    \n    receiveModel(model) {\n        this.regiserUser(model);\n    }\n\n    ngOnInit() {\n    }\n}","import { \n    Component,\n    ChangeDetectorRef,\n    Inject, OnInit, ChangeDetectionStrategy\n} from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { DataLayerService } from '../../../services/http/dataLayer.service';\nimport { Authorization } from '../../../services/authorization.service';\nimport { CompleteService } from '../../../services/login.service';\nimport { Session }  from '../../../services/session.service';\nimport { get, isEmpty, isUndefined } from 'lodash';\nimport { ComplaintDialogComponent } from '../complaint-dialog/complaint-dialog.component';\n\n@Component({\n    selector: 'sign-in',\n    templateUrl: './sign-in.component.html',\n    styleUrls: ['./sign-in.component.scss'],\n    providers: [DataLayerService],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\n\nexport class SignInComponent implements OnInit {\n    submitted: boolean;\n    logout: any;\n    authError = false;\n    errors: any;\n    redirectDelay: number = 200;\n    formToggle: boolean = false;\n    progressMsg =  'Starting your session';\n\n    constructor(\n        protected cd: ChangeDetectorRef,\n        protected _router: Router,\n        protected _route: ActivatedRoute,\n        protected _dataLayer: DataLayerService,\n        protected _authConfig: Authorization,\n        protected _complete: CompleteService,\n        protected _session: Session,\n        private _dialog: MatDialog,\n    ) { }\n\n    showToast() { }\n\n    logoutUser() {\n        if (this.logout === 'is_logged_out') {\n            this._authConfig.logout();\n            this.showToast();\n        } else {\n            const isLoggedIn = this._authConfig.isLoggedIn();\n            if (isLoggedIn) {\n                this._complete.postLoginRedirect();\n            }\n        }\n    }\n\n    checkParams() {\n        this._route.queryParams.subscribe(params => {\n            this.logout = params.logout;\n            this.logoutUser();\n        })\n    }\n\n    openDialog() {\n        const dialogRef = this._dialog.open(\n            ComplaintDialogComponent, {\n                width: '50%',\n            }\n        )\n\n        dialogRef.afterClosed().subscribe(resp => {});\n    }\n\n    postLogin(result) {\n        this.submitted = false;\n        const redirect = '/select-organization';\n        setTimeout(() => {\n            return this._router.navigateByUrl(redirect);\n        }, this.redirectDelay);\n    }\n\n    completeAuth(resp: any, result:any) {\n        this._complete.completeAuth(resp)\n        .subscribe(msg => {\n            this.progressMsg = msg;\n            this.postLogin(result);\n        }, err => {\n            this.authError = true;\n            this.submitted = false;\n            this.progressMsg = 'Sorry, an error occured while ' +\n                'signing in. Please try again';\n            this._dataLayer.openSnackBar(this.progressMsg);\n            this.errors = err.errors;\n            this._dataLayer.openDynamicSnackBar(this.progressMsg, 'error');\n        });\n    }\n\n    login(model) {\n        this.errors = [];\n        this.submitted = true;\n        this._dataLayer.create('signin', model)\n        .subscribe(resp => {\n            const token = resp;\n            this.completeAuth(token, resp);\n            this.cd.detectChanges();\n        }, err => {\n            const errArr = get(err.error, 'error', \n                ['Sorry an error occurred. Kindly contact the administrator']);\n            this.submitted = false;\n            const msg = 'Sorry, an error occured while ' +\n                'signing in. Please try again';\n            const errMsg = !isUndefined(errArr) ? errArr[0] : msg;\n            this._dataLayer.openDynamicSnackBar(errMsg, 'error');\n        });\n    }\n\n    receiveModel(model) {\n        this.login(model);\n    }\n\n    ngOnInit() {\n        this.formToggle = true;\n        this.checkParams();\n    }\n    \n}","import { RouterModule, Routes } from  '@angular/router';\nimport { NgModule } from '@angular/core';\n\nimport { PageContainerComponent } from '@fuse/components/page-container/page-container.component';\n\nimport { SignInComponent } from './sign-in/sign-in.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { FeedbackComponent } from './feedback/feedback.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: PageContainerComponent,\n        children: [\n            { path: '', redirectTo: 'signin', pathMatch: 'full' },\n            { path: 'signin', component: SignInComponent },\n            { path: 'signup', component: SignUpComponent },\n            { path: 'feedback', component: FeedbackComponent },\n        ],\n    }\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\n\nexport class AuthRoutingModule {}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { FuseSharedModule } from '@fuse/shared.module';\n\nimport { FeedbackComponent } from './feedback.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        FuseSharedModule,\n        MatIconModule,\n        MatButtonModule,\n        MatProgressSpinnerModule,\n    ],\n    declarations: [\n        // FeedbackComponent\n    ]\n})\n\nexport class FeedBackModule {\n\n}","import { Injectable } from '@angular/core';\n\nimport * as moment from 'moment';\nimport * as _ from 'lodash';\n\n@Injectable()\nexport class AuthenticationService {\n    CREDZ_STORE = 'auth.config.credz';\n    USER_STORE = 'auth.config.user';\n\n    constructor() {}\n\n    getUser(): Object {\n        const user = localStorage.getItem(this.USER_STORE);\n        return JSON.parse(user);\n    }\n\n    getToken(): Object {\n        const token = localStorage.getItem(this.CREDZ_STORE);\n        return JSON.parse(token);\n    }\n\n    isAuthenticated(): boolean {\n        //get token object\n        const user = this.getUser();\n        const hasToken = this.getToken();\n        if (!_.isNull(user) && !_.isNull(hasToken)) {\n            const now = moment();\n            const expiresAt = 'expires_at';\n            const isExpired = now.isAfter(\n                moment(hasToken[expiresAt]),\n            );\n            return !isExpired;\n        } else {\n            return false;\n        }\n    }\n}\n","import { NgModule } from  '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport { DynamicFormModule } from '@fuse/components/dynamic-form/dynamic-form.module';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { FeedBackModule } from './feedback/feedback.module';\n\nimport { SignInComponent } from './sign-in/sign-in.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { FeedbackComponent } from './feedback/feedback.component';\nimport { ComplaintDialogComponent } from './complaint-dialog/complaint-dialog.component';\n// auth services\nimport { AuthenticationService } from '../../services/authenticate.service';\nimport { Authorization } from '../../services/authorization.service';\nimport { DataLayerUtils } from '../../services/datalayer.utils.service';\nimport { HomePageService } from '../../services/home-page.service';\nimport { CompleteService }  from '../../services/login.service';\nimport { ConfigAuthUrl } from '../../services/oauth2.service';\nimport { Session } from '../../services/session.service';\nimport { Setup } from '../../services/setup.service';\n\nconst AuthServices = [AuthenticationService, \n    Authorization, DataLayerUtils, HomePageService,\n    CompleteService, ConfigAuthUrl, Session, Setup\n]\n\n@NgModule({\n    imports: [\n        RouterModule,\n        ReactiveFormsModule,\n        DynamicFormModule,\n        AuthRoutingModule,\n        FuseSharedModule,\n        MatButtonModule,\n        MatIconModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatSnackBarModule,\n        FeedBackModule,\n    ],\n    declarations: [\n        SignInComponent,\n        SignUpComponent,\n        FeedbackComponent,\n        ComplaintDialogComponent,\n    ],\n    entryComponents: [\n        ComplaintDialogComponent\n    ],\n    providers: [...AuthServices],\n})\n\nexport class AuthModule {\n\n}","<div class=\"w-100-p\">\n    <div class=\"login-wrapper\">\n        <div class=\"login-main-content\" fxLayout=\"row\">\n            <div class=\"login-content\"  fxLayout=\"column\" fxFlex=\"100%\" fxFlex.gt-sm=\"50%\">\n                <div class=\"w-100-p d-flex justify-content-center\">\n                    <img src=\"../../../../assets/images/logos/logo.png\" alt=\"\"\n                    fxFlex=\"40%\">\n                </div>\n                <div class=\"w-100-p pt-5\">\n                    <h3 class=\"text-center font-size-24\">SIGN IN</h3>\n                    <p class=\"text-center text-muted\">Please sign in to access your account</p>\n                </div>\n                <div class=\"pt-20 px-20\">\n                    <dynamic-form btnTxt=\"SIGN IN\"\n                    [submitted]=\"submitted\"\n                    store=\"login\" btnStatus=\"success\"\n                    (submitModel)=\"receiveModel($event)\"></dynamic-form>\n                </div>\n                <div class=\"w-100-p text-center pb-20 pt-20\"\n                style=\"margin-top: -1.5rem;\">\n                    <a routerLink=\"/auth/signup\">\n                        Create an Account\n                    </a>\n                </div>\n            </div>\n            <div class=\"login-content with-img\" fxLayout=\"row\" fxFlex=\"50%\" \n            fxFlex.gt-md=\"50%\" fxHide.lt-md>\n                <div class=\"text-white px-20\"\n                style=\"z-index: 100;\">\n                    <div class=\"font-size-34 pt-32 font-weight-500\">\n                        Welcome to <b>E</b>-Fund\n                    </div>\n                    <div class=\"font-size-22 pt-2 font-weight-500\">\n                        SASDF self service portal.\n                    </div>\n                    <div class=\"pt-24 font-size-16\"\n                    style=\"line-height: 1.75;\">\n                        We support development of sports, arts & promotion of social development.\n                        Apply for funding conviniently and efficiently. Start by registering\n                        on the platform and make your first application.\n                    </div>\n                    <div>\n                        <div class=\"text-underlined d-flex pt-32\">\n                            <div>\n                                <div class=\"font-size-20 pl-0 font-weight-600\">We value your feedback</div>\n                                <div class=\"font-size-14 pl-0 pt-3\">\n                                    At SASDF we take feedback and any form of complaints seriously.\n                                    If you presently have any complaints on any of our services \n                                    or other genuine complaint/feedback, click the <b>Submit Feedback</b>\n                                    link below and we will address this.\n                                </div>\n                                <div class=\"pt-20 px-1\">\n                                    <button mat-raised-button class=\"w-100-p\"\n                                    (click)=\"openDialog()\">\n                                        <div class=\"d-flex w-100-p py-3 align-items-center\">\n                                            <div>\n                                                <mat-icon class=\"font-size-22\">feedback</mat-icon>\n                                            </div>\n                                            <div class=\"flex-fill d-flex justify-content-center\">SUBMIT COMPLAINT / FEEDBACK</div>\n                                        </div>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","<div class=\"w-100-p\">\n    <div class=\"login-wrapper\">\n        <div class=\"login-main-content\" fxLayout=\"row\">\n\n            <div class=\"login-content with-img order-2 justify-content-center align-items-center\" \n            fxLayout=\"row\" fxFlex=\"50%\" \n            fxFlex.gt-md=\"50%\" fxHide.lt-md>\n                <div class=\"d-flex margin-auto w-75-p\">\n                    <img src=\"../../../../assets/images/logos/logo.png\" alt=\"\"\n                    style=\"z-index: 10\">\n                </div>\n            </div>\n            \n            <div class=\"login-content order-10\"  fxLayout=\"column\" fxFlex=\"100%\" fxFlex.gt-sm=\"50%\">\n                <div class=\"w-100-p\">\n                    <h4 class=\"text-left font-size-20 pl-2\">SIGN UP</h4>\n                </div>\n                <div class=\"pt-20 px-2\">\n                    <dynamic-form btnTxt=\"CREATE ACCOUNT\"\n                    config=\"setPassword\" [submitted]=\"submitted\"\n                    store=\"registration\" btnStatus=\"primary\"\n                    (submitModel)=\"receiveModel($event)\"></dynamic-form>\n                </div>\n                <div class=\"w-100-p text-center pb-20 pt-20\"\n                style=\"margin-top: -1.5rem;\">\n                    <a routerLink=\"/auth/signin\">\n                        I am already a member\n                    </a>\n                </div>\n            </div>\n\n            \n            \n        </div>\n    </div>\n</div>","<div class=\"w-100-p\">\n    <div class=\"login-wrapper\">\n        <div class=\"login-main-content d-flex\" fxLayout=\"row\">\n            <div class=\"login-content with-img order-2 justify-content-center \n            align-items-center\" fxLayout=\"row\" fxFlex=\"50%\"\n            fxFlex.gt-md=\"50%\" fxHide.lt-md>\n                <div class=\"d-flex justify-content-center pt-32 align-middle\">\n                    <img src=\"../../../../assets/images/logos/logo.png\" alt=\"\"\n                    style=\"z-index: 10\">\n                </div>\n            </div>\n            <div class=\"login-content bg-white\"  fxLayout=\"column\" fxFlex=\"100%\" \n            fxFlex.gt-sm=\"50%\">\n                <div class=\"w-100-p pb-20\">\n                    <div class=\"text-center font-size-20 d-flex \n                    align-items-center justify-content-center\">\n                        <div><mat-icon class=\"mt-1 mr-3 text-success\">check_circle</mat-icon></div>\n                        <div>SUCCESSFULLY SIGNED UP</div>\n                    </div>\n                </div>\n                <div class=\"pt-20 px-4 feedback-img mt-10\"></div>\n                <div class=\"pt-24 px-2\">\n                    <p class=\"lead text-center text-muted font-size-16 text-bold\">\n                        Thank you for signing up, proceed to log in\n                    </p>\n                </div>\n                <div>\n                    <ul>\n                        <li>\n                            Begin by logging in\n                        </li>\n                        <li>\n                            <b>Select</b> the organization you are member of, to access our resources. \n                        </li>\n                        <li>\n                            If <b>no organization</b> is listed, \n                            proceed to search for it and send a request to be added as\n                            a member.\n                        </li>\n                        <li>\n                            Once the request is approved you should be able to \n                            log in as its member\n                        </li>\n                    </ul>\n                </div>\n                <div class=\"w-100-p text-center pb-20 pt-20 px-3\">\n                    <a [routerLink]=\"['/auth/signin']\">\n                        <button mat-raised-button color=\"warn\"\n                        class=\"w-100-p py-xl-1 btn btn-success\">\n                            BACK TO LOGIN\n                        </button>\n                    </a>\n                </div>\n            </div>\n            \n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'page-container',\n    template: `<router-outlet></router-outlet>`,\n    styleUrls: ['./page-container.component.scss'],\n})\n\nexport class PageContainerComponent {}","import { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { _getShadowRoot, Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base reference size of the spinner.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/common';\n\nfunction MatProgressSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r0._spinnerAnimationLabel)(\"stroke-dashoffset\", ctx_r0._getStrokeDashOffset(), \"px\")(\"stroke-dasharray\", ctx_r0._getStrokeCircumference(), \"px\")(\"stroke-width\", ctx_r0._getCircleStrokeWidth(), \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r0._getCircleRadius());\n} }\nfunction MatProgressSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r1._getStrokeDashOffset(), \"px\")(\"stroke-dasharray\", ctx_r1._getStrokeCircumference(), \"px\")(\"stroke-width\", ctx_r1._getCircleStrokeWidth(), \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r1._getCircleRadius());\n} }\nfunction MatSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r0._spinnerAnimationLabel)(\"stroke-dashoffset\", ctx_r0._getStrokeDashOffset(), \"px\")(\"stroke-dasharray\", ctx_r0._getStrokeCircumference(), \"px\")(\"stroke-width\", ctx_r0._getCircleStrokeWidth(), \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r0._getCircleRadius());\n} }\nfunction MatSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r1._getStrokeDashOffset(), \"px\")(\"stroke-dasharray\", ctx_r1._getStrokeCircumference(), \"px\")(\"stroke-width\", ctx_r1._getCircleStrokeWidth(), \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r1._getCircleRadius());\n} }\nconst _c0 = \".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:currentColor}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\";\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n * @docs-private\n */\nconst BASE_STROKE_WIDTH = 10;\n// Boilerplate for applying mixins to MatProgressSpinner.\n/** @docs-private */\nclass MatProgressSpinnerBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatProgressSpinnerMixinBase = mixinColor(MatProgressSpinnerBase, 'primary');\n/** Injection token to be used to override the default options for `mat-progress-spinner`. */\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n// .0001 percentage difference is necessary in order to avoid unwanted animation frames\n// for example because the animation duration is 4 seconds, .1% accounts to 4ms\n// which are enough to see the flicker described in\n// https://github.com/angular/components/issues/8984\nconst INDETERMINATE_ANIMATION_TEMPLATE = `\n @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\n    0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\n    12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\n    12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\n    25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\n\n    25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\n    37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\n    37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\n    50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\n\n    50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\n    62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\n    62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\n    75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\n\n    75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\n    87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\n    87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\n    100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\n  }\n`;\n/**\n * `<mat-progress-spinner>` component.\n */\nclass MatProgressSpinner extends _MatProgressSpinnerMixinBase {\n    constructor(_elementRef, platform, _document, animationMode, defaults) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._document = _document;\n        this._diameter = BASE_SIZE;\n        this._value = 0;\n        this._fallbackAnimation = false;\n        /** Mode of the progress circle */\n        this.mode = 'determinate';\n        const trackedDiameters = MatProgressSpinner._diameters;\n        this._spinnerAnimationLabel = this._getSpinnerAnimationLabel();\n        // The base size is already inserted via the component's structural styles. We still\n        // need to track it so we don't end up adding the same styles again.\n        if (!trackedDiameters.has(_document.head)) {\n            trackedDiameters.set(_document.head, new Set([BASE_SIZE]));\n        }\n        this._fallbackAnimation = platform.EDGE || platform.TRIDENT;\n        this._noopAnimations = animationMode === 'NoopAnimations' &&\n            (!!defaults && !defaults._forceAnimations);\n        if (defaults) {\n            if (defaults.diameter) {\n                this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n    }\n    /** The diameter of the progress spinner (will set width and height of svg). */\n    get diameter() { return this._diameter; }\n    set diameter(size) {\n        this._diameter = coerceNumberProperty(size);\n        this._spinnerAnimationLabel = this._getSpinnerAnimationLabel();\n        // If this is set before `ngOnInit`, the style root may not have been resolved yet.\n        if (!this._fallbackAnimation && this._styleRoot) {\n            this._attachStyleNode();\n        }\n    }\n    /** Stroke width of the progress spinner. */\n    get strokeWidth() {\n        return this._strokeWidth || this.diameter / 10;\n    }\n    set strokeWidth(value) {\n        this._strokeWidth = coerceNumberProperty(value);\n    }\n    /** Value of the progress circle. */\n    get value() {\n        return this.mode === 'determinate' ? this._value : 0;\n    }\n    set value(newValue) {\n        this._value = Math.max(0, Math.min(100, coerceNumberProperty(newValue)));\n    }\n    ngOnInit() {\n        const element = this._elementRef.nativeElement;\n        // Note that we need to look up the root node in ngOnInit, rather than the constructor, because\n        // Angular seems to create the element outside the shadow root and then moves it inside, if the\n        // node is inside an `ngIf` and a ShadowDom-encapsulated component.\n        this._styleRoot = _getShadowRoot(element) || this._document.head;\n        this._attachStyleNode();\n        // On IE and Edge, we can't animate the `stroke-dashoffset`\n        // reliably so we fall back to a non-spec animation.\n        const animationClass = `mat-progress-spinner-indeterminate${this._fallbackAnimation ? '-fallback' : ''}-animation`;\n        element.classList.add(animationClass);\n    }\n    /** The radius of the spinner, adjusted for stroke width. */\n    _getCircleRadius() {\n        return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /** The view box of the spinner's svg element. */\n    _getViewBox() {\n        const viewBox = this._getCircleRadius() * 2 + this.strokeWidth;\n        return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /** The stroke circumference of the svg circle. */\n    _getStrokeCircumference() {\n        return 2 * Math.PI * this._getCircleRadius();\n    }\n    /** The dash offset of the svg circle. */\n    _getStrokeDashOffset() {\n        if (this.mode === 'determinate') {\n            return this._getStrokeCircumference() * (100 - this._value) / 100;\n        }\n        // In fallback mode set the circle to 80% and rotate it with CSS.\n        if (this._fallbackAnimation && this.mode === 'indeterminate') {\n            return this._getStrokeCircumference() * 0.2;\n        }\n        return null;\n    }\n    /** Stroke width of the circle in percent. */\n    _getCircleStrokeWidth() {\n        return this.strokeWidth / this.diameter * 100;\n    }\n    /** Dynamically generates a style tag containing the correct animation for this diameter. */\n    _attachStyleNode() {\n        const styleRoot = this._styleRoot;\n        const currentDiameter = this._diameter;\n        const diameters = MatProgressSpinner._diameters;\n        let diametersForElement = diameters.get(styleRoot);\n        if (!diametersForElement || !diametersForElement.has(currentDiameter)) {\n            const styleTag = this._document.createElement('style');\n            styleTag.setAttribute('mat-spinner-animation', this._spinnerAnimationLabel);\n            styleTag.textContent = this._getAnimationText();\n            styleRoot.appendChild(styleTag);\n            if (!diametersForElement) {\n                diametersForElement = new Set();\n                diameters.set(styleRoot, diametersForElement);\n            }\n            diametersForElement.add(currentDiameter);\n        }\n    }\n    /** Generates animation styles adjusted for the spinner's diameter. */\n    _getAnimationText() {\n        const strokeCircumference = this._getStrokeCircumference();\n        return INDETERMINATE_ANIMATION_TEMPLATE\n            // Animation should begin at 5% and end at 80%\n            .replace(/START_VALUE/g, `${0.95 * strokeCircumference}`)\n            .replace(/END_VALUE/g, `${0.2 * strokeCircumference}`)\n            .replace(/DIAMETER/g, `${this._spinnerAnimationLabel}`);\n    }\n    /** Returns the circle diameter formatted for use with the animation-name CSS property. */\n    _getSpinnerAnimationLabel() {\n        // The string of a float point number will include a period ‘.’ character,\n        // which is not valid for a CSS animation-name.\n        return this.diameter.toString().replace('.', '_');\n    }\n}\nMatProgressSpinner.ɵfac = function MatProgressSpinner_Factory(t) { return new (t || MatProgressSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatProgressSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatProgressSpinner, selectors: [[\"mat-progress-spinner\"]], hostAttrs: [\"role\", \"progressbar\", 1, \"mat-progress-spinner\"], hostVars: 10, hostBindings: function MatProgressSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-valuemin\", ctx.mode === \"determinate\" ? 0 : null)(\"aria-valuemax\", ctx.mode === \"determinate\" ? 100 : null)(\"aria-valuenow\", ctx.mode === \"determinate\" ? ctx.value : null)(\"mode\", ctx.mode);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\", mode: \"mode\", diameter: \"diameter\", strokeWidth: \"strokeWidth\", value: \"value\" }, exportAs: [\"matProgressSpinner\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatProgressSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatProgressSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatProgressSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._getViewBox());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [_c0], encapsulation: 2, changeDetection: 0 });\n/**\n * Tracks diameters of existing instances to de-dupe generated styles (default d = 100).\n * We need to keep track of which elements the diameters were attached to, because for\n * elements in the Shadow DOM the style tags are attached to the shadow root, rather\n * than the document head.\n */\nMatProgressSpinner._diameters = new WeakMap();\nMatProgressSpinner.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n];\nMatProgressSpinner.propDecorators = {\n    diameter: [{ type: Input }],\n    strokeWidth: [{ type: Input }],\n    mode: [{ type: Input }],\n    value: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-progress-spinner',\n                exportAs: 'matProgressSpinner',\n                host: {\n                    'role': 'progressbar',\n                    'class': 'mat-progress-spinner',\n                    '[class._mat-animation-noopable]': `_noopAnimations`,\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter',\n                    '[attr.aria-valuemin]': 'mode === \"determinate\" ? 0 : null',\n                    '[attr.aria-valuemax]': 'mode === \"determinate\" ? 100 : null',\n                    '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                    '[attr.mode]': 'mode'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_getViewBox()\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + _spinnerAnimationLabel\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:currentColor}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, { mode: [{\n            type: Input\n        }], diameter: [{\n            type: Input\n        }], strokeWidth: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\n/**\n * `<mat-spinner>` component.\n *\n * This is a component definition to be used as a convenience reference to create an\n * indeterminate `<mat-progress-spinner>` instance.\n */\nclass MatSpinner extends MatProgressSpinner {\n    constructor(elementRef, platform, document, animationMode, defaults) {\n        super(elementRef, platform, document, animationMode, defaults);\n        this.mode = 'indeterminate';\n    }\n}\nMatSpinner.ɵfac = function MatSpinner_Factory(t) { return new (t || MatSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSpinner, selectors: [[\"mat-spinner\"]], hostAttrs: [\"role\", \"progressbar\", \"mode\", \"indeterminate\", 1, \"mat-spinner\", \"mat-progress-spinner\"], hostVars: 6, hostBindings: function MatSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._getViewBox());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [_c0], encapsulation: 2, changeDetection: 0 });\nMatSpinner.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-spinner',\n                host: {\n                    'role': 'progressbar',\n                    'mode': 'indeterminate',\n                    'class': 'mat-spinner mat-progress-spinner',\n                    '[class._mat-animation-noopable]': `_noopAnimations`,\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_getViewBox()\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + _spinnerAnimationLabel\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:currentColor}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatProgressSpinnerModule {\n}\nMatProgressSpinnerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatProgressSpinnerModule });\nMatProgressSpinnerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatProgressSpinnerModule_Factory(t) { return new (t || MatProgressSpinnerModule)(); }, imports: [[MatCommonModule, CommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatProgressSpinnerModule, { declarations: function () { return [MatProgressSpinner, MatSpinner]; }, imports: function () { return [MatCommonModule, CommonModule]; }, exports: function () { return [MatProgressSpinner, MatSpinner, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinnerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, CommonModule],\n                exports: [\n                    MatProgressSpinner,\n                    MatSpinner,\n                    MatCommonModule\n                ],\n                declarations: [\n                    MatProgressSpinner,\n                    MatSpinner\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n\n//# sourceMappingURL=progress-spinner.js.map"]}