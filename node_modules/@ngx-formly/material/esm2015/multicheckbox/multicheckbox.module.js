/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ReactiveFormsModule } from '@angular/forms';
import { FormlyModule } from '@ngx-formly/core';
import { FormlySelectModule } from '@ngx-formly/core/select';
import { FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';
import { MatCheckboxModule } from '@angular/material/checkbox';
import { FormlyFieldMultiCheckbox } from './multicheckbox.type';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@ngx-formly/core';
export class FormlyMatMultiCheckboxModule {
}
FormlyMatMultiCheckboxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: FormlyMatMultiCheckboxModule });
FormlyMatMultiCheckboxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function FormlyMatMultiCheckboxModule_Factory(t) { return new (t || FormlyMatMultiCheckboxModule)(); }, imports: [[
            CommonModule,
            ReactiveFormsModule,
            MatCheckboxModule,
            FormlyMatFormFieldModule,
            FormlySelectModule,
            FormlyModule.forChild({
                types: [
                    {
                        name: 'multicheckbox',
                        component: FormlyFieldMultiCheckbox,
                        wrappers: ['form-field']
                    },
                ]
            }),
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FormlyMatMultiCheckboxModule, { declarations: function () { return [FormlyFieldMultiCheckbox]; }, imports: function () { return [CommonModule,
        ReactiveFormsModule,
        MatCheckboxModule,
        FormlyMatFormFieldModule,
        FormlySelectModule, ɵngcc1.FormlyModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormlyMatMultiCheckboxModule, [{
        type: NgModule,
        args: [{
                declarations: [FormlyFieldMultiCheckbox],
                imports: [
                    CommonModule,
                    ReactiveFormsModule,
                    MatCheckboxModule,
                    FormlyMatFormFieldModule,
                    FormlySelectModule,
                    FormlyModule.forChild({
                        types: [
                            {
                                name: 'multicheckbox',
                                component: FormlyFieldMultiCheckbox,
                                wrappers: ['form-field']
                            },
                        ]
                    }),
                ]
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGljaGVja2JveC5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIkBuZ3gtZm9ybWx5L21hdGVyaWFsL211bHRpY2hlY2tib3gvbXVsdGljaGVja2JveC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUMzRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUUvRCxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQzs7O0FBdUJoRSxNQUFNLE9BQU8sNEJBQTRCO0FBQUc7d0RBckIzQyxRQUFRLFNBQUMsa0JBQ1I7RUFBWSxFQUFFLENBQUMsd0JBQXdCLENBQUMsa0JBQ3hDLE9BQU8sRUFBRSxzQkFDUCxZQUFZLHNCQUNaLG1CQUFtQixzQkFFbkIsaUJBQWlCO01BRWpCO0lBQXdCLHNCQUN4QjtXQUFrQjtFQUNsQixZQUFZLENBQUMsUUFBUSxDQUFDO1lBQ3BCLEtBQUssRUFBRTtpQkFDTDtlQUNFLElBQUksRUFBRTtXQUFlO3VCQUNyQixTQUFTLEVBQUU7V0FBd0Isa0NBQ25DLFFBQVEsRUFBRSxDQUFDO09BQVksQ0FBQywrQkFDekI7aUJBQ0Y7aUJBQ0Y7QUFBQztHQUNIO0dBQ0Y7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzBCQUNJO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IFJlYWN0aXZlRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBGb3JtbHlNb2R1bGUgfSBmcm9tICdAbmd4LWZvcm1seS9jb3JlJztcbmltcG9ydCB7IEZvcm1seVNlbGVjdE1vZHVsZSB9IGZyb20gJ0BuZ3gtZm9ybWx5L2NvcmUvc2VsZWN0JztcbmltcG9ydCB7IEZvcm1seU1hdEZvcm1GaWVsZE1vZHVsZSB9IGZyb20gJ0BuZ3gtZm9ybWx5L21hdGVyaWFsL2Zvcm0tZmllbGQnO1xuaW1wb3J0IHsgTWF0Q2hlY2tib3hNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9jaGVja2JveCc7XG5cbmltcG9ydCB7IEZvcm1seUZpZWxkTXVsdGlDaGVja2JveCB9IGZyb20gJy4vbXVsdGljaGVja2JveC50eXBlJztcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbRm9ybWx5RmllbGRNdWx0aUNoZWNrYm94XSxcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZSxcbiAgICBSZWFjdGl2ZUZvcm1zTW9kdWxlLFxuXG4gICAgTWF0Q2hlY2tib3hNb2R1bGUsXG5cbiAgICBGb3JtbHlNYXRGb3JtRmllbGRNb2R1bGUsXG4gICAgRm9ybWx5U2VsZWN0TW9kdWxlLFxuICAgIEZvcm1seU1vZHVsZS5mb3JDaGlsZCh7XG4gICAgICB0eXBlczogW1xuICAgICAgICB7XG4gICAgICAgICAgbmFtZTogJ211bHRpY2hlY2tib3gnLFxuICAgICAgICAgIGNvbXBvbmVudDogRm9ybWx5RmllbGRNdWx0aUNoZWNrYm94LFxuICAgICAgICAgIHdyYXBwZXJzOiBbJ2Zvcm0tZmllbGQnXSxcbiAgICAgICAgfSxcbiAgICAgIF0sXG4gICAgfSksXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIEZvcm1seU1hdE11bHRpQ2hlY2tib3hNb2R1bGUgeyB9XG4iXX0=