/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewChild, Renderer2, ElementRef, ViewContainerRef } from '@angular/core';
import { FieldWrapper, ɵdefineHiddenProp as defineHiddenProp, FormlyConfig } from '@ngx-formly/core';
import { MatFormField } from '@angular/material/form-field';
import { MatFormFieldControl } from '@angular/material/form-field';
import { Subject } from 'rxjs';
import { FocusMonitor } from '@angular/cdk/a11y';
import { FieldType } from './field.type';
/**
 * @record
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@ngx-formly/core';
import * as ɵngcc2 from '@angular/cdk/a11y';
import * as ɵngcc3 from '@angular/material/form-field';
import * as ɵngcc4 from '@angular/common';

const _c0 = ["fieldComponent"];
function FormlyWrapperFormField_mat_label_3_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 8);
    ɵngcc0.ɵɵtext(1, "*");
    ɵngcc0.ɵɵelementEnd();
} }
function FormlyWrapperFormField_mat_label_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-label");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵtemplate(2, FormlyWrapperFormField_mat_label_3_span_2_Template, 2, 0, "span", 7);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r1.to.label, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.to.required && ctx_r1.to.hideRequiredMarker !== true);
} }
function FormlyWrapperFormField_ng_container_4_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function FormlyWrapperFormField_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0, 9);
    ɵngcc0.ɵɵtemplate(1, FormlyWrapperFormField_ng_container_4_ng_container_1_Template, 1, 0, "ng-container", 10);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r2.to.prefix ? ctx_r2.to.prefix : ctx_r2.formlyField._matprefix);
} }
function FormlyWrapperFormField_ng_container_5_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function FormlyWrapperFormField_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0, 11);
    ɵngcc0.ɵɵtemplate(1, FormlyWrapperFormField_ng_container_5_ng_container_1_Template, 1, 0, "ng-container", 10);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r3.to.suffix ? ctx_r3.to.suffix : ctx_r3.formlyField._matsuffix);
} }
function FormlyWrapperFormField_mat_hint_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-hint", 12);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("id", null);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r4.to.description);
} }
function MatFormlyFieldConfig() { }
if (false) {
    /** @type {?} */
    MatFormlyFieldConfig.prototype._matprefix;
    /** @type {?} */
    MatFormlyFieldConfig.prototype._matsuffix;
    /** @type {?} */
    MatFormlyFieldConfig.prototype.__formField__;
}
export class FormlyWrapperFormField extends FieldWrapper {
    /**
     * @param {?} config
     * @param {?} renderer
     * @param {?} elementRef
     * @param {?} focusMonitor
     */
    constructor(config, renderer, elementRef, focusMonitor) {
        super();
        this.config = config;
        this.renderer = renderer;
        this.elementRef = elementRef;
        this.focusMonitor = focusMonitor;
        this.stateChanges = new Subject();
        this._errorState = false;
        this.initialGapCalculated = false;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.formField._control = this;
        defineHiddenProp(this.field, '__formField__', this.formField);
        /** @type {?} */
        const ref = this.config.resolveFieldTypeRef(this.formlyField);
        if (ref && !(ref.instance instanceof FieldType)) {
            console.warn(`Component '${ref.componentType.name}' must extend 'FieldType' from '@ngx-formly/material/form-field'.`);
        }
        // fix for https://github.com/angular/material2/issues/11437
        if (this.formlyField.hide && (/** @type {?} */ (this.formlyField.templateOptions)).appearance === 'outline') {
            this.initialGapCalculated = true;
        }
        this.focusMonitor.monitor(this.elementRef, true).subscribe((/**
         * @param {?} origin
         * @return {?}
         */
        origin => {
            if (!origin && this.field.focus) {
                this.field.focus = false;
            }
            this.stateChanges.next();
        }));
    }
    /**
     * @return {?}
     */
    ngAfterContentChecked() {
        if (!this.initialGapCalculated || this.formlyField.hide) {
            return;
        }
        this.formField.updateOutlineGap();
        this.initialGapCalculated = true;
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        // temporary fix for https://github.com/angular/material2/issues/7891
        if (this.formField.appearance !== 'outline' && this.to.hideFieldUnderline === true) {
            /** @type {?} */
            const underlineElement = this.formField._elementRef.nativeElement.querySelector('.mat-form-field-underline');
            underlineElement && this.renderer.removeChild(underlineElement.parentNode, underlineElement);
        }
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        delete this.formlyField.__formField__;
        this.stateChanges.complete();
        this.focusMonitor.stopMonitoring(this.elementRef);
    }
    /**
     * @param {?} ids
     * @return {?}
     */
    setDescribedByIds(ids) { }
    /**
     * @param {?} event
     * @return {?}
     */
    onContainerClick(event) {
        this.formlyField.focus = true;
        this.stateChanges.next();
    }
    /**
     * @return {?}
     */
    get errorState() {
        /** @type {?} */
        const showError = (/** @type {?} */ ((/** @type {?} */ (this.options)).showError))(this);
        if (showError !== this._errorState) {
            this._errorState = showError;
            this.stateChanges.next();
        }
        return showError;
    }
    /**
     * @return {?}
     */
    get controlType() { return this.to.type; }
    /**
     * @return {?}
     */
    get focused() { return !!this.formlyField.focus && !this.disabled; }
    /**
     * @return {?}
     */
    get disabled() { return !!this.to.disabled; }
    /**
     * @return {?}
     */
    get required() { return !!this.to.required; }
    /**
     * @return {?}
     */
    get placeholder() { return this.to.placeholder || ''; }
    /**
     * @return {?}
     */
    get shouldPlaceholderFloat() { return this.shouldLabelFloat; }
    /**
     * @return {?}
     */
    get value() { return this.formControl.value; }
    /**
     * @return {?}
     */
    get ngControl() { return (/** @type {?} */ (this.formControl)); }
    /**
     * @return {?}
     */
    get empty() { return !this.formControl.value; }
    /**
     * @return {?}
     */
    get shouldLabelFloat() { return this.focused || !this.empty; }
    /**
     * @return {?}
     */
    get formlyField() { return (/** @type {?} */ (this.field)); }
}
FormlyWrapperFormField.ɵfac = function FormlyWrapperFormField_Factory(t) { return new (t || FormlyWrapperFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FormlyConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusMonitor)); };
FormlyWrapperFormField.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FormlyWrapperFormField, selectors: [["formly-wrapper-mat-form-field"]], viewQuery: function FormlyWrapperFormField_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c0, true, ViewContainerRef);
        ɵngcc0.ɵɵstaticViewQuery(MatFormField, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.fieldComponent = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.formField = _t.first);
    } }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: FormlyWrapperFormField }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 9, vars: 11, consts: [[3, "hideRequiredMarker", "floatLabel", "appearance", "color"], ["fieldComponent", ""], [4, "ngIf"], ["matPrefix", "", 4, "ngIf"], ["matSuffix", "", 4, "ngIf"], [3, "field"], [3, "id", 4, "ngIf"], ["class", "mat-form-field-required-marker", 4, "ngIf"], [1, "mat-form-field-required-marker"], ["matPrefix", ""], [4, "ngTemplateOutlet"], ["matSuffix", ""], [3, "id"]], template: function FormlyWrapperFormField_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "mat-form-field", 0);
        ɵngcc0.ɵɵelementContainer(1, null, 1);
        ɵngcc0.ɵɵtemplate(3, FormlyWrapperFormField_mat_label_3_Template, 3, 2, "mat-label", 2);
        ɵngcc0.ɵɵtemplate(4, FormlyWrapperFormField_ng_container_4_Template, 2, 1, "ng-container", 3);
        ɵngcc0.ɵɵtemplate(5, FormlyWrapperFormField_ng_container_5_Template, 2, 1, "ng-container", 4);
        ɵngcc0.ɵɵelementStart(6, "mat-error");
        ɵngcc0.ɵɵelement(7, "formly-validation-message", 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(8, FormlyWrapperFormField_mat_hint_8_Template, 2, 2, "mat-hint", 6);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("width", "100%");
        ɵngcc0.ɵɵproperty("hideRequiredMarker", true)("floatLabel", ctx.to.floatLabel)("appearance", ctx.to.appearance)("color", ctx.to.color);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.to.label && ctx.to.hideLabel !== true);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.to.prefix || ctx.formlyField._matprefix);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.to.suffix || ctx.formlyField._matsuffix);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("field", ctx.field);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.to.description);
    } }, directives: [ɵngcc3.MatFormField, ɵngcc4.NgIf, ɵngcc3.MatError, ɵngcc1.ɵc, ɵngcc3.MatLabel, ɵngcc3.MatPrefix, ɵngcc4.NgTemplateOutlet, ɵngcc3.MatSuffix, ɵngcc3.MatHint], encapsulation: 2 });
/** @nocollapse */
FormlyWrapperFormField.ctorParameters = () => [
    { type: FormlyConfig },
    { type: Renderer2 },
    { type: ElementRef },
    { type: FocusMonitor }
];
FormlyWrapperFormField.propDecorators = {
    fieldComponent: [{ type: ViewChild, args: ['fieldComponent', (/** @type {?} */ ({ read: ViewContainerRef, static: true })),] }],
    formField: [{ type: ViewChild, args: [MatFormField, (/** @type {?} */ ({ static: true })),] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormlyWrapperFormField, [{
        type: Component,
        args: [{
                selector: 'formly-wrapper-mat-form-field',
                template: `
    <!-- fix https://github.com/angular/material2/pull/7083 by setting width to 100% -->
    <mat-form-field
      [hideRequiredMarker]="true"
      [floatLabel]="to.floatLabel"
      [appearance]="to.appearance"
      [color]="to.color"
      [style.width]="'100%'">
      <ng-container #fieldComponent></ng-container>
      <mat-label *ngIf="to.label && to.hideLabel !== true">
        {{ to.label }}
        <span *ngIf="to.required && to.hideRequiredMarker !== true" class="mat-form-field-required-marker">*</span>
      </mat-label>

      <ng-container matPrefix *ngIf="to.prefix || formlyField._matprefix">
        <ng-container *ngTemplateOutlet="to.prefix ? to.prefix : formlyField._matprefix"></ng-container>
      </ng-container>

      <ng-container matSuffix *ngIf="to.suffix || formlyField._matsuffix">
        <ng-container *ngTemplateOutlet="to.suffix ? to.suffix : formlyField._matsuffix"></ng-container>
      </ng-container>

      <mat-error>
        <formly-validation-message [field]="field"></formly-validation-message>
      </mat-error>
      <!-- fix https://github.com/angular/material2/issues/7737 by setting id to null  -->
      <mat-hint *ngIf="to.description" [id]="null">{{ to.description }}</mat-hint>
    </mat-form-field>
  `,
                providers: [{ provide: MatFormFieldControl, useExisting: FormlyWrapperFormField }]
            }]
    }], function () { return [{ type: ɵngcc1.FormlyConfig }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: ɵngcc2.FocusMonitor }]; }, { fieldComponent: [{
            type: ViewChild,
            args: ['fieldComponent', ( /** @type {?} */({ read: ViewContainerRef, static: true }))]
        }], formField: [{
            type: ViewChild,
            args: [MatFormField, ( /** @type {?} */({ static: true }))]
        }] }); })();
if (false) {
    /** @type {?} */
    FormlyWrapperFormField.prototype.fieldComponent;
    /** @type {?} */
    FormlyWrapperFormField.prototype.formField;
    /** @type {?} */
    FormlyWrapperFormField.prototype.stateChanges;
    /** @type {?} */
    FormlyWrapperFormField.prototype._errorState;
    /**
     * @type {?}
     * @private
     */
    FormlyWrapperFormField.prototype.initialGapCalculated;
    /**
     * @type {?}
     * @private
     */
    FormlyWrapperFormField.prototype.config;
    /**
     * @type {?}
     * @private
     */
    FormlyWrapperFormField.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    FormlyWrapperFormField.prototype.elementRef;
    /**
     * @type {?}
     * @private
     */
    FormlyWrapperFormField.prototype.focusMonitor;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,