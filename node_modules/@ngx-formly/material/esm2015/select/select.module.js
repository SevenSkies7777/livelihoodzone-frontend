/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ReactiveFormsModule } from '@angular/forms';
import { FormlyModule } from '@ngx-formly/core';
import { FormlySelectModule } from '@ngx-formly/core/select';
import { FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';
import { MatSelectModule } from '@angular/material/select';
import { FormlyFieldSelect } from './select.type';
import { MatPseudoCheckboxModule } from '@angular/material/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@ngx-formly/core';
export class FormlyMatSelectModule {
}
FormlyMatSelectModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: FormlyMatSelectModule });
FormlyMatSelectModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function FormlyMatSelectModule_Factory(t) { return new (t || FormlyMatSelectModule)(); }, imports: [[
            CommonModule,
            ReactiveFormsModule,
            MatSelectModule,
            MatPseudoCheckboxModule,
            FormlyMatFormFieldModule,
            FormlySelectModule,
            FormlyModule.forChild({
                types: [{
                        name: 'select',
                        component: FormlyFieldSelect,
                        wrappers: ['form-field']
                    }]
            }),
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FormlyMatSelectModule, { declarations: function () { return [FormlyFieldSelect]; }, imports: function () { return [CommonModule,
        ReactiveFormsModule,
        MatSelectModule,
        MatPseudoCheckboxModule,
        FormlyMatFormFieldModule,
        FormlySelectModule, ɵngcc1.FormlyModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormlyMatSelectModule, [{
        type: NgModule,
        args: [{
                declarations: [FormlyFieldSelect],
                imports: [
                    CommonModule,
                    ReactiveFormsModule,
                    MatSelectModule,
                    MatPseudoCheckboxModule,
                    FormlyMatFormFieldModule,
                    FormlySelectModule,
                    FormlyModule.forChild({
                        types: [{
                                name: 'select',
                                component: FormlyFieldSelect,
                                wrappers: ['form-field']
                            }]
                    }),
                ]
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0Lm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiQG5neC1mb3JtbHkvbWF0ZXJpYWwvc2VsZWN0L3NlbGVjdC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUU3RCxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUMzRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFFM0QsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2xELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHdCQUF3QixDQUFDOzs7QUFxQmpFLE1BQU0sT0FBTyxxQkFBcUI7QUFBRztpREFuQnBDLFFBQVEsU0FBQyxrQkFDUjtTQUFZLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxrQkFDakMsT0FBTyxFQUFFLHNCQUNQLFlBQVksc0JBQ1osbUJBQW1CLHNCQUNuQjtHQUFlLHNCQUNmO3NCQUF1QjtXQUV2QjtNQUF3QixzQkFDeEI7U0FBa0Isc0JBQ2xCO0tBQVksQ0FBQyxRQUFRLENBQUM7U0FDcEIsS0FBSyxFQUFFLENBQUM7ZUFDTixJQUFJLEVBQUU7R0FBUSxrQ0FDZDtNQUFTLEVBQUUsaUJBQWlCO0tBQzVCLFFBQVEsRUFBRSxDQUFDLFlBQVksQ0FBQztXQUN6QixDQUFDO1lBQ0gsQ0FBQzs7Q0FDSCxlQUNGOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQkFDSTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBSZWFjdGl2ZUZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgRm9ybWx5TW9kdWxlIH0gZnJvbSAnQG5neC1mb3JtbHkvY29yZSc7XG5pbXBvcnQgeyBGb3JtbHlTZWxlY3RNb2R1bGUgfSBmcm9tICdAbmd4LWZvcm1seS9jb3JlL3NlbGVjdCc7XG5cbmltcG9ydCB7IEZvcm1seU1hdEZvcm1GaWVsZE1vZHVsZSB9IGZyb20gJ0BuZ3gtZm9ybWx5L21hdGVyaWFsL2Zvcm0tZmllbGQnO1xuaW1wb3J0IHsgTWF0U2VsZWN0TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvc2VsZWN0JztcblxuaW1wb3J0IHsgRm9ybWx5RmllbGRTZWxlY3QgfSBmcm9tICcuL3NlbGVjdC50eXBlJztcbmltcG9ydCB7IE1hdFBzZXVkb0NoZWNrYm94TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvY29yZSc7XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW0Zvcm1seUZpZWxkU2VsZWN0XSxcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZSxcbiAgICBSZWFjdGl2ZUZvcm1zTW9kdWxlLFxuICAgIE1hdFNlbGVjdE1vZHVsZSxcbiAgICBNYXRQc2V1ZG9DaGVja2JveE1vZHVsZSxcblxuICAgIEZvcm1seU1hdEZvcm1GaWVsZE1vZHVsZSxcbiAgICBGb3JtbHlTZWxlY3RNb2R1bGUsXG4gICAgRm9ybWx5TW9kdWxlLmZvckNoaWxkKHtcbiAgICAgIHR5cGVzOiBbe1xuICAgICAgICBuYW1lOiAnc2VsZWN0JyxcbiAgICAgICAgY29tcG9uZW50OiBGb3JtbHlGaWVsZFNlbGVjdCxcbiAgICAgICAgd3JhcHBlcnM6IFsnZm9ybS1maWVsZCddLFxuICAgICAgfV0sXG4gICAgfSksXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIEZvcm1seU1hdFNlbGVjdE1vZHVsZSB7IH1cbiJdfQ==