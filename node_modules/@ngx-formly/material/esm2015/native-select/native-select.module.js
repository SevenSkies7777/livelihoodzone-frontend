/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormlyModule } from '@ngx-formly/core';
import { FormlySelectModule } from '@ngx-formly/core/select';
import { ReactiveFormsModule } from '@angular/forms';
import { FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';
import { MatInputModule } from '@angular/material/input';
import { FormlyFieldNativeSelect } from './native-select.type';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@ngx-formly/core';
export class FormlyMatNativeSelectModule {
}
FormlyMatNativeSelectModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: FormlyMatNativeSelectModule });
FormlyMatNativeSelectModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function FormlyMatNativeSelectModule_Factory(t) { return new (t || FormlyMatNativeSelectModule)(); }, imports: [[
            CommonModule,
            ReactiveFormsModule,
            MatInputModule,
            FormlyMatFormFieldModule,
            FormlySelectModule,
            FormlyModule.forChild({
                types: [
                    {
                        name: 'native-select',
                        component: FormlyFieldNativeSelect,
                        wrappers: ['form-field']
                    },
                ]
            }),
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FormlyMatNativeSelectModule, { declarations: function () { return [FormlyFieldNativeSelect]; }, imports: function () { return [CommonModule,
        ReactiveFormsModule,
        MatInputModule,
        FormlyMatFormFieldModule,
        FormlySelectModule, ɵngcc1.FormlyModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormlyMatNativeSelectModule, [{
        type: NgModule,
        args: [{
                declarations: [FormlyFieldNativeSelect],
                imports: [
                    CommonModule,
                    ReactiveFormsModule,
                    MatInputModule,
                    FormlyMatFormFieldModule,
                    FormlySelectModule,
                    FormlyModule.forChild({
                        types: [
                            {
                                name: 'native-select',
                                component: FormlyFieldNativeSelect,
                                wrappers: ['form-field']
                            },
                        ]
                    }),
                ]
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF0aXZlLXNlbGVjdC5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIkBuZ3gtZm9ybWx5L21hdGVyaWFsL25hdGl2ZS1zZWxlY3QvbmF0aXZlLXNlbGVjdC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUVyRCxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUMzRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFFekQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sc0JBQXNCLENBQUM7OztBQXNCL0QsTUFBTSxPQUFPLDJCQUEyQjtBQUFHO3VEQXBCMUMsUUFBUSxTQUFDLGtCQUNSO0dBQVksRUFBRSxDQUFDLHVCQUF1QixDQUFDLGtCQUN2QyxPQUFPLEVBQUUsc0JBQ1AsWUFBWSxzQkFDWixtQkFBbUIsc0JBQ25CLGNBQWM7TUFFZDtJQUF3QixzQkFDeEI7V0FBa0I7S0FDbEIsWUFBWSxDQUFDLFFBQVEsQ0FBQztlQUNwQixLQUFLLEVBQUU7b0JBQ0w7a0JBQ0UsSUFBSSxFQUFFO2NBQWU7MEJBQ3JCLFNBQVMsRUFBRTthQUF1QixrQ0FDbEMsUUFBUSxFQUFFLENBQUM7VUFBWSxDQUFDLCtCQUN6QjtvQkFDRjs7RUFDRixDQUFDO01BQ0g7TUFDRjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MEJBQ0k7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgRm9ybWx5TW9kdWxlIH0gZnJvbSAnQG5neC1mb3JtbHkvY29yZSc7XG5pbXBvcnQgeyBGb3JtbHlTZWxlY3RNb2R1bGUgfSBmcm9tICdAbmd4LWZvcm1seS9jb3JlL3NlbGVjdCc7XG5pbXBvcnQgeyBSZWFjdGl2ZUZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5pbXBvcnQgeyBGb3JtbHlNYXRGb3JtRmllbGRNb2R1bGUgfSBmcm9tICdAbmd4LWZvcm1seS9tYXRlcmlhbC9mb3JtLWZpZWxkJztcbmltcG9ydCB7IE1hdElucHV0TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvaW5wdXQnO1xuXG5pbXBvcnQgeyBGb3JtbHlGaWVsZE5hdGl2ZVNlbGVjdCB9IGZyb20gJy4vbmF0aXZlLXNlbGVjdC50eXBlJztcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbRm9ybWx5RmllbGROYXRpdmVTZWxlY3RdLFxuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlLFxuICAgIFJlYWN0aXZlRm9ybXNNb2R1bGUsXG4gICAgTWF0SW5wdXRNb2R1bGUsXG5cbiAgICBGb3JtbHlNYXRGb3JtRmllbGRNb2R1bGUsXG4gICAgRm9ybWx5U2VsZWN0TW9kdWxlLFxuICAgIEZvcm1seU1vZHVsZS5mb3JDaGlsZCh7XG4gICAgICB0eXBlczogW1xuICAgICAgICB7XG4gICAgICAgICAgbmFtZTogJ25hdGl2ZS1zZWxlY3QnLFxuICAgICAgICAgIGNvbXBvbmVudDogRm9ybWx5RmllbGROYXRpdmVTZWxlY3QsXG4gICAgICAgICAgd3JhcHBlcnM6IFsnZm9ybS1maWVsZCddLFxuICAgICAgICB9LFxuICAgICAgXSxcbiAgICB9KSxcbiAgXSxcbn0pXG5leHBvcnQgY2xhc3MgRm9ybWx5TWF0TmF0aXZlU2VsZWN0TW9kdWxlIHsgfVxuIl19