{"version":3,"file":"ngx-formly-material-checkbox.js","sources":["@ngx-formly/material/checkbox/checkbox.type.ts","@ngx-formly/material/checkbox/checkbox.module.ts"],"names":["tslib_1.__extends"],"mappings":"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","sourcesContent":["import { Component, ViewChild, Renderer2, AfterViewChecked, OnDestroy, AfterViewInit } from '@angular/core';\nimport { FieldType } from '@ngx-formly/material/form-field';\nimport { MatCheckbox } from '@angular/material/checkbox';\nimport { FocusMonitor } from '@angular/cdk/a11y';\n\n@Component({\n  selector: 'formly-field-mat-checkbox',\n  template: `\n    <mat-checkbox\n      [formControl]=\"formControl\"\n      [id]=\"id\"\n      [formlyAttributes]=\"field\"\n      [tabIndex]=\"to.tabindex\"\n      [indeterminate]=\"to.indeterminate && formControl.value === null\"\n      [color]=\"to.color\"\n      [labelPosition]=\"to.align || to.labelPosition\">\n      {{ to.label }}\n      <span *ngIf=\"to.required && to.hideRequiredMarker !== true\" class=\"mat-form-field-required-marker\">*</span>\n    </mat-checkbox>\n  `,\n})\nexport class FormlyFieldCheckbox extends FieldType implements AfterViewInit, AfterViewChecked, OnDestroy {\n  @ViewChild(MatCheckbox) checkbox!: MatCheckbox;\n  defaultOptions = {\n    templateOptions: {\n      hideFieldUnderline: true,\n      indeterminate: true,\n      floatLabel: 'always',\n      hideLabel: true,\n      align: 'start', // start or end\n      color: 'accent', // workaround for https://github.com/angular/components/issues/18465\n    },\n  };\n\n  private _required!: boolean;\n  constructor(private renderer: Renderer2, private focusMonitor: FocusMonitor) {\n    super();\n  }\n\n  onContainerClick(event: MouseEvent): void {\n    this.checkbox.focus();\n    super.onContainerClick(event);\n  }\n\n  ngAfterViewInit() {\n    this.focusMonitor.monitor(this.checkbox._inputElement, true).subscribe(focusOrigin => {\n      if (focusOrigin) {\n        this.to.focus && this.to.focus(this.field);\n      } else {\n        this.to.blur && this.to.blur(this.field);\n      }\n    });\n  }\n\n  ngAfterViewChecked() {\n    if (this.required !== this._required && this.checkbox && this.checkbox._inputElement) {\n      this._required = this.required;\n      const inputElement = this.checkbox._inputElement.nativeElement;\n      if (this.required) {\n        this.renderer.setAttribute(inputElement, 'required', 'required');\n      } else {\n        this.renderer.removeAttribute(inputElement, 'required');\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.checkbox) {\n      this.focusMonitor.stopMonitoring(this.checkbox._inputElement);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { FormlyFieldCheckbox } from './checkbox.type';\n\n@NgModule({\n  declarations: [FormlyFieldCheckbox],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n\n    MatCheckboxModule,\n\n    FormlyMatFormFieldModule,\n    FormlyModule.forChild({\n      types: [\n        {\n          name: 'checkbox',\n          component: FormlyFieldCheckbox,\n          wrappers: ['form-field'],\n        },\n      ],\n    }),\n  ],\n})\nexport class FormlyMatCheckboxModule { }\n"]}