{"version":3,"file":"ngx-formly-material-select.js","sources":["@ngx-formly/material/select/select.type.ts","@ngx-formly/material/select/select.module.ts"],"names":["tslib_1.__extends"],"mappings":"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","sourcesContent":["import { Component, ViewChild } from '@angular/core';\nimport { MatSelect, MatSelectChange } from '@angular/material/select';\nimport { FieldType } from '@ngx-formly/material/form-field';\n\n@Component({\n  selector: 'formly-field-mat-select',\n  template: `\n    <ng-template #selectAll let-selectOptions=\"selectOptions\">\n      <mat-option (click)=\"toggleSelectAll(selectOptions)\">\n        <mat-pseudo-checkbox class=\"mat-option-pseudo-checkbox\"\n          [state]=\"getSelectAllState(selectOptions)\">\n        </mat-pseudo-checkbox>\n        {{ to.selectAllOption }}\n      </mat-option>\n    </ng-template>\n\n    <mat-select [id]=\"id\"\n      [formControl]=\"formControl\"\n      [formlyAttributes]=\"field\"\n      [placeholder]=\"to.placeholder\"\n      [tabIndex]=\"to.tabindex\"\n      [required]=\"to.required\"\n      [compareWith]=\"to.compareWith\"\n      [multiple]=\"to.multiple\"\n      (selectionChange)=\"change($event)\"\n      [errorStateMatcher]=\"errorStateMatcher\"\n      [aria-labelledby]=\"_getAriaLabelledby()\"\n      [disableOptionCentering]=\"to.disableOptionCentering\"\n      >\n      <ng-container *ngIf=\"to.options | formlySelectOptions:field | async as selectOptions\">\n        <ng-container *ngIf=\"to.multiple && to.selectAllOption\" [ngTemplateOutlet]=\"selectAll\" [ngTemplateOutletContext]=\"{ selectOptions: selectOptions }\">\n        </ng-container>\n        <ng-container *ngFor=\"let item of selectOptions\">\n          <mat-optgroup *ngIf=\"item.group\" [label]=\"item.label\">\n            <mat-option *ngFor=\"let child of item.group\" [value]=\"child.value\" [disabled]=\"child.disabled\">\n              {{ child.label }}\n            </mat-option>\n          </mat-optgroup>\n          <mat-option *ngIf=\"!item.group\" [value]=\"item.value\" [disabled]=\"item.disabled\">{{ item.label }}</mat-option>\n        </ng-container>\n      </ng-container>\n    </mat-select>\n  `,\n})\nexport class FormlyFieldSelect extends FieldType {\n  @ViewChild(MatSelect, <any> { static: true }) formFieldControl!: MatSelect;\n\n  defaultOptions = {\n    templateOptions: {\n      options: [],\n      compareWith(o1: any, o2: any) {\n        return o1 === o2;\n      },\n    },\n  };\n\n  private selectAllValue!: { options: any, value: any[] };\n\n  getSelectAllState(options: any[]) {\n    if (this.empty || this.value.length === 0) {\n      return '';\n    }\n\n\n    return this.value.length !== this.getSelectAllValue(options).length\n      ? 'indeterminate'\n      : 'checked';\n  }\n\n  toggleSelectAll(options: any[]) {\n    const selectAllValue = this.getSelectAllValue(options);\n    this.formControl.setValue(\n      !this.value || this.value.length !== selectAllValue.length\n        ? selectAllValue\n        : [],\n    );\n  }\n\n  change($event: MatSelectChange) {\n    if (this.to.change) {\n      this.to.change(this.field, $event);\n    }\n  }\n\n  _getAriaLabelledby() {\n    if (this.to.attributes && this.to.attributes['aria-labelledby']) {\n      return this.to.attributes['aria-labelledby'];\n    }\n\n    if (this.formField && this.formField._labelId) {\n      return this.formField._labelId;\n    }\n\n    return null;\n  }\n\n  private getSelectAllValue(options: any[]) {\n    if (!this.selectAllValue || options !== this.selectAllValue.options) {\n      const flatOptions: any[] = [];\n      options.forEach(o => o.group\n        ? flatOptions.push(...o.group)\n        : flatOptions.push(o),\n      );\n\n      this.selectAllValue = {\n        options,\n        value: flatOptions.filter(o => !o.disabled).map(o => o.value),\n      };\n    }\n\n\n    return this.selectAllValue.value;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { FormlySelectModule } from '@ngx-formly/core/select';\n\nimport { FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { FormlyFieldSelect } from './select.type';\nimport { MatPseudoCheckboxModule } from '@angular/material/core';\n\n@NgModule({\n  declarations: [FormlyFieldSelect],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatSelectModule,\n    MatPseudoCheckboxModule,\n\n    FormlyMatFormFieldModule,\n    FormlySelectModule,\n    FormlyModule.forChild({\n      types: [{\n        name: 'select',\n        component: FormlyFieldSelect,\n        wrappers: ['form-field'],\n      }],\n    }),\n  ],\n})\nexport class FormlyMatSelectModule { }\n"]}