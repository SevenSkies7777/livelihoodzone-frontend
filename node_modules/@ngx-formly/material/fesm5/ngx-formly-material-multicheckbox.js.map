{"version":3,"file":"ngx-formly-material-multicheckbox.js","sources":["@ngx-formly/material/multicheckbox/multicheckbox.type.ts","@ngx-formly/material/multicheckbox/multicheckbox.module.ts"],"names":["tslib_1.__extends","tslib_1.__spread"],"mappings":"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","sourcesContent":["import { Component, ViewChildren, QueryList } from '@angular/core';\nimport { FieldType } from '@ngx-formly/material/form-field';\nimport { MatCheckbox } from '@angular/material/checkbox';\n\n@Component({\n  selector: 'formly-field-mat-multicheckbox',\n  template: `\n    <ng-container *ngFor=\"let option of to.options | formlySelectOptions:field | async; let i = index;\">\n      <mat-checkbox\n        [id]=\"id + '_' + i\"\n        [formlyAttributes]=\"field\"\n        [tabIndex]=\"to.tabindex\"\n        [color]=\"to.color\"\n        [labelPosition]=\"to.labelPosition\"\n        [checked]=\"isChecked(option)\"\n        [disabled]=\"formControl.disabled\"\n        (change)=\"onChange(option.value, $event.checked)\">\n          {{ option.label }}\n      </mat-checkbox>\n    </ng-container>\n  `,\n})\nexport class FormlyFieldMultiCheckbox extends FieldType {\n  @ViewChildren(MatCheckbox) checkboxes!: QueryList<MatCheckbox>;\n\n  defaultOptions = {\n    templateOptions: {\n      hideFieldUnderline: true,\n      floatLabel: 'always',\n      options: [],\n      color: 'accent', // workaround for https://github.com/angular/components/issues/18465\n    },\n  };\n\n  onChange(value: any, checked: boolean) {\n    if (this.to.type === 'array') {\n      this.formControl.patchValue(checked\n        ? [...(this.formControl.value || []), value]\n        : [...(this.formControl.value || [])].filter(o => o !== value),\n      );\n    } else {\n      this.formControl.patchValue({ ...this.formControl.value, [value]: checked });\n    }\n    this.formControl.markAsTouched();\n  }\n\n  // TODO: find a solution to prevent scroll on focus\n  onContainerClick() {}\n\n  isChecked(option: any) {\n    const value = this.formControl.value;\n\n    return value && (\n      this.to.type === 'array'\n        ? (value.indexOf(option.value) !== -1)\n        : value[option.value]\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { FormlySelectModule } from '@ngx-formly/core/select';\nimport { FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { FormlyFieldMultiCheckbox } from './multicheckbox.type';\n\n@NgModule({\n  declarations: [FormlyFieldMultiCheckbox],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n\n    MatCheckboxModule,\n\n    FormlyMatFormFieldModule,\n    FormlySelectModule,\n    FormlyModule.forChild({\n      types: [\n        {\n          name: 'multicheckbox',\n          component: FormlyFieldMultiCheckbox,\n          wrappers: ['form-field'],\n        },\n      ],\n    }),\n  ],\n})\nexport class FormlyMatMultiCheckboxModule { }\n"]}