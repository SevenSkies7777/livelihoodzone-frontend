import { CommonModule } from '@angular/common';
import { FormlyModule } from '@ngx-formly/core';
import { ReactiveFormsModule } from '@angular/forms';
import { __extends } from 'tslib';
import { Component, ViewChild, NgModule } from '@angular/core';
import { FieldType, FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';
import { MatSlider, MatSliderModule } from '@angular/material/slider';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/material/slider';
import * as ɵngcc2 from '@angular/forms';
import * as ɵngcc3 from '@ngx-formly/core';
var FormlySliderTypeComponent = /** @class */ (function (_super) {
    __extends(FormlySliderTypeComponent, _super);
    function FormlySliderTypeComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.defaultOptions = {
            templateOptions: {
                hideFieldUnderline: true,
                floatLabel: 'always',
                thumbLabel: false,
            },
        };
        return _this;
    }
    /**
     * @param {?} event
     * @return {?}
     */
    FormlySliderTypeComponent.prototype.onContainerClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.slider.focus();
        _super.prototype.onContainerClick.call(this, event);
    };
    FormlySliderTypeComponent.propDecorators = {
        slider: [{ type: ViewChild, args: [MatSlider,] }]
    };
FormlySliderTypeComponent.ɵfac = function FormlySliderTypeComponent_Factory(t) { return ɵFormlySliderTypeComponent_BaseFactory(t || FormlySliderTypeComponent); };
FormlySliderTypeComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FormlySliderTypeComponent, selectors: [["formly-field-mat-slider"]], viewQuery: function FormlySliderTypeComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(MatSlider, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.slider = _t.first);
    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 11, consts: [[3, "id", "formControl", "formlyAttributes", "tabIndex", "color", "thumbLabel", "step", "max", "min"]], template: function FormlySliderTypeComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelement(0, "mat-slider", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("width", "100%");
        ɵngcc0.ɵɵproperty("id", ctx.id)("formControl", ctx.formControl)("formlyAttributes", ctx.field)("tabIndex", ctx.to.tabindex)("color", ctx.to.color)("thumbLabel", ctx.to.thumbLabel)("step", ctx.to.step)("max", ctx.to.max)("min", ctx.to.min);
    } }, directives: [ɵngcc1.MatSlider, ɵngcc2.NgControlStatus, ɵngcc2.FormControlDirective, ɵngcc3.FormlyAttributes], encapsulation: 2 });
var ɵFormlySliderTypeComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(FormlySliderTypeComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormlySliderTypeComponent, [{
        type: Component,
        args: [{
                selector: 'formly-field-mat-slider',
                template: "\n    <mat-slider\n      [id]=\"id\"\n      [style.width]=\"'100%'\"\n      [formControl]=\"formControl\"\n      [formlyAttributes]=\"field\"\n      [tabIndex]=\"to.tabindex\"\n      [color]=\"to.color\"\n      [thumbLabel]=\"to.thumbLabel\"\n      [step]=\"to.step\"\n      [max]=\"to.max\"\n      [min]=\"to.min\">\n    </mat-slider>\n  "
            }]
    }], null, { slider: [{
            type: ViewChild,
            args: [MatSlider]
        }] }); })();
    return FormlySliderTypeComponent;
}(FieldType));

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var FormlyMatSliderModule = /** @class */ (function () {
    function FormlyMatSliderModule() {
    }
FormlyMatSliderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: FormlyMatSliderModule });
FormlyMatSliderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function FormlyMatSliderModule_Factory(t) { return new (t || FormlyMatSliderModule)(); }, imports: [[
            CommonModule,
            ReactiveFormsModule,
            MatSliderModule,
            FormlyMatFormFieldModule,
            FormlyModule.forChild({
                types: [{
                        name: 'slider',
                        component: FormlySliderTypeComponent,
                        wrappers: ['form-field']
                    }]
            }),
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FormlyMatSliderModule, { declarations: function () { return [FormlySliderTypeComponent]; }, imports: function () { return [CommonModule,
        ReactiveFormsModule,
        MatSliderModule,
        FormlyMatFormFieldModule, ɵngcc3.FormlyModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormlyMatSliderModule, [{
        type: NgModule,
        args: [{
                declarations: [FormlySliderTypeComponent],
                imports: [
                    CommonModule,
                    ReactiveFormsModule,
                    MatSliderModule,
                    FormlyMatFormFieldModule,
                    FormlyModule.forChild({
                        types: [{
                                name: 'slider',
                                component: FormlySliderTypeComponent,
                                wrappers: ['form-field']
                            }]
                    }),
                ]
            }]
    }], function () { return []; }, null); })();
    return FormlyMatSliderModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { FormlyMatSliderModule, FormlySliderTypeComponent as ɵa };

//# sourceMappingURL=ngx-formly-material-slider.js.map