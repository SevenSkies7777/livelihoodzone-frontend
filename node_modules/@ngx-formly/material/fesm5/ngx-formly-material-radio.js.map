{"version":3,"file":"ngx-formly-material-radio.js","sources":["@ngx-formly/material/radio/radio.type.ts","@ngx-formly/material/radio/radio.module.ts"],"names":["tslib_1.__extends","wrapProperty"],"mappings":"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","sourcesContent":["import { Component, ViewChild, AfterViewInit, OnDestroy } from '@angular/core';\nimport { FieldType } from '@ngx-formly/material/form-field';\nimport { MatRadioGroup } from '@angular/material/radio';\nimport { ÉµwrapProperty as wrapProperty } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-field-mat-radio',\n  template: `\n    <mat-radio-group\n      [formControl]=\"formControl\"\n      [formlyAttributes]=\"field\"\n      [required]=\"to.required\"\n      [tabindex]=\"to.tabindex\">\n      <mat-radio-button *ngFor=\"let option of to.options | formlySelectOptions:field | async; let i = index;\"\n        [id]=\"id + '_' + i\"\n        [color]=\"to.color\"\n        [labelPosition]=\"to.labelPosition\"\n        [disabled]=\"option.disabled\"\n        [value]=\"option.value\">\n        {{ option.label }}\n      </mat-radio-button>\n    </mat-radio-group>\n  `,\n})\nexport class FormlyFieldRadio extends FieldType implements AfterViewInit, OnDestroy {\n  @ViewChild(MatRadioGroup) radioGroup!: MatRadioGroup;\n  defaultOptions = {\n    templateOptions: {\n      hideFieldUnderline: true,\n      floatLabel: 'always',\n      options: [],\n      tabindex: -1,\n    },\n  };\n\n  private focusObserver!: Function;\n  ngAfterViewInit() {\n    this.focusObserver = wrapProperty(this.field, 'focus', ({ currentValue }) => {\n      if (\n        this.to.tabindex === -1\n        && currentValue\n        && this.radioGroup._radios.length > 0\n      ) {\n        // https://github.com/ngx-formly/ngx-formly/issues/2498\n        setTimeout(() => {\n          const radio = this.radioGroup.selected\n            ? this.radioGroup.selected\n            : this.radioGroup._radios.first;\n\n          radio._elementRef.nativeElement.focus({ preventScroll: true });\n        });\n      }\n    });\n  }\n\n  // TODO: find a solution to prevent scroll on focus\n  onContainerClick() {}\n\n  ngOnDestroy() {\n    this.focusObserver && this.focusObserver();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlySelectModule } from '@ngx-formly/core/select';\n\nimport { FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { FormlyFieldRadio } from './radio.type';\n\n@NgModule({\n  declarations: [FormlyFieldRadio],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatRadioModule,\n\n    FormlyMatFormFieldModule,\n    FormlySelectModule,\n    FormlyModule.forChild({\n      types: [{\n        name: 'radio',\n        component: FormlyFieldRadio,\n        wrappers: ['form-field'],\n      }],\n    }),\n  ],\n})\nexport class FormlyMatRadioModule { }\n"]}