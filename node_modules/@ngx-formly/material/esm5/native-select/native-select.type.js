/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ViewChild } from '@angular/core';
import { FieldType } from '@ngx-formly/material/form-field';
import { MatInput } from '@angular/material/input';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/material/input';
import * as ɵngcc2 from '@angular/forms';
import * as ɵngcc3 from '@ngx-formly/core';
import * as ɵngcc4 from '@angular/common';
import * as ɵngcc5 from '@ngx-formly/core/select';

function FormlyFieldNativeSelect_option_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "option", 3);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngValue", null);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.to.placeholder);
} }
function FormlyFieldNativeSelect_ng_container_2_ng_container_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "option", 7);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var opt_r7 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngValue", opt_r7.value)("disabled", opt_r7.disabled);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(opt_r7.label);
} }
function FormlyFieldNativeSelect_ng_container_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, FormlyFieldNativeSelect_ng_container_2_ng_container_1_ng_container_1_Template, 3, 3, "ng-container", 6);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var opts_r2 = ɵngcc0.ɵɵnextContext().ngIf;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", opts_r2);
} }
function FormlyFieldNativeSelect_ng_container_2_ng_template_2_ng_container_0_option_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "option", 7);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var opt_r10 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("ngValue", opt_r10.value)("disabled", opt_r10.disabled);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(opt_r10.label);
} }
function FormlyFieldNativeSelect_ng_container_2_ng_template_2_ng_container_0_ng_template_2_option_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "option", 7);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var child_r16 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngValue", child_r16.value)("disabled", child_r16.disabled);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", child_r16.label, " ");
} }
function FormlyFieldNativeSelect_ng_container_2_ng_template_2_ng_container_0_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "optgroup", 10);
    ɵngcc0.ɵɵtemplate(1, FormlyFieldNativeSelect_ng_container_2_ng_template_2_ng_container_0_ng_template_2_option_1_Template, 2, 3, "option", 11);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var opt_r10 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("label", opt_r10.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", opt_r10.group);
} }
function FormlyFieldNativeSelect_ng_container_2_ng_template_2_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, FormlyFieldNativeSelect_ng_container_2_ng_template_2_ng_container_0_option_1_Template, 2, 3, "option", 8);
    ɵngcc0.ɵɵtemplate(2, FormlyFieldNativeSelect_ng_container_2_ng_template_2_ng_container_0_ng_template_2_Template, 2, 2, "ng-template", null, 9, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var opt_r10 = ctx.$implicit;
    var _r12 = ɵngcc0.ɵɵreference(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !opt_r10.group)("ngIfElse", _r12);
} }
function FormlyFieldNativeSelect_ng_container_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, FormlyFieldNativeSelect_ng_container_2_ng_template_2_ng_container_0_Template, 4, 2, "ng-container", 6);
} if (rf & 2) {
    var opts_r2 = ɵngcc0.ɵɵnextContext().ngIf;
    ɵngcc0.ɵɵproperty("ngForOf", opts_r2);
} }
function FormlyFieldNativeSelect_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, FormlyFieldNativeSelect_ng_container_2_ng_container_1_Template, 2, 1, "ng-container", 4);
    ɵngcc0.ɵɵtemplate(2, FormlyFieldNativeSelect_ng_container_2_ng_template_2_Template, 1, 1, "ng-template", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var _r4 = ɵngcc0.ɵɵreference(3);
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.to._flatOptions)("ngIfElse", _r4);
} }
var FormlyFieldNativeSelect = /** @class */ (function (_super) {
    tslib_1.__extends(FormlyFieldNativeSelect, _super);
    function FormlyFieldNativeSelect() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.defaultOptions = {
            templateOptions: {
                options: [],
            },
        };
        return _this;
    }
    FormlyFieldNativeSelect.propDecorators = {
        formFieldControl: [{ type: ViewChild, args: [MatInput, (/** @type {?} */ ({ static: true })),] }]
    };
FormlyFieldNativeSelect.ɵfac = function FormlyFieldNativeSelect_Factory(t) { return ɵFormlyFieldNativeSelect_BaseFactory(t || FormlyFieldNativeSelect); };
FormlyFieldNativeSelect.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FormlyFieldNativeSelect, selectors: [["formly-field-mat-native-select"]], viewQuery: function FormlyFieldNativeSelect_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(MatInput, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.formFieldControl = _t.first);
    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 5, vars: 13, consts: [["matNativeControl", "", 3, "id", "readonly", "required", "errorStateMatcher", "formControl", "formlyAttributes"], [3, "ngValue", 4, "ngIf"], [4, "ngIf"], [3, "ngValue"], [4, "ngIf", "ngIfElse"], ["grouplist", ""], [4, "ngFor", "ngForOf"], [3, "ngValue", "disabled"], [3, "ngValue", "disabled", 4, "ngIf", "ngIfElse"], ["optgroup", ""], [3, "label"], [3, "ngValue", "disabled", 4, "ngFor", "ngForOf"]], template: function FormlyFieldNativeSelect_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "select", 0);
        ɵngcc0.ɵɵtemplate(1, FormlyFieldNativeSelect_option_1_Template, 2, 2, "option", 1);
        ɵngcc0.ɵɵtemplate(2, FormlyFieldNativeSelect_ng_container_2_Template, 4, 2, "ng-container", 2);
        ɵngcc0.ɵɵpipe(3, "async");
        ɵngcc0.ɵɵpipe(4, "formlySelectOptions");
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("id", ctx.id)("readonly", ctx.to.readonly)("required", ctx.to.required)("errorStateMatcher", ctx.errorStateMatcher)("formControl", ctx.formControl)("formlyAttributes", ctx.field);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.to.placeholder);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(3, 8, ɵngcc0.ɵɵpipeBind2(4, 10, ctx.to.options, ctx.field)));
    } }, directives: [ɵngcc1.MatInput, ɵngcc2.SelectControlValueAccessor, ɵngcc2.RequiredValidator, ɵngcc2.NgControlStatus, ɵngcc2.FormControlDirective, ɵngcc3.FormlyAttributes, ɵngcc4.NgIf, ɵngcc2.NgSelectOption, ɵngcc2.ɵangular_packages_forms_forms_x, ɵngcc4.NgForOf], pipes: [ɵngcc4.AsyncPipe, ɵngcc5.ɵa], encapsulation: 2 });
var ɵFormlyFieldNativeSelect_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(FormlyFieldNativeSelect);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormlyFieldNativeSelect, [{
        type: Component,
        args: [{
                selector: 'formly-field-mat-native-select',
                template: "\n    <select matNativeControl\n      [id]=\"id\"\n      [readonly]=\"to.readonly\"\n      [required]=\"to.required\"\n      [errorStateMatcher]=\"errorStateMatcher\"\n      [formControl]=\"formControl\"\n      [formlyAttributes]=\"field\">\n      <option *ngIf=\"to.placeholder\" [ngValue]=\"null\">{{ to.placeholder }}</option>\n      <ng-container *ngIf=\"to.options | formlySelectOptions:field | async as opts\">\n        <ng-container *ngIf=\"to._flatOptions else grouplist\">\n          <ng-container *ngFor=\"let opt of opts\">\n            <option [ngValue]=\"opt.value\" [disabled]=\"opt.disabled\">{{ opt.label }}</option>\n          </ng-container>\n        </ng-container>\n\n        <ng-template #grouplist>\n          <ng-container *ngFor=\"let opt of opts\">\n            <option *ngIf=\"!opt.group else optgroup\" [ngValue]=\"opt.value\" [disabled]=\"opt.disabled\">{{ opt.label }}</option>\n            <ng-template #optgroup>\n              <optgroup [label]=\"opt.label\">\n                <option *ngFor=\"let child of opt.group\" [ngValue]=\"child.value\" [disabled]=\"child.disabled\">\n                  {{ child.label }}\n                </option>\n              </optgroup>\n            </ng-template>\n          </ng-container>\n        </ng-template>\n      </ng-container>\n    </select>\n  "
            }]
    }], null, { formFieldControl: [{
            type: ViewChild,
            args: [MatInput, ( /** @type {?} */({ static: true }))]
        }] }); })();
    return FormlyFieldNativeSelect;
}(FieldType));
export { FormlyFieldNativeSelect };
if (false) {
    /** @type {?} */
    FormlyFieldNativeSelect.prototype.formFieldControl;
    /** @type {?} */
    FormlyFieldNativeSelect.prototype.defaultOptions;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF0aXZlLXNlbGVjdC50eXBlLmpzIiwic291cmNlcyI6WyJAbmd4LWZvcm1seS9tYXRlcmlhbC9uYXRpdmUtc2VsZWN0L25hdGl2ZS1zZWxlY3QudHlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3JELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUM1RCxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0seUJBQXlCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRW5EO0FBRU0sSUFnQ3VDLG1EQUFTO0FBQUMsSUFsQ3ZEO0FBQ3dCLFFBRHhCLHFFQXlDQztBQUNELFFBTkUsb0JBQWMsR0FBRztBQUNuQixZQUFJLGVBQWUsRUFBRTtBQUNyQixnQkFBTSxPQUFPLEVBQUUsRUFBRTtBQUNqQixhQUFLO0FBQ0wsU0FBRyxDQUFDO0FBQ0o7QUFDb0IsSUFEcEIsQ0FBQyxBQVBPO0FBQUM7WUFsQ1IsU0FBUyxTQUFDLHNCQUNULFFBQVEsRUFBRSxnQ0FBZ0MsOUZBaUNZLG1DQUNyRCxTQUFTLFNBQUMsUUFBUSxFQUFFLG1CQUFNLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxFQUFBO0FBQU07R0FqQ2pELFFBQVEsRUFBRTs7Ozs7Ozs7O2lGQThCVCxrQkFDRjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUV3RDtBQUFDLElBTTFELDhCQUFDO0FBQ0EsQ0FEQSxBQXpDRCxDQWtDNkMsU0FBUyxHQU9yRDtBQUNELFNBUmEsdUJBQXVCO0FBQUk7QUFBYTtBQUNwQyxJQUFmLG1EQUF5RTtBQUMzRTtBQUNBLElBREUsaURBSUU7QUFDSjtBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZpZWxkVHlwZSB9IGZyb20gJ0BuZ3gtZm9ybWx5L21hdGVyaWFsL2Zvcm0tZmllbGQnO1xuaW1wb3J0IHsgTWF0SW5wdXQgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9pbnB1dCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2Zvcm1seS1maWVsZC1tYXQtbmF0aXZlLXNlbGVjdCcsXG4gIHRlbXBsYXRlOiBgXG4gICAgPHNlbGVjdCBtYXROYXRpdmVDb250cm9sXG4gICAgICBbaWRdPVwiaWRcIlxuICAgICAgW3JlYWRvbmx5XT1cInRvLnJlYWRvbmx5XCJcbiAgICAgIFtyZXF1aXJlZF09XCJ0by5yZXF1aXJlZFwiXG4gICAgICBbZXJyb3JTdGF0ZU1hdGNoZXJdPVwiZXJyb3JTdGF0ZU1hdGNoZXJcIlxuICAgICAgW2Zvcm1Db250cm9sXT1cImZvcm1Db250cm9sXCJcbiAgICAgIFtmb3JtbHlBdHRyaWJ1dGVzXT1cImZpZWxkXCI+XG4gICAgICA8b3B0aW9uICpuZ0lmPVwidG8ucGxhY2Vob2xkZXJcIiBbbmdWYWx1ZV09XCJudWxsXCI+e3sgdG8ucGxhY2Vob2xkZXIgfX08L29wdGlvbj5cbiAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJ0by5vcHRpb25zIHwgZm9ybWx5U2VsZWN0T3B0aW9uczpmaWVsZCB8IGFzeW5jIGFzIG9wdHNcIj5cbiAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cInRvLl9mbGF0T3B0aW9ucyBlbHNlIGdyb3VwbGlzdFwiPlxuICAgICAgICAgIDxuZy1jb250YWluZXIgKm5nRm9yPVwibGV0IG9wdCBvZiBvcHRzXCI+XG4gICAgICAgICAgICA8b3B0aW9uIFtuZ1ZhbHVlXT1cIm9wdC52YWx1ZVwiIFtkaXNhYmxlZF09XCJvcHQuZGlzYWJsZWRcIj57eyBvcHQubGFiZWwgfX08L29wdGlvbj5cbiAgICAgICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICAgICAgPC9uZy1jb250YWluZXI+XG5cbiAgICAgICAgPG5nLXRlbXBsYXRlICNncm91cGxpc3Q+XG4gICAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdGb3I9XCJsZXQgb3B0IG9mIG9wdHNcIj5cbiAgICAgICAgICAgIDxvcHRpb24gKm5nSWY9XCIhb3B0Lmdyb3VwIGVsc2Ugb3B0Z3JvdXBcIiBbbmdWYWx1ZV09XCJvcHQudmFsdWVcIiBbZGlzYWJsZWRdPVwib3B0LmRpc2FibGVkXCI+e3sgb3B0LmxhYmVsIH19PC9vcHRpb24+XG4gICAgICAgICAgICA8bmctdGVtcGxhdGUgI29wdGdyb3VwPlxuICAgICAgICAgICAgICA8b3B0Z3JvdXAgW2xhYmVsXT1cIm9wdC5sYWJlbFwiPlxuICAgICAgICAgICAgICAgIDxvcHRpb24gKm5nRm9yPVwibGV0IGNoaWxkIG9mIG9wdC5ncm91cFwiIFtuZ1ZhbHVlXT1cImNoaWxkLnZhbHVlXCIgW2Rpc2FibGVkXT1cImNoaWxkLmRpc2FibGVkXCI+XG4gICAgICAgICAgICAgICAgICB7eyBjaGlsZC5sYWJlbCB9fVxuICAgICAgICAgICAgICAgIDwvb3B0aW9uPlxuICAgICAgICAgICAgICA8L29wdGdyb3VwPlxuICAgICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAgICAgICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAgICAgIDwvbmctY29udGFpbmVyPlxuICAgIDwvc2VsZWN0PlxuICBgLFxufSlcbmV4cG9ydCBjbGFzcyBGb3JtbHlGaWVsZE5hdGl2ZVNlbGVjdCBleHRlbmRzIEZpZWxkVHlwZSB7XG4gIEBWaWV3Q2hpbGQoTWF0SW5wdXQsIDxhbnk+IHsgc3RhdGljOiB0cnVlIH0pIGZvcm1GaWVsZENvbnRyb2whOiBNYXRJbnB1dDtcbiAgZGVmYXVsdE9wdGlvbnMgPSB7XG4gICAgdGVtcGxhdGVPcHRpb25zOiB7XG4gICAgICBvcHRpb25zOiBbXSxcbiAgICB9LFxuICB9O1xufVxuIl19