/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormlyModule } from '@ngx-formly/core';
import { ReactiveFormsModule } from '@angular/forms';
import { MatSlideToggleModule } from '@angular/material/slide-toggle';
import { FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';
import { FormlyToggleTypeComponent } from './toggle.type';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@ngx-formly/core';
var FormlyMatToggleModule = /** @class */ (function () {
    function FormlyMatToggleModule() {
    }
FormlyMatToggleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: FormlyMatToggleModule });
FormlyMatToggleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function FormlyMatToggleModule_Factory(t) { return new (t || FormlyMatToggleModule)(); }, imports: [[
            CommonModule,
            ReactiveFormsModule,
            MatSlideToggleModule,
            FormlyMatFormFieldModule,
            FormlyModule.forChild({
                types: [{
                        name: 'toggle',
                        component: FormlyToggleTypeComponent,
                        wrappers: ['form-field']
                    }]
            }),
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FormlyMatToggleModule, { declarations: function () { return [FormlyToggleTypeComponent]; }, imports: function () { return [CommonModule,
        ReactiveFormsModule,
        MatSlideToggleModule,
        FormlyMatFormFieldModule, ɵngcc1.FormlyModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormlyMatToggleModule, [{
        type: NgModule,
        args: [{
                declarations: [FormlyToggleTypeComponent],
                imports: [
                    CommonModule,
                    ReactiveFormsModule,
                    MatSlideToggleModule,
                    FormlyMatFormFieldModule,
                    FormlyModule.forChild({
                        types: [{
                                name: 'toggle',
                                component: FormlyToggleTypeComponent,
                                wrappers: ['form-field']
                            }]
                    }),
                ]
            }]
    }], function () { return []; }, null); })();
    return FormlyMatToggleModule;
}());
export { FormlyMatToggleModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9nZ2xlLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiQG5neC1mb3JtbHkvbWF0ZXJpYWwvdG9nZ2xlL3RvZ2dsZS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUN0RSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUUzRSxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxlQUFlLENBQUM7OztBQUUxRDtBQUVBLElBRkE7QUFDdUIsSUFlYyxDQUFDO3lEQWhCckMsUUFBUSxTQUFDO1NBQ1IsWUFBWSxFQUFFLENBQUMseUJBQXlCLENBQUMsc0JBQ3pDLE9BQU8sRUFBRSwwQkFDUCxZQUFZLDBCQUNaLG1CQUFtQjt3QkFDbkI7a0JBQW9CO1dBQ3BCO0NBQXdCLDBCQUN4QjtDQUFZLENBQUMsUUFBUSxDQUFDO0tBQ3BCLEtBQUssRUFBRSxDQUFDO3lCQUNOLElBQUksRUFBRSxRQUFRO3FDQUNkLFNBQVMsRUFBRTtXQUF5QjtBQUNwQyxRQUFRLEVBQUUsQ0FBQztBQUFZLENBQUM7O0tBQ3pCLENBQUMsMkJBQ0gsQ0FBQyx1QkFDSCxtQkFDRjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztnREFDUTtBQUFDLElBQTJCLDRCQUFDO0FBQ3JDLENBRHFDLEFBaEJ0QyxJQWdCc0M7QUFDdEMsU0FEYSxxQkFBcUI7QUFBSSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgRm9ybWx5TW9kdWxlIH0gZnJvbSAnQG5neC1mb3JtbHkvY29yZSc7XG5pbXBvcnQgeyBSZWFjdGl2ZUZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgTWF0U2xpZGVUb2dnbGVNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9zbGlkZS10b2dnbGUnO1xuaW1wb3J0IHsgRm9ybWx5TWF0Rm9ybUZpZWxkTW9kdWxlIH0gZnJvbSAnQG5neC1mb3JtbHkvbWF0ZXJpYWwvZm9ybS1maWVsZCc7XG5cbmltcG9ydCB7IEZvcm1seVRvZ2dsZVR5cGVDb21wb25lbnQgfSBmcm9tICcuL3RvZ2dsZS50eXBlJztcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbRm9ybWx5VG9nZ2xlVHlwZUNvbXBvbmVudF0sXG4gIGltcG9ydHM6IFtcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgUmVhY3RpdmVGb3Jtc01vZHVsZSxcbiAgICBNYXRTbGlkZVRvZ2dsZU1vZHVsZSxcbiAgICBGb3JtbHlNYXRGb3JtRmllbGRNb2R1bGUsXG4gICAgRm9ybWx5TW9kdWxlLmZvckNoaWxkKHtcbiAgICAgIHR5cGVzOiBbe1xuICAgICAgICBuYW1lOiAndG9nZ2xlJyxcbiAgICAgICAgY29tcG9uZW50OiBGb3JtbHlUb2dnbGVUeXBlQ29tcG9uZW50LFxuICAgICAgICB3cmFwcGVyczogWydmb3JtLWZpZWxkJ10sXG4gICAgICB9XSxcbiAgICB9KSxcbiAgXSxcbn0pXG5leHBvcnQgY2xhc3MgRm9ybWx5TWF0VG9nZ2xlTW9kdWxlIHsgfVxuIl19