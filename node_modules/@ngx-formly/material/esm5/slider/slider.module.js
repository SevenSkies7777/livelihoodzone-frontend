/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormlyModule } from '@ngx-formly/core';
import { ReactiveFormsModule } from '@angular/forms';
import { MatSliderModule } from '@angular/material/slider';
import { FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';
import { FormlySliderTypeComponent } from './slider.type';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@ngx-formly/core';
var FormlyMatSliderModule = /** @class */ (function () {
    function FormlyMatSliderModule() {
    }
FormlyMatSliderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: FormlyMatSliderModule });
FormlyMatSliderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function FormlyMatSliderModule_Factory(t) { return new (t || FormlyMatSliderModule)(); }, imports: [[
            CommonModule,
            ReactiveFormsModule,
            MatSliderModule,
            FormlyMatFormFieldModule,
            FormlyModule.forChild({
                types: [{
                        name: 'slider',
                        component: FormlySliderTypeComponent,
                        wrappers: ['form-field']
                    }]
            }),
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FormlyMatSliderModule, { declarations: function () { return [FormlySliderTypeComponent]; }, imports: function () { return [CommonModule,
        ReactiveFormsModule,
        MatSliderModule,
        FormlyMatFormFieldModule, ɵngcc1.FormlyModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormlyMatSliderModule, [{
        type: NgModule,
        args: [{
                declarations: [FormlySliderTypeComponent],
                imports: [
                    CommonModule,
                    ReactiveFormsModule,
                    MatSliderModule,
                    FormlyMatFormFieldModule,
                    FormlyModule.forChild({
                        types: [{
                                name: 'slider',
                                component: FormlySliderTypeComponent,
                                wrappers: ['form-field']
                            }]
                    }),
                ]
            }]
    }], function () { return []; }, null); })();
    return FormlyMatSliderModule;
}());
export { FormlyMatSliderModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xpZGVyLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiQG5neC1mb3JtbHkvbWF0ZXJpYWwvc2xpZGVyL3NsaWRlci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDM0QsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFFM0UsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sZUFBZSxDQUFDOzs7QUFFMUQ7QUFFQSxJQUZBO0FBQ3VCLElBZWMsQ0FBQzt5REFoQnJDLFFBQVEsU0FBQztTQUNSLFlBQVksRUFBRSxDQUFDLHlCQUF5QixDQUFDLHNCQUN6QyxPQUFPLEVBQUUsMEJBQ1AsWUFBWSwwQkFDWixtQkFBbUI7d0JBQ25CO2FBQWU7TUFDZjtDQUF3QiwwQkFDeEI7Q0FBWSxDQUFDLFFBQVEsQ0FBQztLQUNwQixLQUFLLEVBQUUsQ0FBQzt5QkFDTixJQUFJLEVBQUUsUUFBUTtxQ0FDZCxTQUFTLEVBQUU7V0FBeUI7QUFDcEMsUUFBUSxFQUFFLENBQUM7QUFBWSxDQUFDOztLQUN6QixDQUFDLDJCQUNILENBQUMsdUJBQ0gsbUJBQ0Y7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Z0RBQ1E7QUFBQyxJQUEyQiw0QkFBQztBQUNyQyxDQURxQyxBQWhCdEMsSUFnQnNDO0FBQ3RDLFNBRGEscUJBQXFCO0FBQUkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IEZvcm1seU1vZHVsZSB9IGZyb20gJ0BuZ3gtZm9ybWx5L2NvcmUnO1xuaW1wb3J0IHsgUmVhY3RpdmVGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IE1hdFNsaWRlck1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL3NsaWRlcic7XG5pbXBvcnQgeyBGb3JtbHlNYXRGb3JtRmllbGRNb2R1bGUgfSBmcm9tICdAbmd4LWZvcm1seS9tYXRlcmlhbC9mb3JtLWZpZWxkJztcblxuaW1wb3J0IHsgRm9ybWx5U2xpZGVyVHlwZUNvbXBvbmVudCB9IGZyb20gJy4vc2xpZGVyLnR5cGUnO1xuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtGb3JtbHlTbGlkZXJUeXBlQ29tcG9uZW50XSxcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZSxcbiAgICBSZWFjdGl2ZUZvcm1zTW9kdWxlLFxuICAgIE1hdFNsaWRlck1vZHVsZSxcbiAgICBGb3JtbHlNYXRGb3JtRmllbGRNb2R1bGUsXG4gICAgRm9ybWx5TW9kdWxlLmZvckNoaWxkKHtcbiAgICAgIHR5cGVzOiBbe1xuICAgICAgICBuYW1lOiAnc2xpZGVyJyxcbiAgICAgICAgY29tcG9uZW50OiBGb3JtbHlTbGlkZXJUeXBlQ29tcG9uZW50LFxuICAgICAgICB3cmFwcGVyczogWydmb3JtLWZpZWxkJ10sXG4gICAgICB9XSxcbiAgICB9KSxcbiAgXSxcbn0pXG5leHBvcnQgY2xhc3MgRm9ybWx5TWF0U2xpZGVyTW9kdWxlIHsgfVxuIl19