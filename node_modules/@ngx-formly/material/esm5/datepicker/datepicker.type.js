/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ViewChild, TemplateRef } from '@angular/core';
import { ɵdefineHiddenProp as defineHiddenProp } from '@ngx-formly/core';
import { FieldType } from '@ngx-formly/material/form-field';
import { MatInput } from '@angular/material/input';
import { MatDatepickerInput } from '@angular/material/datepicker';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/material/input';
import * as ɵngcc2 from '@angular/forms';
import * as ɵngcc3 from '@angular/material/datepicker';
import * as ɵngcc4 from '@ngx-formly/core';

var _c0 = ["datepickerToggle"];
function FormlyDatepickerTypeComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "mat-datepicker-toggle", 4);
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    var _r2 = ɵngcc0.ɵɵreference(4);
    ɵngcc0.ɵɵproperty("disabled", ctx_r1.to.disabled)("for", _r2);
} }
var FormlyDatepickerTypeComponent = /** @class */ (function (_super) {
    tslib_1.__extends(FormlyDatepickerTypeComponent, _super);
    function FormlyDatepickerTypeComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.defaultOptions = {
            templateOptions: {
                datepickerOptions: {
                    startView: 'month',
                    datepickerTogglePosition: 'suffix',
                    dateInput: (/**
                     * @return {?}
                     */
                    function () { }),
                    dateChange: (/**
                     * @return {?}
                     */
                    function () { }),
                    monthSelected: (/**
                     * @return {?}
                     */
                    function () { }),
                    yearSelected: (/**
                     * @return {?}
                     */
                    function () { }),
                },
            },
        };
        return _this;
    }
    /**
     * @return {?}
     */
    FormlyDatepickerTypeComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        _super.prototype.ngAfterViewInit.call(this);
        // temporary fix for https://github.com/angular/material2/issues/6728
        ((/** @type {?} */ (this.datepickerInput)))._formField = this.formField;
        setTimeout((/**
         * @return {?}
         */
        function () {
            defineHiddenProp(_this.field, '_mat' + _this.to.datepickerOptions.datepickerTogglePosition, _this.datepickerToggle);
            ((/** @type {?} */ (_this.options)))._markForCheck(_this.field);
        }));
    };
    FormlyDatepickerTypeComponent.propDecorators = {
        formFieldControl: [{ type: ViewChild, args: [MatInput, (/** @type {?} */ ({ static: true })),] }],
        datepickerInput: [{ type: ViewChild, args: [MatDatepickerInput,] }],
        datepickerToggle: [{ type: ViewChild, args: ['datepickerToggle',] }]
    };
FormlyDatepickerTypeComponent.ɵfac = function FormlyDatepickerTypeComponent_Factory(t) { return ɵFormlyDatepickerTypeComponent_BaseFactory(t || FormlyDatepickerTypeComponent); };
FormlyDatepickerTypeComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FormlyDatepickerTypeComponent, selectors: [["formly-field-mat-datepicker"]], viewQuery: function FormlyDatepickerTypeComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(MatInput, true);
        ɵngcc0.ɵɵviewQuery(MatDatepickerInput, true);
        ɵngcc0.ɵɵviewQuery(_c0, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.formFieldControl = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.datepickerInput = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.datepickerToggle = _t.first);
    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 5, vars: 20, consts: [["matInput", "", 3, "id", "errorStateMatcher", "formControl", "matDatepicker", "matDatepickerFilter", "max", "min", "formlyAttributes", "placeholder", "tabindex", "readonly", "required", "dateInput", "dateChange"], ["datepickerToggle", ""], [3, "color", "dateClass", "disabled", "opened", "panelClass", "startAt", "startView", "touchUi", "monthSelected", "yearSelected"], ["picker", ""], [3, "disabled", "for"]], template: function FormlyDatepickerTypeComponent_Template(rf, ctx) { if (rf & 1) {
        var _r3 = ɵngcc0.ɵɵgetCurrentView();
        ɵngcc0.ɵɵelementStart(0, "input", 0);
        ɵngcc0.ɵɵlistener("dateInput", function FormlyDatepickerTypeComponent_Template_input_dateInput_0_listener($event) { return ctx.to.datepickerOptions.dateInput(ctx.field, $event); })("dateChange", function FormlyDatepickerTypeComponent_Template_input_dateChange_0_listener($event) { return ctx.to.datepickerOptions.dateChange(ctx.field, $event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(1, FormlyDatepickerTypeComponent_ng_template_1_Template, 1, 2, "ng-template", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵelementStart(3, "mat-datepicker", 2, 3);
        ɵngcc0.ɵɵlistener("monthSelected", function FormlyDatepickerTypeComponent_Template_mat_datepicker_monthSelected_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); var _r2 = ɵngcc0.ɵɵreference(4); return ctx.to.datepickerOptions.monthSelected(ctx.field, $event, _r2); })("yearSelected", function FormlyDatepickerTypeComponent_Template_mat_datepicker_yearSelected_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); var _r2 = ɵngcc0.ɵɵreference(4); return ctx.to.datepickerOptions.yearSelected(ctx.field, $event, _r2); });
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        var _r2 = ɵngcc0.ɵɵreference(4);
        ɵngcc0.ɵɵproperty("id", ctx.id)("errorStateMatcher", ctx.errorStateMatcher)("formControl", ctx.formControl)("matDatepicker", _r2)("matDatepickerFilter", ctx.to.datepickerOptions.filter)("max", ctx.to.datepickerOptions.max)("min", ctx.to.datepickerOptions.min)("formlyAttributes", ctx.field)("placeholder", ctx.to.placeholder)("tabindex", ctx.to.tabindex)("readonly", ctx.to.readonly)("required", ctx.to.required);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("color", ctx.to.color)("dateClass", ctx.to.datepickerOptions.dateClass)("disabled", ctx.to.datepickerOptions.disabled)("opened", ctx.to.datepickerOptions.opened)("panelClass", ctx.to.datepickerOptions.panelClass)("startAt", ctx.to.datepickerOptions.startAt)("startView", ctx.to.datepickerOptions.startView)("touchUi", ctx.to.datepickerOptions.touchUi);
    } }, directives: [ɵngcc1.MatInput, ɵngcc2.DefaultValueAccessor, ɵngcc3.MatDatepickerInput, ɵngcc2.NgControlStatus, ɵngcc2.FormControlDirective, ɵngcc4.FormlyAttributes, ɵngcc2.RequiredValidator, ɵngcc3.MatDatepicker, ɵngcc3.MatDatepickerToggle], encapsulation: 2 });
var ɵFormlyDatepickerTypeComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(FormlyDatepickerTypeComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormlyDatepickerTypeComponent, [{
        type: Component,
        args: [{
                selector: 'formly-field-mat-datepicker',
                template: "\n    <input matInput\n      [id]=\"id\"\n      [errorStateMatcher]=\"errorStateMatcher\"\n      [formControl]=\"formControl\"\n      [matDatepicker]=\"picker\"\n      [matDatepickerFilter]=\"to.datepickerOptions.filter\"\n      [max]=\"to.datepickerOptions.max\"\n      [min]=\"to.datepickerOptions.min\"\n      [formlyAttributes]=\"field\"\n      [placeholder]=\"to.placeholder\"\n      [tabindex]=\"to.tabindex\"\n      [readonly]=\"to.readonly\"\n      [required]=\"to.required\"\n      (dateInput)=\"to.datepickerOptions.dateInput(field, $event)\"\n      (dateChange)=\"to.datepickerOptions.dateChange(field, $event)\">\n    <ng-template #datepickerToggle>\n      <mat-datepicker-toggle [disabled]=\"to.disabled\" [for]=\"picker\"></mat-datepicker-toggle>\n    </ng-template>\n    <mat-datepicker #picker\n      [color]=\"to.color\"\n      [dateClass]=\"to.datepickerOptions.dateClass\"\n      [disabled]=\"to.datepickerOptions.disabled\"\n      [opened]=\"to.datepickerOptions.opened\"\n      [panelClass]=\"to.datepickerOptions.panelClass\"\n      [startAt]=\"to.datepickerOptions.startAt\"\n      [startView]=\"to.datepickerOptions.startView\"\n      [touchUi]=\"to.datepickerOptions.touchUi\"\n      (monthSelected)=\"to.datepickerOptions.monthSelected(field, $event, picker)\"\n      (yearSelected)=\"to.datepickerOptions.yearSelected(field, $event, picker)\"\n    >\n    </mat-datepicker>\n  "
            }]
    }], null, { formFieldControl: [{
            type: ViewChild,
            args: [MatInput, ( /** @type {?} */({ static: true }))]
        }], datepickerInput: [{
            type: ViewChild,
            args: [MatDatepickerInput]
        }], datepickerToggle: [{
            type: ViewChild,
            args: ['datepickerToggle']
        }] }); })();
    return FormlyDatepickerTypeComponent;
}(FieldType));
export { FormlyDatepickerTypeComponent };
if (false) {
    /** @type {?} */
    FormlyDatepickerTypeComponent.prototype.formFieldControl;
    /** @type {?} */
    FormlyDatepickerTypeComponent.prototype.datepickerInput;
    /** @type {?} */
    FormlyDatepickerTypeComponent.prototype.datepickerToggle;
    /** @type {?} */
    FormlyDatepickerTypeComponent.prototype.defaultOptions;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZXBpY2tlci50eXBlLmpzIiwic291cmNlcyI6WyJAbmd4LWZvcm1seS9tYXRlcmlhbC9kYXRlcGlja2VyL2RhdGVwaWNrZXIudHlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFpQixXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakYsT0FBTyxFQUFFLGlCQUFpQixJQUFJLGdCQUFnQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDekUsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQzVELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUNuRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7O0FBRWxFO0FBR0MsSUFpQ2tELHlEQUFTO0FBQUMsSUFwQzdEO0FBQzhCLFFBRDlCLHFFQWdFQztBQUNELFFBeEJFLG9CQUFjLEdBQUc7QUFDbkIsWUFBSSxlQUFlLEVBQUU7QUFDckIsZ0JBQU0saUJBQWlCLEVBQUU7QUFDekIsb0JBQVEsU0FBUyxFQUFFLE9BQU87QUFDMUIsb0JBQVEsd0JBQXdCLEVBQUUsUUFBUTtBQUMxQyxvQkFBUSxTQUFTO0FBQU87QUFFeEI7QUFBd0Isb0JBRkwsY0FBTyxDQUFDLENBQUE7QUFDM0Isb0JBQVEsVUFBVTtBQUFPO0FBQ0s7QUFDVCxvQkFGRCxjQUFPLENBQUMsQ0FBQTtBQUM1QixvQkFBUSxhQUFhO0FBQU87QUFDRTtBQUs5QixvQkFOdUIsY0FBTyxDQUFDLENBQUE7QUFDL0Isb0JBQVEsWUFBWTtBQUFPO0FBS25CO0FBQ0Usb0JBTlksY0FBTyxDQUFDLENBQUE7QUFDOUIsaUJBQU87QUFDUCxhQUFLO0FBQ0wsU0FBRyxDQUFDO0FBQ0o7QUFDcUIsSUFVckIsQ0FBQztBQUNEO0FBQVE7QUFBbUI7QUFBUSxJQVhqQyx1REFBZTtBQUNmO0FBQW1CO0FBQ3JCLElBRkU7QUFBYyxRQUFkLGlCQVNDO0FBQ0gsUUFUSSxpQkFBTSxlQUFlLFdBQUUsQ0FBQztBQUM1QixRQUFJLHFFQUFxRTtBQUN6RSxRQUFJLENBQUMsbUJBQU0sSUFBSSxDQUFDLGVBQWUsRUFBQSxDQUFDLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUM7QUFDN0QsUUFDSSxVQUFVO0FBQU07QUFDQTtBQUFZLFFBRGpCO0FBQ1QsWUFBQSxnQkFBZ0IsQ0FBQyxLQUFJLENBQUMsS0FBSyxFQUFFLE1BQU0sR0FBRyxLQUFJLENBQUMsRUFBRSxDQUFDLGlCQUFpQixDQUFDLHdCQUF3QixFQUFFLEtBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0FBQ3ZILFlBQU0sQ0FBQyxtQkFBTSxLQUFJLENBQUMsT0FBTyxFQUFBLENBQUMsQ0FBQyxhQUFhLENBQUMsS0FBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ3JELFFBQUksQ0FBQyxFQUFDLENBQUM7QUFDUCxJQUFFLENBQUMsQ0EzQks7QUFBQztZQXBDUixTQUFTLFNBQUMsc0JBQ1QsUUFBUSxFQUFFLDZCQUE2QiwzRkFtQ3FCLG1DQUMzRCxTQUFTLFNBQUMsUUFBUSxFQUFFLG1CQUFNLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxFQUFBO01BbkMzQyxRQUFRLEVBQUUsaEJBbUN3QyxrQ0FDakQsU0FBUyxTQUFDLGtCQUFrQjtBQUFPLG1DQUNuQyxTQUFTLFNBQUMsa0JBQWtCO0FBQU07Ozs7Ozs7Ozs7O3NZQUxsQyxrQkFDRjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFJMEM7QUFBQyxJQXlCNUMsb0NBQUM7QUFDQSxDQURBLEFBaEVELENBb0NtRCxTQUFTLEdBNEIzRDtBQUNELFNBN0JhLDZCQUE2QjtBQUFJO0FBQWE7QUFBcUIsSUFDOUUseURBQXlFO0FBQzNFO0FBQXFCLElBQW5CLHdEQUF5RTtBQUMzRTtBQUFxQixJQUFuQix5REFBbUU7QUFDckU7QUFDb0IsSUFBbEIsdURBV0U7QUFDSjtBQUNDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBWaWV3Q2hpbGQsIEFmdGVyVmlld0luaXQsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyDJtWRlZmluZUhpZGRlblByb3AgYXMgZGVmaW5lSGlkZGVuUHJvcCB9IGZyb20gJ0BuZ3gtZm9ybWx5L2NvcmUnO1xuaW1wb3J0IHsgRmllbGRUeXBlIH0gZnJvbSAnQG5neC1mb3JtbHkvbWF0ZXJpYWwvZm9ybS1maWVsZCc7XG5pbXBvcnQgeyBNYXRJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2lucHV0JztcbmltcG9ydCB7IE1hdERhdGVwaWNrZXJJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2RhdGVwaWNrZXInO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdmb3JtbHktZmllbGQtbWF0LWRhdGVwaWNrZXInLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxpbnB1dCBtYXRJbnB1dFxuICAgICAgW2lkXT1cImlkXCJcbiAgICAgIFtlcnJvclN0YXRlTWF0Y2hlcl09XCJlcnJvclN0YXRlTWF0Y2hlclwiXG4gICAgICBbZm9ybUNvbnRyb2xdPVwiZm9ybUNvbnRyb2xcIlxuICAgICAgW21hdERhdGVwaWNrZXJdPVwicGlja2VyXCJcbiAgICAgIFttYXREYXRlcGlja2VyRmlsdGVyXT1cInRvLmRhdGVwaWNrZXJPcHRpb25zLmZpbHRlclwiXG4gICAgICBbbWF4XT1cInRvLmRhdGVwaWNrZXJPcHRpb25zLm1heFwiXG4gICAgICBbbWluXT1cInRvLmRhdGVwaWNrZXJPcHRpb25zLm1pblwiXG4gICAgICBbZm9ybWx5QXR0cmlidXRlc109XCJmaWVsZFwiXG4gICAgICBbcGxhY2Vob2xkZXJdPVwidG8ucGxhY2Vob2xkZXJcIlxuICAgICAgW3RhYmluZGV4XT1cInRvLnRhYmluZGV4XCJcbiAgICAgIFtyZWFkb25seV09XCJ0by5yZWFkb25seVwiXG4gICAgICBbcmVxdWlyZWRdPVwidG8ucmVxdWlyZWRcIlxuICAgICAgKGRhdGVJbnB1dCk9XCJ0by5kYXRlcGlja2VyT3B0aW9ucy5kYXRlSW5wdXQoZmllbGQsICRldmVudClcIlxuICAgICAgKGRhdGVDaGFuZ2UpPVwidG8uZGF0ZXBpY2tlck9wdGlvbnMuZGF0ZUNoYW5nZShmaWVsZCwgJGV2ZW50KVwiPlxuICAgIDxuZy10ZW1wbGF0ZSAjZGF0ZXBpY2tlclRvZ2dsZT5cbiAgICAgIDxtYXQtZGF0ZXBpY2tlci10b2dnbGUgW2Rpc2FibGVkXT1cInRvLmRpc2FibGVkXCIgW2Zvcl09XCJwaWNrZXJcIj48L21hdC1kYXRlcGlja2VyLXRvZ2dsZT5cbiAgICA8L25nLXRlbXBsYXRlPlxuICAgIDxtYXQtZGF0ZXBpY2tlciAjcGlja2VyXG4gICAgICBbY29sb3JdPVwidG8uY29sb3JcIlxuICAgICAgW2RhdGVDbGFzc109XCJ0by5kYXRlcGlja2VyT3B0aW9ucy5kYXRlQ2xhc3NcIlxuICAgICAgW2Rpc2FibGVkXT1cInRvLmRhdGVwaWNrZXJPcHRpb25zLmRpc2FibGVkXCJcbiAgICAgIFtvcGVuZWRdPVwidG8uZGF0ZXBpY2tlck9wdGlvbnMub3BlbmVkXCJcbiAgICAgIFtwYW5lbENsYXNzXT1cInRvLmRhdGVwaWNrZXJPcHRpb25zLnBhbmVsQ2xhc3NcIlxuICAgICAgW3N0YXJ0QXRdPVwidG8uZGF0ZXBpY2tlck9wdGlvbnMuc3RhcnRBdFwiXG4gICAgICBbc3RhcnRWaWV3XT1cInRvLmRhdGVwaWNrZXJPcHRpb25zLnN0YXJ0Vmlld1wiXG4gICAgICBbdG91Y2hVaV09XCJ0by5kYXRlcGlja2VyT3B0aW9ucy50b3VjaFVpXCJcbiAgICAgIChtb250aFNlbGVjdGVkKT1cInRvLmRhdGVwaWNrZXJPcHRpb25zLm1vbnRoU2VsZWN0ZWQoZmllbGQsICRldmVudCwgcGlja2VyKVwiXG4gICAgICAoeWVhclNlbGVjdGVkKT1cInRvLmRhdGVwaWNrZXJPcHRpb25zLnllYXJTZWxlY3RlZChmaWVsZCwgJGV2ZW50LCBwaWNrZXIpXCJcbiAgICA+XG4gICAgPC9tYXQtZGF0ZXBpY2tlcj5cbiAgYCxcbn0pXG5leHBvcnQgY2xhc3MgRm9ybWx5RGF0ZXBpY2tlclR5cGVDb21wb25lbnQgZXh0ZW5kcyBGaWVsZFR5cGUgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0IHtcbiAgQFZpZXdDaGlsZChNYXRJbnB1dCwgPGFueT4geyBzdGF0aWM6IHRydWUgfSkgZm9ybUZpZWxkQ29udHJvbCE6IE1hdElucHV0O1xuICBAVmlld0NoaWxkKE1hdERhdGVwaWNrZXJJbnB1dCkgZGF0ZXBpY2tlcklucHV0ITogTWF0RGF0ZXBpY2tlcklucHV0PGFueT47XG4gIEBWaWV3Q2hpbGQoJ2RhdGVwaWNrZXJUb2dnbGUnKSBkYXRlcGlja2VyVG9nZ2xlITogVGVtcGxhdGVSZWY8YW55PjtcblxuICBkZWZhdWx0T3B0aW9ucyA9IHtcbiAgICB0ZW1wbGF0ZU9wdGlvbnM6IHtcbiAgICAgIGRhdGVwaWNrZXJPcHRpb25zOiB7XG4gICAgICAgIHN0YXJ0VmlldzogJ21vbnRoJyxcbiAgICAgICAgZGF0ZXBpY2tlclRvZ2dsZVBvc2l0aW9uOiAnc3VmZml4JyxcbiAgICAgICAgZGF0ZUlucHV0OiAoKSA9PiB7fSxcbiAgICAgICAgZGF0ZUNoYW5nZTogKCkgPT4ge30sXG4gICAgICAgIG1vbnRoU2VsZWN0ZWQ6ICgpID0+IHt9LFxuICAgICAgICB5ZWFyU2VsZWN0ZWQ6ICgpID0+IHt9LFxuICAgICAgfSxcbiAgICB9LFxuICB9O1xuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICBzdXBlci5uZ0FmdGVyVmlld0luaXQoKTtcbiAgICAvLyB0ZW1wb3JhcnkgZml4IGZvciBodHRwczovL2dpdGh1Yi5jb20vYW5ndWxhci9tYXRlcmlhbDIvaXNzdWVzLzY3MjhcbiAgICAoPGFueT4gdGhpcy5kYXRlcGlja2VySW5wdXQpLl9mb3JtRmllbGQgPSB0aGlzLmZvcm1GaWVsZDtcblxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgZGVmaW5lSGlkZGVuUHJvcCh0aGlzLmZpZWxkLCAnX21hdCcgKyB0aGlzLnRvLmRhdGVwaWNrZXJPcHRpb25zLmRhdGVwaWNrZXJUb2dnbGVQb3NpdGlvbiwgdGhpcy5kYXRlcGlja2VyVG9nZ2xlKTtcbiAgICAgICg8YW55PiB0aGlzLm9wdGlvbnMpLl9tYXJrRm9yQ2hlY2sodGhpcy5maWVsZCk7XG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==