/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
import { FieldType } from './field.type';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '../components/formly.field';

function FormlyGroup_formly_field_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "formly-field", 1);
} if (rf & 2) {
    const f_r1 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("field", f_r1);
} }
const _c0 = ["*"];
export class FormlyGroup extends FieldType {
    constructor() {
        super(...arguments);
        this.defaultOptions = {
            defaultValue: {},
        };
    }
}
FormlyGroup.ɵfac = function FormlyGroup_Factory(t) { return ɵFormlyGroup_BaseFactory(t || FormlyGroup); };
FormlyGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FormlyGroup, selectors: [["formly-group"]], hostVars: 2, hostBindings: function FormlyGroup_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.field.fieldGroupClassName || "");
    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 1, consts: [[3, "field", 4, "ngFor", "ngForOf"], [3, "field"]], template: function FormlyGroup_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, FormlyGroup_formly_field_0_Template, 1, 1, "formly-field", 0);
        ɵngcc0.ɵɵprojection(1);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngForOf", ctx.field.fieldGroup);
    } }, directives: [ɵngcc1.NgForOf, ɵngcc2.FormlyField], encapsulation: 2 });
const ɵFormlyGroup_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(FormlyGroup);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormlyGroup, [{
        type: Component,
        args: [{
                selector: 'formly-group',
                template: `
    <formly-field *ngFor="let f of field.fieldGroup" [field]="f"></formly-field>
    <ng-content></ng-content>
  `,
                host: {
                    '[class]': 'field.fieldGroupClassName || ""'
                }
            }]
    }], null, null); })();
if (false) {
    /** @type {?} */
    FormlyGroup.prototype.defaultOptions;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWx5Lmdyb3VwLmpzIiwic291cmNlcyI6WyJAbmd4LWZvcm1seS9jb3JlL2xpYi90ZW1wbGF0ZXMvZm9ybWx5Lmdyb3VwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFDLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxjQUFjLENBQUM7Ozs7Ozs7Ozs7OztBQVl6QyxNQUFNLE9BQU8sV0FBWSxTQUFRLFNBQVM7QUFDMUMsSUFYQTtBQUNHO0FBQ0MsUUFTRixtQkFBYyxHQUFHO0FBQ25CLFlBQUksWUFBWSxFQUFFLEVBQUU7QUFDcEIsU0FBRyxDQUFDO0FBQ0osSUFBQSxDQUFDO0FBQ0Q7dUNBZkMsU0FBUyxTQUFDLGtCQUNULFFBQVEsRUFBRSxjQUFjO1VBQ3hCLFFBQVEsRUFBRSxvSEFHVCxrQkFDRCxJQUFJLEVBQUU7QUFDSixTQUFTLEVBQUUsaUNBQWlDLG1CQUM3QzthQUNGOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQkFDRztBQUFDO0FBQWE7QUFBcUIsSUFDckMscUNBRUU7QUFDSjtBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGaWVsZFR5cGUgfSBmcm9tICcuL2ZpZWxkLnR5cGUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdmb3JtbHktZ3JvdXAnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxmb3JtbHktZmllbGQgKm5nRm9yPVwibGV0IGYgb2YgZmllbGQuZmllbGRHcm91cFwiIFtmaWVsZF09XCJmXCI+PC9mb3JtbHktZmllbGQ+XG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICBgLFxuICBob3N0OiB7XG4gICAgJ1tjbGFzc10nOiAnZmllbGQuZmllbGRHcm91cENsYXNzTmFtZSB8fCBcIlwiJyxcbiAgfSxcbn0pXG5leHBvcnQgY2xhc3MgRm9ybWx5R3JvdXAgZXh0ZW5kcyBGaWVsZFR5cGUge1xuICBkZWZhdWx0T3B0aW9ucyA9IHtcbiAgICBkZWZhdWx0VmFsdWU6IHt9LFxuICB9O1xufVxuIl19