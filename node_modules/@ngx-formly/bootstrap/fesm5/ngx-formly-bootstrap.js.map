{"version":3,"file":"ngx-formly-bootstrap.js","sources":["@ngx-formly/bootstrap/lib/types/checkbox.ts","@ngx-formly/bootstrap/lib/types/multicheckbox.ts","@ngx-formly/bootstrap/lib/types/input.ts","@ngx-formly/bootstrap/lib/types/radio.ts","@ngx-formly/bootstrap/lib/types/textarea.ts","@ngx-formly/bootstrap/lib/types/select.ts","@ngx-formly/bootstrap/lib/wrappers/form-field.wrapper.ts","@ngx-formly/bootstrap/lib/bootstrap.config.ts","@ngx-formly/bootstrap/lib/bootstrap.module.ts"],"names":["tslib_1.__extends","tslib_1.__spread"],"mappings":"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":["import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-field-checkbox',\n  template: `\n    <div [ngClass]=\"{\n      'form-check': to.formCheck.indexOf('custom') === -1,\n      'form-check-inline': to.formCheck === 'inline',\n      'custom-control': to.formCheck.indexOf('custom') === 0,\n      'custom-checkbox': to.formCheck === 'custom' || to.formCheck === 'custom-inline',\n      'custom-control-inline': to.formCheck === 'custom-inline',\n      'custom-switch': to.formCheck === 'custom-switch'\n    }\">\n      <input type=\"checkbox\"\n        [class.is-invalid]=\"showError\"\n        [class.form-check-input]=\"to.formCheck.indexOf('custom') === -1\"\n        [class.position-static]=\"to.formCheck === 'nolabel'\"\n        [class.custom-control-input]=\"to.formCheck.indexOf('custom') === 0\"\n        [indeterminate]=\"to.indeterminate && formControl.value === null\"\n        [formControl]=\"formControl\"\n        [formlyAttributes]=\"field\">\n      <label [for]=\"id\"\n        *ngIf=\"to.formCheck !== 'nolabel'\"\n        [class.form-check-label]=\"to.formCheck.indexOf('custom') === -1\"\n        [class.custom-control-label]=\"to.formCheck.indexOf('custom') === 0\"\n      >\n        {{ to.label }}\n        <span *ngIf=\"to.required && to.hideRequiredMarker !== true\">*</span>\n      </label>\n    </div>\n  `,\n})\nexport class FormlyFieldCheckbox extends FieldType {\n  defaultOptions = {\n    templateOptions: {\n      indeterminate: true,\n      hideLabel: true,\n      formCheck: 'custom', // 'custom' | 'custom-inline' | 'custom-switch' | 'stacked' | 'inline' | 'nolabel'\n    },\n  };\n}\n","import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-field-multicheckbox',\n  template: `\n    <div>\n      <div *ngFor=\"let option of to.options | formlySelectOptions:field | async; let i = index;\"\n        [ngClass]=\"{\n          'form-check': to.formCheck.indexOf('custom') === -1,\n          'form-check-inline': to.formCheck === 'inline',\n          'custom-control': to.formCheck.indexOf('custom') === 0,\n          'custom-checkbox': to.formCheck === 'custom' || to.formCheck === 'custom-inline',\n          'custom-control-inline': to.formCheck === 'custom-inline',\n          'custom-switch': to.formCheck === 'custom-switch'\n        }\"\n      >\n        <input type=\"checkbox\"\n          [id]=\"id + '_' + i\"\n          [class.form-check-input]=\"to.formCheck.indexOf('custom') === -1\"\n          [class.custom-control-input]=\"to.formCheck.indexOf('custom') === 0\"\n          [value]=\"option.value\"\n          [checked]=\"isChecked(option)\"\n          [formlyAttributes]=\"field\"\n          (change)=\"onChange(option.value, $event.target.checked)\">\n        <label\n          [class.form-check-label]=\"to.formCheck.indexOf('custom') === -1\"\n          [class.custom-control-label]=\"to.formCheck.indexOf('custom') === 0\"\n          [for]=\"id + '_' + i\">\n          {{ option.label }}\n        </label>\n      </div>\n    </div>\n  `,\n})\nexport class FormlyFieldMultiCheckbox extends FieldType {\n  defaultOptions = {\n    templateOptions: {\n      options: [],\n      formCheck: 'custom', // 'custom' | 'custom-inline' | 'custom-switch' | 'stacked' | 'inline'\n    },\n  };\n\n  onChange(value: any, checked: boolean) {\n    if (this.to.type === 'array') {\n      this.formControl.patchValue(checked\n        ? [...(this.formControl.value || []), value]\n        : [...(this.formControl.value || [])].filter(o => o !== value),\n      );\n    } else {\n      this.formControl.patchValue({ ...this.formControl.value, [value]: checked });\n    }\n    this.formControl.markAsTouched();\n  }\n\n  isChecked(option: any) {\n    const value = this.formControl.value;\n\n    return value && (\n      this.to.type === 'array'\n        ? (value.indexOf(option.value) !== -1)\n        : value[option.value]\n    );\n  }\n}\n","import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-field-input',\n  template: `\n    <input *ngIf=\"type !== 'number' else numberTmp\" [type]=\"type\" [formControl]=\"formControl\" class=\"form-control\" [formlyAttributes]=\"field\" [class.is-invalid]=\"showError\">\n    <ng-template #numberTmp>\n      <input type=\"number\" [formControl]=\"formControl\" class=\"form-control\" [formlyAttributes]=\"field\" [class.is-invalid]=\"showError\">\n    </ng-template>\n  `,\n})\nexport class FormlyFieldInput extends FieldType {\n  get type() {\n    return this.to.type || 'text';\n  }\n}\n","import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-field-radio',\n  template: `\n    <div>\n      <div *ngFor=\"let option of to.options | formlySelectOptions:field | async; let i = index;\"\n        [ngClass]=\"{\n          'form-check': to.formCheck.indexOf('custom') === -1,\n          'form-check-inline': to.formCheck === 'inline',\n          'custom-control custom-radio': to.formCheck.indexOf('custom') === 0,\n          'custom-control-inline': to.formCheck === 'custom-inline'\n        }\"\n      >\n        <input type=\"radio\"\n          [id]=\"id + '_' + i\"\n          [class.form-check-input]=\"to.formCheck.indexOf('custom') === -1\"\n          [class.custom-control-input]=\"to.formCheck.indexOf('custom') === 0\"\n          [name]=\"field.name || id\"\n          [class.is-invalid]=\"showError\"\n          [attr.value]=\"option.value\"\n          [value]=\"option.value\"\n          [formControl]=\"formControl\"\n          [formlyAttributes]=\"field\"\n          [attr.disabled]=\"option.disabled || formControl.disabled ? true : null\">\n        <label\n          [class.form-check-label]=\"to.formCheck.indexOf('custom') === -1\"\n          [class.custom-control-label]=\"to.formCheck.indexOf('custom') === 0\"\n          [for]=\"id + '_' + i\">\n          {{ option.label }}\n        </label>\n      </div>\n    </div>\n  `,\n})\nexport class FormlyFieldRadio extends FieldType {\n  defaultOptions = {\n    templateOptions: {\n      options: [],\n      formCheck: 'custom', // 'custom' | 'custom-inline' | 'stacked' | 'inline'\n    },\n  };\n}\n","import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-field-textarea',\n  template: `\n    <textarea [formControl]=\"formControl\" [cols]=\"to.cols\"\n      [rows]=\"to.rows\" class=\"form-control\" [class.is-invalid]=\"showError\"\n      [formlyAttributes]=\"field\">\n    </textarea>\n  `,\n})\nexport class FormlyFieldTextArea extends FieldType {\n  defaultOptions = {\n    templateOptions: {\n      cols: 1,\n      rows: 1,\n    },\n  };\n}\n","import { Component, ViewChild, NgZone } from '@angular/core';\nimport { SelectControlValueAccessor } from '@angular/forms';\nimport { FieldType } from '@ngx-formly/core';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'formly-field-select',\n  template: `\n    <select *ngIf=\"to.multiple; else singleSelect\" class=\"form-control\"\n      multiple\n      [class.custom-select]=\"to.customSelect\"\n      [formControl]=\"formControl\"\n      [compareWith]=\"to.compareWith\"\n      [class.is-invalid]=\"showError\"\n      [formlyAttributes]=\"field\">\n      <ng-container *ngIf=\"to.options | formlySelectOptions:field | async as opts\">\n        <ng-container *ngIf=\"to._flatOptions else grouplist\">\n          <ng-container *ngFor=\"let opt of opts\">\n            <option [ngValue]=\"opt.value\" [disabled]=\"opt.disabled\">{{ opt.label }}</option>\n          </ng-container>\n        </ng-container>\n\n        <ng-template #grouplist>\n          <ng-container *ngFor=\"let opt of opts\">\n            <option *ngIf=\"!opt.group else optgroup\" [ngValue]=\"opt.value\" [disabled]=\"opt.disabled\">{{ opt.label }}</option>\n            <ng-template #optgroup>\n              <optgroup [label]=\"opt.label\">\n                <option *ngFor=\"let child of opt.group\" [ngValue]=\"child.value\" [disabled]=\"child.disabled\">\n                  {{ child.label }}\n                </option>\n              </optgroup>\n            </ng-template>\n          </ng-container>\n        </ng-template>\n      </ng-container>\n    </select>\n\n    <ng-template #singleSelect>\n      <select class=\"form-control\"\n        [formControl]=\"formControl\"\n        [compareWith]=\"to.compareWith\"\n        [class.custom-select]=\"to.customSelect\"\n        [class.is-invalid]=\"showError\"\n        [formlyAttributes]=\"field\">\n        <option *ngIf=\"to.placeholder\" [ngValue]=\"null\">{{ to.placeholder }}</option>\n        <ng-container *ngIf=\"to.options | formlySelectOptions:field | async as opts\">\n          <ng-container *ngIf=\"to._flatOptions else grouplist\">\n            <ng-container *ngFor=\"let opt of opts\">\n              <option [ngValue]=\"opt.value\" [disabled]=\"opt.disabled\">{{ opt.label }}</option>\n            </ng-container>\n          </ng-container>\n\n          <ng-template #grouplist>\n            <ng-container *ngFor=\"let opt of opts\">\n              <option *ngIf=\"!opt.group else optgroup\" [ngValue]=\"opt.value\" [disabled]=\"opt.disabled\">{{ opt.label }}</option>\n              <ng-template #optgroup>\n                <optgroup [label]=\"opt.label\">\n                  <option *ngFor=\"let child of opt.group\" [ngValue]=\"child.value\" [disabled]=\"child.disabled\">\n                    {{ child.label }}\n                  </option>\n                </optgroup>\n              </ng-template>\n            </ng-container>\n          </ng-template>\n        </ng-container>\n      </select>\n    </ng-template>\n  `,\n})\nexport class FormlyFieldSelect extends FieldType {\n  defaultOptions = {\n    templateOptions: {\n      options: [],\n      compareWith(o1: any, o2: any) {\n        return o1 === o2;\n      },\n    },\n  };\n\n  // workaround for https://github.com/angular/angular/issues/10010\n  @ViewChild(SelectControlValueAccessor) set selectAccessor(s: any) {\n    if (!s) return;\n\n    const writeValue = s.writeValue.bind(s);\n    if (s._getOptionId(s.value) === null) {\n      writeValue(s.value);\n    }\n\n    s.writeValue = (value: any) => {\n      const id = s._idCounter;\n      writeValue(value);\n      if (value === null) {\n        this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n          if (id !== s._idCounter && s._getOptionId(value) === null && s._elementRef.nativeElement.selectedIndex !== -1) {\n            writeValue(value);\n          }\n        });\n      }\n    };\n  }\n\n  constructor(private ngZone: NgZone) {\n    super();\n  }\n}\n","import { Component } from '@angular/core';\nimport { FieldWrapper } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-wrapper-form-field',\n  template: `\n    <div class=\"form-group\" [class.has-error]=\"showError\">\n      <label *ngIf=\"to.label && to.hideLabel !== true\" [attr.for]=\"id\">\n        {{ to.label }}\n        <span *ngIf=\"to.required && to.hideRequiredMarker !== true\">*</span>\n      </label>\n\n      <ng-template #fieldComponent></ng-template>\n\n      <div *ngIf=\"showError\" class=\"invalid-feedback\" [style.display]=\"'block'\">\n        <formly-validation-message [field]=\"field\"></formly-validation-message>\n      </div>\n\n      <small *ngIf=\"to.description\" class=\"form-text text-muted\">{{ to.description }}</small>\n    </div>\n  `,\n})\nexport class FormlyWrapperFormField extends FieldWrapper {\n}\n","import { ConfigOption } from '@ngx-formly/core';\nimport {\n  FormlyFieldInput,\n  FormlyFieldCheckbox,\n  FormlyFieldRadio,\n  FormlyFieldSelect,\n  FormlyFieldTextArea,\n  FormlyFieldMultiCheckbox,\n} from './types/types';\nimport { FormlyWrapperFormField } from './wrappers/wrappers';\n\nexport const FIELD_TYPE_COMPONENTS = [\n  // types\n  FormlyFieldInput,\n  FormlyFieldCheckbox,\n  FormlyFieldRadio,\n  FormlyFieldSelect,\n  FormlyFieldTextArea,\n  FormlyFieldMultiCheckbox,\n\n  // wrappers\n  FormlyWrapperFormField,\n];\n\nexport const BOOTSTRAP_FORMLY_CONFIG: ConfigOption = {\n  types: [\n    {\n      name: 'input',\n      component: FormlyFieldInput,\n      wrappers: ['form-field'],\n    },\n    {\n      name: 'checkbox',\n      component: FormlyFieldCheckbox,\n      wrappers: ['form-field'],\n    },\n    {\n      name: 'radio',\n      component: FormlyFieldRadio,\n      wrappers: ['form-field'],\n    },\n    {\n      name: 'select',\n      component: FormlyFieldSelect,\n      wrappers: ['form-field'],\n    },\n    {\n      name: 'textarea',\n      component: FormlyFieldTextArea,\n      wrappers: ['form-field'],\n    },\n    {\n      name: 'multicheckbox',\n      component: FormlyFieldMultiCheckbox,\n      wrappers: ['form-field'],\n    },\n  ],\n  wrappers: [\n    {name: 'form-field', component: FormlyWrapperFormField },\n  ],\n};\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { FormlySelectModule } from '@ngx-formly/core/select';\nimport { BOOTSTRAP_FORMLY_CONFIG, FIELD_TYPE_COMPONENTS } from './bootstrap.config';\nimport { FormlyBootstrapAddonsModule } from '@ngx-formly/bootstrap/addons';\n\n@NgModule({\n  declarations: [\n    FIELD_TYPE_COMPONENTS,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormlySelectModule,\n    FormlyModule.forChild(BOOTSTRAP_FORMLY_CONFIG),\n    FormlyBootstrapAddonsModule,\n  ],\n})\nexport class FormlyBootstrapModule {}\n"]}