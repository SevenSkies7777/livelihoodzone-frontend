/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
import { FieldType } from '@ngx-formly/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '@angular/forms';
import * as ɵngcc3 from '@ngx-formly/core';

function FormlyFieldCheckbox_label_2_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1, "*");
    ɵngcc0.ɵɵelementEnd();
} }
function FormlyFieldCheckbox_label_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "label", 3);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵtemplate(2, FormlyFieldCheckbox_label_2_span_2_Template, 2, 0, "span", 4);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("form-check-label", ctx_r0.to.formCheck.indexOf("custom") === -1)("custom-control-label", ctx_r0.to.formCheck.indexOf("custom") === 0);
    ɵngcc0.ɵɵproperty("for", ctx_r0.id);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.to.label, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.to.required && ctx_r0.to.hideRequiredMarker !== true);
} }
const _c0 = function (a0, a1, a2, a3, a4, a5) { return { "form-check": a0, "form-check-inline": a1, "custom-control": a2, "custom-checkbox": a3, "custom-control-inline": a4, "custom-switch": a5 }; };
export class FormlyFieldCheckbox extends FieldType {
    constructor() {
        super(...arguments);
        this.defaultOptions = {
            templateOptions: {
                indeterminate: true,
                hideLabel: true,
                formCheck: 'custom',
            },
        };
    }
}
FormlyFieldCheckbox.ɵfac = function FormlyFieldCheckbox_Factory(t) { return ɵFormlyFieldCheckbox_BaseFactory(t || FormlyFieldCheckbox); };
FormlyFieldCheckbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FormlyFieldCheckbox, selectors: [["formly-field-checkbox"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 20, consts: [[3, "ngClass"], ["type", "checkbox", 3, "indeterminate", "formControl", "formlyAttributes"], [3, "for", "form-check-label", "custom-control-label", 4, "ngIf"], [3, "for"], [4, "ngIf"]], template: function FormlyFieldCheckbox_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelement(1, "input", 1);
        ɵngcc0.ɵɵtemplate(2, FormlyFieldCheckbox_label_2_Template, 3, 7, "label", 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction6(13, _c0, ctx.to.formCheck.indexOf("custom") === -1, ctx.to.formCheck === "inline", ctx.to.formCheck.indexOf("custom") === 0, ctx.to.formCheck === "custom" || ctx.to.formCheck === "custom-inline", ctx.to.formCheck === "custom-inline", ctx.to.formCheck === "custom-switch"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassProp("is-invalid", ctx.showError)("form-check-input", ctx.to.formCheck.indexOf("custom") === -1)("position-static", ctx.to.formCheck === "nolabel")("custom-control-input", ctx.to.formCheck.indexOf("custom") === 0);
        ɵngcc0.ɵɵproperty("indeterminate", ctx.to.indeterminate && ctx.formControl.value === null)("formControl", ctx.formControl)("formlyAttributes", ctx.field);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.to.formCheck !== "nolabel");
    } }, directives: [ɵngcc1.NgClass, ɵngcc2.CheckboxControlValueAccessor, ɵngcc2.NgControlStatus, ɵngcc2.FormControlDirective, ɵngcc3.FormlyAttributes, ɵngcc1.NgIf], encapsulation: 2 });
const ɵFormlyFieldCheckbox_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(FormlyFieldCheckbox);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormlyFieldCheckbox, [{
        type: Component,
        args: [{
                selector: 'formly-field-checkbox',
                template: `
    <div [ngClass]="{
      'form-check': to.formCheck.indexOf('custom') === -1,
      'form-check-inline': to.formCheck === 'inline',
      'custom-control': to.formCheck.indexOf('custom') === 0,
      'custom-checkbox': to.formCheck === 'custom' || to.formCheck === 'custom-inline',
      'custom-control-inline': to.formCheck === 'custom-inline',
      'custom-switch': to.formCheck === 'custom-switch'
    }">
      <input type="checkbox"
        [class.is-invalid]="showError"
        [class.form-check-input]="to.formCheck.indexOf('custom') === -1"
        [class.position-static]="to.formCheck === 'nolabel'"
        [class.custom-control-input]="to.formCheck.indexOf('custom') === 0"
        [indeterminate]="to.indeterminate && formControl.value === null"
        [formControl]="formControl"
        [formlyAttributes]="field">
      <label [for]="id"
        *ngIf="to.formCheck !== 'nolabel'"
        [class.form-check-label]="to.formCheck.indexOf('custom') === -1"
        [class.custom-control-label]="to.formCheck.indexOf('custom') === 0"
      >
        {{ to.label }}
        <span *ngIf="to.required && to.hideRequiredMarker !== true">*</span>
      </label>
    </div>
  `
            }]
    }], null, null); })();
if (false) {
    /** @type {?} */
    FormlyFieldCheckbox.prototype.defaultOptions;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tib3guanMiLCJzb3VyY2VzIjpbIkBuZ3gtZm9ybWx5L2Jvb3RzdHJhcC9saWIvdHlwZXMvY2hlY2tib3gudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUMsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGtCQUFrQixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWdDN0MsTUFBTSxPQUFPLG1CQUFvQixTQUFRLFNBQVM7QUFDbEQsSUEvQkE7QUFDRztBQUE2QixRQThCOUIsbUJBQWMsR0FBRztBQUNuQixZQUFJLGVBQWUsRUFBRTtBQUNyQixnQkFBTSxhQUFhLEVBQUUsSUFBSTtBQUN6QixnQkFBTSxTQUFTLEVBQUUsSUFBSTtBQUNyQixnQkFBTSxTQUFTLEVBQUUsUUFBUTtBQUFFLGFBQ3RCO0FBQ0wsU0FBRyxDQUFDO0FBQ0osSUFBQSxDQUFDO0FBQ0Q7K0NBdkNDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUUsdUJBQXVCLGtCQUNqQztHQUFRLEVBQUU7Ozs7Ozs7OzRKQTBCVCxjQUNGOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQkFDRztBQUFDO0FBQWE7QUFBcUIsSUFDckMsNkNBTUU7QUFDSjtBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGaWVsZFR5cGUgfSBmcm9tICdAbmd4LWZvcm1seS9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZm9ybWx5LWZpZWxkLWNoZWNrYm94JyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8ZGl2IFtuZ0NsYXNzXT1cIntcbiAgICAgICdmb3JtLWNoZWNrJzogdG8uZm9ybUNoZWNrLmluZGV4T2YoJ2N1c3RvbScpID09PSAtMSxcbiAgICAgICdmb3JtLWNoZWNrLWlubGluZSc6IHRvLmZvcm1DaGVjayA9PT0gJ2lubGluZScsXG4gICAgICAnY3VzdG9tLWNvbnRyb2wnOiB0by5mb3JtQ2hlY2suaW5kZXhPZignY3VzdG9tJykgPT09IDAsXG4gICAgICAnY3VzdG9tLWNoZWNrYm94JzogdG8uZm9ybUNoZWNrID09PSAnY3VzdG9tJyB8fCB0by5mb3JtQ2hlY2sgPT09ICdjdXN0b20taW5saW5lJyxcbiAgICAgICdjdXN0b20tY29udHJvbC1pbmxpbmUnOiB0by5mb3JtQ2hlY2sgPT09ICdjdXN0b20taW5saW5lJyxcbiAgICAgICdjdXN0b20tc3dpdGNoJzogdG8uZm9ybUNoZWNrID09PSAnY3VzdG9tLXN3aXRjaCdcbiAgICB9XCI+XG4gICAgICA8aW5wdXQgdHlwZT1cImNoZWNrYm94XCJcbiAgICAgICAgW2NsYXNzLmlzLWludmFsaWRdPVwic2hvd0Vycm9yXCJcbiAgICAgICAgW2NsYXNzLmZvcm0tY2hlY2staW5wdXRdPVwidG8uZm9ybUNoZWNrLmluZGV4T2YoJ2N1c3RvbScpID09PSAtMVwiXG4gICAgICAgIFtjbGFzcy5wb3NpdGlvbi1zdGF0aWNdPVwidG8uZm9ybUNoZWNrID09PSAnbm9sYWJlbCdcIlxuICAgICAgICBbY2xhc3MuY3VzdG9tLWNvbnRyb2wtaW5wdXRdPVwidG8uZm9ybUNoZWNrLmluZGV4T2YoJ2N1c3RvbScpID09PSAwXCJcbiAgICAgICAgW2luZGV0ZXJtaW5hdGVdPVwidG8uaW5kZXRlcm1pbmF0ZSAmJiBmb3JtQ29udHJvbC52YWx1ZSA9PT0gbnVsbFwiXG4gICAgICAgIFtmb3JtQ29udHJvbF09XCJmb3JtQ29udHJvbFwiXG4gICAgICAgIFtmb3JtbHlBdHRyaWJ1dGVzXT1cImZpZWxkXCI+XG4gICAgICA8bGFiZWwgW2Zvcl09XCJpZFwiXG4gICAgICAgICpuZ0lmPVwidG8uZm9ybUNoZWNrICE9PSAnbm9sYWJlbCdcIlxuICAgICAgICBbY2xhc3MuZm9ybS1jaGVjay1sYWJlbF09XCJ0by5mb3JtQ2hlY2suaW5kZXhPZignY3VzdG9tJykgPT09IC0xXCJcbiAgICAgICAgW2NsYXNzLmN1c3RvbS1jb250cm9sLWxhYmVsXT1cInRvLmZvcm1DaGVjay5pbmRleE9mKCdjdXN0b20nKSA9PT0gMFwiXG4gICAgICA+XG4gICAgICAgIHt7IHRvLmxhYmVsIH19XG4gICAgICAgIDxzcGFuICpuZ0lmPVwidG8ucmVxdWlyZWQgJiYgdG8uaGlkZVJlcXVpcmVkTWFya2VyICE9PSB0cnVlXCI+Kjwvc3Bhbj5cbiAgICAgIDwvbGFiZWw+XG4gICAgPC9kaXY+XG4gIGAsXG59KVxuZXhwb3J0IGNsYXNzIEZvcm1seUZpZWxkQ2hlY2tib3ggZXh0ZW5kcyBGaWVsZFR5cGUge1xuICBkZWZhdWx0T3B0aW9ucyA9IHtcbiAgICB0ZW1wbGF0ZU9wdGlvbnM6IHtcbiAgICAgIGluZGV0ZXJtaW5hdGU6IHRydWUsXG4gICAgICBoaWRlTGFiZWw6IHRydWUsXG4gICAgICBmb3JtQ2hlY2s6ICdjdXN0b20nLCAvLyAnY3VzdG9tJyB8ICdjdXN0b20taW5saW5lJyB8ICdjdXN0b20tc3dpdGNoJyB8ICdzdGFja2VkJyB8ICdpbmxpbmUnIHwgJ25vbGFiZWwnXG4gICAgfSxcbiAgfTtcbn1cbiJdfQ==