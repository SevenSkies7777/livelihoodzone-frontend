/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
import { FieldType } from '@ngx-formly/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '@angular/forms';
import * as ɵngcc3 from '@ngx-formly/core';
import * as ɵngcc4 from '@ngx-formly/core/select';

const _c0 = function (a0, a1, a2, a3) { return { "form-check": a0, "form-check-inline": a1, "custom-control custom-radio": a2, "custom-control-inline": a3 }; };
function FormlyFieldRadio_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵelement(1, "input", 2);
    ɵngcc0.ɵɵelementStart(2, "label", 3);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const option_r1 = ctx.$implicit;
    const i_r2 = ctx.index;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction4(20, _c0, ctx_r0.to.formCheck.indexOf("custom") === -1, ctx_r0.to.formCheck === "inline", ctx_r0.to.formCheck.indexOf("custom") === 0, ctx_r0.to.formCheck === "custom-inline"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassProp("form-check-input", ctx_r0.to.formCheck.indexOf("custom") === -1)("custom-control-input", ctx_r0.to.formCheck.indexOf("custom") === 0)("is-invalid", ctx_r0.showError);
    ɵngcc0.ɵɵproperty("id", ctx_r0.id + "_" + i_r2)("name", ctx_r0.field.name || ctx_r0.id)("value", option_r1.value)("formControl", ctx_r0.formControl)("formlyAttributes", ctx_r0.field);
    ɵngcc0.ɵɵattribute("value", option_r1.value)("disabled", option_r1.disabled || ctx_r0.formControl.disabled ? true : null);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassProp("form-check-label", ctx_r0.to.formCheck.indexOf("custom") === -1)("custom-control-label", ctx_r0.to.formCheck.indexOf("custom") === 0);
    ɵngcc0.ɵɵproperty("for", ctx_r0.id + "_" + i_r2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", option_r1.label, " ");
} }
export class FormlyFieldRadio extends FieldType {
    constructor() {
        super(...arguments);
        this.defaultOptions = {
            templateOptions: {
                options: [],
                formCheck: 'custom',
            },
        };
    }
}
FormlyFieldRadio.ɵfac = function FormlyFieldRadio_Factory(t) { return ɵFormlyFieldRadio_BaseFactory(t || FormlyFieldRadio); };
FormlyFieldRadio.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FormlyFieldRadio, selectors: [["formly-field-radio"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 4, vars: 6, consts: [[3, "ngClass", 4, "ngFor", "ngForOf"], [3, "ngClass"], ["type", "radio", 3, "id", "name", "value", "formControl", "formlyAttributes"], [3, "for"]], template: function FormlyFieldRadio_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵtemplate(1, FormlyFieldRadio_div_1_Template, 4, 25, "div", 0);
        ɵngcc0.ɵɵpipe(2, "async");
        ɵngcc0.ɵɵpipe(3, "formlySelectOptions");
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(2, 1, ɵngcc0.ɵɵpipeBind2(3, 3, ctx.to.options, ctx.field)));
    } }, directives: [ɵngcc1.NgForOf, ɵngcc1.NgClass, ɵngcc2.RadioControlValueAccessor, ɵngcc2.DefaultValueAccessor, ɵngcc2.NgControlStatus, ɵngcc2.FormControlDirective, ɵngcc3.FormlyAttributes], pipes: [ɵngcc1.AsyncPipe, ɵngcc4.ɵa], encapsulation: 2 });
const ɵFormlyFieldRadio_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(FormlyFieldRadio);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormlyFieldRadio, [{
        type: Component,
        args: [{
                selector: 'formly-field-radio',
                template: `
    <div>
      <div *ngFor="let option of to.options | formlySelectOptions:field | async; let i = index;"
        [ngClass]="{
          'form-check': to.formCheck.indexOf('custom') === -1,
          'form-check-inline': to.formCheck === 'inline',
          'custom-control custom-radio': to.formCheck.indexOf('custom') === 0,
          'custom-control-inline': to.formCheck === 'custom-inline'
        }"
      >
        <input type="radio"
          [id]="id + '_' + i"
          [class.form-check-input]="to.formCheck.indexOf('custom') === -1"
          [class.custom-control-input]="to.formCheck.indexOf('custom') === 0"
          [name]="field.name || id"
          [class.is-invalid]="showError"
          [attr.value]="option.value"
          [value]="option.value"
          [formControl]="formControl"
          [formlyAttributes]="field"
          [attr.disabled]="option.disabled || formControl.disabled ? true : null">
        <label
          [class.form-check-label]="to.formCheck.indexOf('custom') === -1"
          [class.custom-control-label]="to.formCheck.indexOf('custom') === 0"
          [for]="id + '_' + i">
          {{ option.label }}
        </label>
      </div>
    </div>
  `
            }]
    }], null, null); })();
if (false) {
    /** @type {?} */
    FormlyFieldRadio.prototype.defaultOptions;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFkaW8uanMiLCJzb3VyY2VzIjpbIkBuZ3gtZm9ybWx5L2Jvb3RzdHJhcC9saWIvdHlwZXMvcmFkaW8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUMsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGtCQUFrQixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFtQzdDLE1BQU0sT0FBTyxnQkFBaUIsU0FBUSxTQUFTO0FBQy9DLElBbENBO0FBQ0c7QUFBNkIsUUFpQzlCLG1CQUFjLEdBQUc7QUFDbkIsWUFBSSxlQUFlLEVBQUU7QUFDckIsZ0JBQU0sT0FBTyxFQUFFLEVBQUU7QUFDakIsZ0JBQU0sU0FBUyxFQUFFLFFBQVE7QUFBRSxhQUN0QjtBQUNMLFNBQUcsQ0FBQztBQUNKLElBQUEsQ0FBQztBQUNEOzRDQXpDQyxTQUFTLFNBQUMsa0JBQ1QsUUFBUSxFQUFFLG9CQUFvQjtDQUM5QixRQUFRLEVBQUU7Ozs7Ozs7Ozs7O3dEQTZCVCxjQUNGOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQkFDRztBQUFDO0FBQWE7QUFBcUIsSUFDckMsMENBS0U7QUFDSjtBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGaWVsZFR5cGUgfSBmcm9tICdAbmd4LWZvcm1seS9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZm9ybWx5LWZpZWxkLXJhZGlvJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8ZGl2PlxuICAgICAgPGRpdiAqbmdGb3I9XCJsZXQgb3B0aW9uIG9mIHRvLm9wdGlvbnMgfCBmb3JtbHlTZWxlY3RPcHRpb25zOmZpZWxkIHwgYXN5bmM7IGxldCBpID0gaW5kZXg7XCJcbiAgICAgICAgW25nQ2xhc3NdPVwie1xuICAgICAgICAgICdmb3JtLWNoZWNrJzogdG8uZm9ybUNoZWNrLmluZGV4T2YoJ2N1c3RvbScpID09PSAtMSxcbiAgICAgICAgICAnZm9ybS1jaGVjay1pbmxpbmUnOiB0by5mb3JtQ2hlY2sgPT09ICdpbmxpbmUnLFxuICAgICAgICAgICdjdXN0b20tY29udHJvbCBjdXN0b20tcmFkaW8nOiB0by5mb3JtQ2hlY2suaW5kZXhPZignY3VzdG9tJykgPT09IDAsXG4gICAgICAgICAgJ2N1c3RvbS1jb250cm9sLWlubGluZSc6IHRvLmZvcm1DaGVjayA9PT0gJ2N1c3RvbS1pbmxpbmUnXG4gICAgICAgIH1cIlxuICAgICAgPlxuICAgICAgICA8aW5wdXQgdHlwZT1cInJhZGlvXCJcbiAgICAgICAgICBbaWRdPVwiaWQgKyAnXycgKyBpXCJcbiAgICAgICAgICBbY2xhc3MuZm9ybS1jaGVjay1pbnB1dF09XCJ0by5mb3JtQ2hlY2suaW5kZXhPZignY3VzdG9tJykgPT09IC0xXCJcbiAgICAgICAgICBbY2xhc3MuY3VzdG9tLWNvbnRyb2wtaW5wdXRdPVwidG8uZm9ybUNoZWNrLmluZGV4T2YoJ2N1c3RvbScpID09PSAwXCJcbiAgICAgICAgICBbbmFtZV09XCJmaWVsZC5uYW1lIHx8IGlkXCJcbiAgICAgICAgICBbY2xhc3MuaXMtaW52YWxpZF09XCJzaG93RXJyb3JcIlxuICAgICAgICAgIFthdHRyLnZhbHVlXT1cIm9wdGlvbi52YWx1ZVwiXG4gICAgICAgICAgW3ZhbHVlXT1cIm9wdGlvbi52YWx1ZVwiXG4gICAgICAgICAgW2Zvcm1Db250cm9sXT1cImZvcm1Db250cm9sXCJcbiAgICAgICAgICBbZm9ybWx5QXR0cmlidXRlc109XCJmaWVsZFwiXG4gICAgICAgICAgW2F0dHIuZGlzYWJsZWRdPVwib3B0aW9uLmRpc2FibGVkIHx8IGZvcm1Db250cm9sLmRpc2FibGVkID8gdHJ1ZSA6IG51bGxcIj5cbiAgICAgICAgPGxhYmVsXG4gICAgICAgICAgW2NsYXNzLmZvcm0tY2hlY2stbGFiZWxdPVwidG8uZm9ybUNoZWNrLmluZGV4T2YoJ2N1c3RvbScpID09PSAtMVwiXG4gICAgICAgICAgW2NsYXNzLmN1c3RvbS1jb250cm9sLWxhYmVsXT1cInRvLmZvcm1DaGVjay5pbmRleE9mKCdjdXN0b20nKSA9PT0gMFwiXG4gICAgICAgICAgW2Zvcl09XCJpZCArICdfJyArIGlcIj5cbiAgICAgICAgICB7eyBvcHRpb24ubGFiZWwgfX1cbiAgICAgICAgPC9sYWJlbD5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICBgLFxufSlcbmV4cG9ydCBjbGFzcyBGb3JtbHlGaWVsZFJhZGlvIGV4dGVuZHMgRmllbGRUeXBlIHtcbiAgZGVmYXVsdE9wdGlvbnMgPSB7XG4gICAgdGVtcGxhdGVPcHRpb25zOiB7XG4gICAgICBvcHRpb25zOiBbXSxcbiAgICAgIGZvcm1DaGVjazogJ2N1c3RvbScsIC8vICdjdXN0b20nIHwgJ2N1c3RvbS1pbmxpbmUnIHwgJ3N0YWNrZWQnIHwgJ2lubGluZSdcbiAgICB9LFxuICB9O1xufVxuIl19