(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),require('@angular/common'),require('@angular/forms'),require('@ngx-formly/core'),exports, require('@angular/common'), require('@angular/forms'), require('@angular/core'), require('@ngx-formly/core')) :
    typeof define === 'function' && define.amd ? define('@ngx-formly/bootstrap/addons', ['@angular/core','@angular/common','@angular/forms','@ngx-formly/core','exports', '@angular/common', '@angular/forms', '@angular/core', '@ngx-formly/core'], factory) :
    (factory(global.ng.core,global.ng.common,global.ng.forms,global.ngxFormly.core,(global['ngx-formly'] = global['ngx-formly'] || {}, global['ngx-formly'].bootstrap = global['ngx-formly'].bootstrap || {}, global['ngx-formly'].bootstrap.addons = {}),global.ng.common,global.ng.forms,global.ng.core,global.core$1));
}(this, (function (ɵngcc0,ɵngcc1,ɵngcc2,ɵngcc3,exports,common,forms,core,core$1) { 
function FormlyWrapperAddons_div_1_i_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 8);
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r3.to.addonLeft.class);
} }
function FormlyWrapperAddons_div_1_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 9);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r4.to.addonLeft.text);
} }
var _c0 = function (a0) { return { cursor: a0 }; };
function FormlyWrapperAddons_div_1_Template(rf, ctx) { if (rf & 1) {
    var _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 5);
    ɵngcc0.ɵɵlistener("click", function FormlyWrapperAddons_div_1_Template_div_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); var ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.addonLeftClick($event); });
    ɵngcc0.ɵɵtemplate(1, FormlyWrapperAddons_div_1_i_1_Template, 1, 1, "i", 6);
    ɵngcc0.ɵɵtemplate(2, FormlyWrapperAddons_div_1_span_2_Template, 2, 1, "span", 7);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction1(3, _c0, ctx_r0.to.addonLeft.onClick ? "pointer" : "inherit"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.to.addonLeft.class);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.to.addonLeft.text);
} }
function FormlyWrapperAddons_div_5_i_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 8);
} if (rf & 2) {
    var ctx_r7 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r7.to.addonRight.class);
} }
function FormlyWrapperAddons_div_5_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 9);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r8 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r8.to.addonRight.text);
} }
function FormlyWrapperAddons_div_5_Template(rf, ctx) { if (rf & 1) {
    var _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 10);
    ɵngcc0.ɵɵlistener("click", function FormlyWrapperAddons_div_5_Template_div_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); var ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.addonRightClick($event); });
    ɵngcc0.ɵɵtemplate(1, FormlyWrapperAddons_div_5_i_1_Template, 1, 1, "i", 6);
    ɵngcc0.ɵɵtemplate(2, FormlyWrapperAddons_div_5_span_2_Template, 2, 1, "span", 7);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction1(3, _c0, ctx_r2.to.addonRight.onClick ? "pointer" : "inherit"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.to.addonRight.class);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.to.addonRight.text);
} }
'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (b.hasOwnProperty(p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FormlyWrapperAddons = /** @class */ (function (_super) {
        __extends(FormlyWrapperAddons, _super);
        function FormlyWrapperAddons() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        /**
         * @param {?} $event
         * @return {?}
         */
        FormlyWrapperAddons.prototype.addonRightClick = /**
         * @param {?} $event
         * @return {?}
         */
            function ($event) {
                if (this.to.addonRight.onClick) {
                    this.to.addonRight.onClick(this.to, this, $event);
                }
            };
        /**
         * @param {?} $event
         * @return {?}
         */
        FormlyWrapperAddons.prototype.addonLeftClick = /**
         * @param {?} $event
         * @return {?}
         */
            function ($event) {
                if (this.to.addonLeft.onClick) {
                    this.to.addonLeft.onClick(this.to, this, $event);
                }
            };
FormlyWrapperAddons.ɵfac = function FormlyWrapperAddons_Factory(t) { return ɵFormlyWrapperAddons_BaseFactory(t || FormlyWrapperAddons); };
FormlyWrapperAddons.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FormlyWrapperAddons, selectors: [["formly-wrapper-addons"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 6, vars: 2, consts: [[1, "input-group"], ["class", "input-group-prepend", 3, "ngStyle", "click", 4, "ngIf"], [1, "input-addons"], ["fieldComponent", ""], ["class", "input-group-append", 3, "ngStyle", "click", 4, "ngIf"], [1, "input-group-prepend", 3, "ngStyle", "click"], ["class", "input-group-text", 3, "ngClass", 4, "ngIf"], ["class", "input-group-text", 4, "ngIf"], [1, "input-group-text", 3, "ngClass"], [1, "input-group-text"], [1, "input-group-append", 3, "ngStyle", "click"]], template: function FormlyWrapperAddons_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, FormlyWrapperAddons_div_1_Template, 3, 5, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵelementContainer(3, null, 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(5, FormlyWrapperAddons_div_5_Template, 3, 5, "div", 4);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.to.addonLeft);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngIf", ctx.to.addonRight);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgStyle, ɵngcc1.NgClass], styles: ["[_nghost-%COMP%]     .input-group>:not(:first-child) .form-control{border-top-left-radius:0;border-bottom-left-radius:0}[_nghost-%COMP%]     .input-group>:not(:last-child) .form-control{border-top-right-radius:0;border-bottom-right-radius:0}[_nghost-%COMP%]     .input-group>.input-addons{position:relative;flex:1 1 auto;width:1%;margin-bottom:0}"] });
var ɵFormlyWrapperAddons_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(FormlyWrapperAddons);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormlyWrapperAddons, [{
        type: core.Component,
        args: [{
                selector: 'formly-wrapper-addons',
                template: "<div class=\"input-group\">\n  <div class=\"input-group-prepend\" *ngIf=\"to.addonLeft\" [ngStyle]=\"{cursor: to.addonLeft.onClick ? 'pointer' : 'inherit'}\"\n    (click)=\"addonLeftClick($event)\">\n    <i class=\"input-group-text\" [ngClass]=\"to.addonLeft.class\" *ngIf=\"to.addonLeft.class\"></i>\n    <span *ngIf=\"to.addonLeft.text\" class=\"input-group-text\">{{ to.addonLeft.text }}</span>\n  </div>\n  <div class=\"input-addons\">\n    <ng-container #fieldComponent></ng-container>\n  </div>\n  <div class=\"input-group-append\" *ngIf=\"to.addonRight\" [ngStyle]=\"{cursor: to.addonRight.onClick ? 'pointer' : 'inherit'}\"\n    (click)=\"addonRightClick($event)\">\n    <i class=\"input-group-text\" [ngClass]=\"to.addonRight.class\" *ngIf=\"to.addonRight.class\"></i>\n    <span *ngIf=\"to.addonRight.text\" class=\"input-group-text\">{{ to.addonRight.text }}</span>\n  </div>\n</div>\n",
                styles: [":host ::ng-deep .input-group>:not(:first-child) .form-control{border-top-left-radius:0;border-bottom-left-radius:0}:host ::ng-deep .input-group>:not(:last-child) .form-control{border-top-right-radius:0;border-bottom-right-radius:0}:host ::ng-deep .input-group>.input-addons{position:relative;flex:1 1 auto;width:1%;margin-bottom:0}"]
            }]
    }], null, null); })();
        return FormlyWrapperAddons;
    }(core$1.FieldWrapper));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /**
     * @param {?} field
     * @return {?}
     */
    function addonsExtension(field) {
        if (!field.templateOptions || (field.wrappers && field.wrappers.indexOf('addons') !== -1)) {
            return;
        }
        if (field.templateOptions.addonLeft || field.templateOptions.addonRight) {
            field.wrappers = __spread((field.wrappers || []), ['addons']);
        }
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FormlyBootstrapAddonsModule = /** @class */ (function () {
        function FormlyBootstrapAddonsModule() {
        }
FormlyBootstrapAddonsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: FormlyBootstrapAddonsModule });
FormlyBootstrapAddonsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function FormlyBootstrapAddonsModule_Factory(t) { return new (t || FormlyBootstrapAddonsModule)(); }, imports: [[
            common.CommonModule,
            forms.ReactiveFormsModule,
            core$1.FormlyModule.forChild({
                wrappers: [
                    { name: 'addons', component: FormlyWrapperAddons },
                ],
                extensions: [
                    { name: 'addons', extension: { postPopulate: addonsExtension } },
                ]
            }),
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FormlyBootstrapAddonsModule, { declarations: [FormlyWrapperAddons], imports: [ɵngcc1.CommonModule, ɵngcc2.ReactiveFormsModule, ɵngcc3.FormlyModule] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormlyBootstrapAddonsModule, [{
        type: core.NgModule,
        args: [{
                declarations: [FormlyWrapperAddons],
                imports: [
                    common.CommonModule,
                    forms.ReactiveFormsModule,
                    core$1.FormlyModule.forChild({
                        wrappers: [
                            { name: 'addons', component: FormlyWrapperAddons },
                        ],
                        extensions: [
                            { name: 'addons', extension: { postPopulate: addonsExtension } },
                        ]
                    }),
                ]
            }]
    }], function () { return []; }, null); })();
        return FormlyBootstrapAddonsModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.FormlyBootstrapAddonsModule = FormlyBootstrapAddonsModule;
    exports.ɵb = addonsExtension;
    exports.ɵa = FormlyWrapperAddons;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=ngx-formly-bootstrap-addons.umd.js.map