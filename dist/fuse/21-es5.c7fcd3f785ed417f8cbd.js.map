{"version":3,"sources":["webpack:///src/app/features/applications/activity-selection-dialog/activity-selection-dialog.component.html","webpack:///src/app/features/applications/activity-selection-dialog/activity-selection-dialog.component.ts","webpack:///src/app/features/applications/applications-list/applications-list.component.ts","webpack:///src/app/features/applications/applications-routing.module.ts","webpack:///src/app/features/applications/applications.module.ts"],"names":["ActivitySelectionDialog","ApplicationsList","ApplicationsRoutingModule","ApplicationsModule","_dataLayer","_dialogRef","list","tableConfigs","label","fields","type","key","item","field","get","params","current_org_id","this","organization","status","limit","loading","subscribe","resp","err","console","log","row","closeDialog","activity","applications","length","forEach","app","parseFloat","amount_requested","estimated_amount","act","accumulated","close","org","JSON","parse","localStorage","getItem","getActivities","_router","_dialog","headers","title","rows","fieldType","primaryField","secondaryField","actions","btnText","icon","disableStatus","action","modalConf","qParam","link","queryParams","current","step","pageHeaderActions","bpType","roles","open","data","context","width","afterClosed","result","isObject","navigate","budget","amount","activity_date","event","openDialog","pageHeadeAction","routes","path","component","children","redirectTo","pathMatch","stepsKey","listRoute","store","endPoint","forChild"],"mappings":"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","file":"x","sourcesContent":["<div class=\"font-size-14\" mat-dialog-title>\n    <div class=\"d-flex align-items-center mb-n3\">\n        <div class=\"flex-fill\">Activities</div>\n        <div>\n            <form class=\"search-form\">\n                <mat-form-field class=\"full-width\">\n                    <mat-label>Search</mat-label>\n                    <input type=\"search\" matInput\n                    placeholder=\"Search activity...\">\n                    <mat-icon matSuffix class=\"font-size-14\">search</mat-icon>\n                </mat-form-field>\n            </form>\n        </div>\n    </div>\n</div>\n<mat-dialog-content class=\"mat-typography\">\n    <!-- Start of listing -->\n    <div>\n        <table class=\"table\">\n            <thead class=\"thead-light\">\n                <tr>\n                    <th *ngFor=\"let th of tableConfigs\">\n                        {{th?.label }}\n                    </th>\n                    <!-- <th>\n                        Applied\n                    </th> -->\n                    <th style=\"width:1px\"></th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let item of list\">\n                    <td *ngFor=\"let td of tableConfigs\" \n                    class=\"pb-1 align-middle\">\n                        <div *ngFor=\"let field of td.fields\"\n                        class=\"pb-1\">\n                            <div *ngIf=\"field.type === 'string'\">\n                                {{ item[field.key] }}\n                            </div>\n                            <div *ngIf=\"field.type === 'currency'\">\n                                {{ item[field.key] | currency: 'Kshs '}}\n                            </div>\n                            <div *ngIf=\"field.type === 'date'\">\n                                {{ item[field.key] | date: 'dd-MM-yyyy'}}\n                            </div>\n                            <!-- Start of nested -->\n                            <div class=\"d-flex\" *ngIf=\"field.type === 'nested'\">\n                                <div *ngIf=\"field.label\" class=\"text-muted\">\n                                  {{ field.label }}:&nbsp;\n                                </div>\n                                <div>\n                                  {{ getNested(item, field.key) }}\n                                </div>\n                            </div>\n                            <!-- Start of status -->\n                            <div *ngIf=\"field.type === 'status'\">\n                                <span class=\"badge {{ item[field.key] | lowercase }} py-1 py-2\">\n                                {{ item[field.key] | uppercase | removeUnderscore }}\n                                </span>\n                            </div>\n                        </div>\n                    </td>\n                    <!-- TODO: Bring back when validation done correctly -->\n                    <!-- <td class=\"align-middle\">\n                        {{ setAppliedAmount(item) | currency: 'Kshs ' }}\n                    </td> -->\n                    <td style=\"width:1px\">\n                        <!-- [disabled]=\"getACtivityStatus(item)\" -->\n                        <button mat-raised-button color=\"defualt\"\n                        (click)=\"selectActivity(item)\">SELECT</button>\n                    </td>\n                </tr>\n                <tr *ngIf=\"loading\">\n                    <td [attr.colspan]=\"tableConfigs.length + 1\">\n                        <div class=\"d-flex justify-content-center py-16\">\n                            <mat-spinner diameter=\"40\"></mat-spinner>\n                        </div>\n                    </td>\n                </tr>\n                <tr *ngIf=\"!loading && !list.length\">\n                    <td [attr.colspan]=\"tableConfigs.length + 1\">\n                        <div class=\"d-flex flex-column justify-content-center py-16\">\n                            <div class=\"text-center\">\n                                <mat-icon class=\"font-size-100 w-100-p\">folder_open</mat-icon>\n                            </div>\n                            <div class=\"pt-16 text-center font-size-18 pb-3\">\n                                There are no approved activities.\n                            </div>\n                            <div class=\"pt-8 text-center font-size-14 text-muted\">\n                                Once you have an approved budget with \n                                approved activities, the activities will <br />\n                                appear here and you can use them to \n                                make an application.\n                            </div>\n                        </div>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\" class=\"pb-20 border-top pt-8\">\n    <button mat-button mat-dialog-close cdkFocusInitial>CLOSE</button>\n</mat-dialog-actions>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Data } from '@angular/router';\n\nimport { DataLayerService } from 'app/services/http/dataLayer.service';\nimport { get } from 'lodash';\n\n@Component({\n    selector: 'activity-selection-dialog',\n    templateUrl: 'activity-selection-dialog.component.html',\n    styleUrls: ['activity-selection-dialog.component.scss'],\n    providers: [DataLayerService],\n})\n\nexport class ActivitySelectionDialog implements OnInit {\n    searchValue: string;\n    loading: boolean;\n    list: Array<any> = [];\n    organization: any;\n    tableConfigs: Array<any> = [\n        {\n            label: 'Title',\n            fields: [\n                {\n                    type: 'string',\n                    key: 'title',\n                }\n            ],\n        },\n        {\n            label: 'Activity Date',\n            fields: [\n                {\n                    type: 'date',\n                    key: 'activity_date',\n                }\n            ],\n        },\n        {\n            label: 'Applied Amount',\n            fields: [\n                {\n                    type: 'currency',\n                    key: 'total'\n                }\n            ],\n        },\n        {\n            label: 'Approved Amount',\n            fields: [\n                {\n                    type: 'currency',\n                    key: 'actual_total'\n                }\n            ],\n        },\n        {\n            label: 'Status',\n            fields: [\n                {\n                    type: 'status',\n                    key: 'status'\n                }\n            ],\n        }\n    ];\n\n    constructor(private _dataLayer: DataLayerService,\n        public _dialogRef: MatDialogRef<ActivitySelectionDialog>) {\n\n        }\n\n    getNested(item, field) {\n        return get(item, field, null);\n    }\n\n    getActivities() {\n        const params = {\n            current_org_id: this.organization,\n            status: 'SASDEF_APPROVED',\n            limit: 1000, \n        };\n        this.loading = true;\n        this._dataLayer.list('organization-budget-activities', params)\n            .subscribe(resp => {\n                this.list = resp['results'];\n                this.loading = false;\n            }, err => {\n                this.loading = false;\n                console.log(err)\n            });\n    }\n\n    selectActivity(row) {\n        const postParam = {\n            current_org_id: this.organization,\n\n        }\n        this.closeDialog(row);\n    }\n\n    getACtivityStatus(activity) {\n        if (activity.applications.length) {\n            let cumulative = 0;\n            activity.applications.forEach(app => {\n                cumulative += parseFloat(app.amount_requested);\n            });\n            const estimate = parseFloat(activity.estimated_amount);\n            if (cumulative < estimate) {\n                // TODO: bring back a more meaningful comparison\n                // return false;\n                return false;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    setAppliedAmount(act) {\n        if (act.applications.length) {\n            let accumulated = 0;\n            act.applications.forEach(app => {\n                accumulated += parseFloat(app.amount_requested);\n            })\n            return accumulated;\n        } else {\n            return 0;\n        }\n    }\n\n    closeDialog(row) {\n        this._dialogRef.close(row);\n    }\n\n    ngOnInit() {\n        const org = JSON.parse(localStorage.getItem('organization'));\n        this.organization = get(org, 'organization', null);\n        this.getActivities();\n    }\n}","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\n\nimport { get, isObject, isUndefined } from 'lodash';\n\nimport { \n    ActivitySelectionDialog \n} from '../activity-selection-dialog/activity-selection-dialog.component';\n\n@Component({\n    selector: 'applications-list',\n    styles: [\n        `:host{\n            width: 100%;\n        }`\n    ],\n    template: `\n        <div><page-header title=\"Applications\"\n        [actions]=\"pageHeaderActions\"\n        (navigate)=\"pageHeadeAction($event)\"></page-header></div>\n        <div class=\"w-100-p d-flex px-5\">\n            <div class=\"w-100-p d-flex px-5\">\n                <dynamic-table title=\"Listing\"\n                class=\"w-100-p\" [addOrg]=\"true\"\n                [headers]=\"headers\" [no-card]=\"false\"\n                [has-action]=\"true\" store=\"applications\"\n                [hasSearch]=\"true\"\n                [actions]=\"actions\" [rows]=\"rows\">\n                </dynamic-table>\n            </div>\n        </div>\n    `\n})\n\nexport class ApplicationsList {\n    headers: Array<any> = [\n        { title: 'Organization' },\n        { title: 'Applied Amount' },\n        { title: 'Required By' },\n        { title: 'Financial Year' },\n        { title: 'Status' },\n        { title: 'Actions' }\n    ];\n\n    rows: Array<any> = [\n        { \n            key: 'organization', \n            type: 'nested',\n            fieldType: 'nested_string',\n            primaryField: 'organization_data.name',\n        },\n        { key: 'amount_requested', type: 'currency' },\n        { key: 'date_requested', type: 'date' },\n        { \n            key: 'financial_year', \n            type: 'nested',\n            fieldType: 'nested_range',\n            primaryField: 'financial_year_data.starts_on',\n            secondaryField: 'financial_year_data.ends_on', \n        },\n        { key: 'status', type: 'status' },\n    ];\n\n    actions:Array<any> = [\n        {\n            btnText: 'MANAGE',\n            status: 'accent',\n            icon: false,\n            disableStatus: 'FINISHED',\n            action: 'tabDetails',\n            modalConf: {\n                qParam: 'organization',\n                link: '/applications/details',\n                queryParams: { current: 2, step: 1 },\n            }\n        },\n    ];\n\n    pageHeaderActions: Array<any> = [\n        {\n            btnText: 'APPLY FUNDS',\n            status: 'accent',\n            icon: true,\n            bpType: [\n                'GOVERNMENT_AGENCY', \n                'PROFESSIONAL_SPORTPERSON',\n                'SPORTS_ORGANIZATION',\n                'MINISTRY'\n            ],\n            roles: ['Admin', \n                'Representative',\n                'Budget Reviewer', \n                'Ministry Approver'\n            ],\n            modalConf: {\n                link: '/applications/add',\n                queryParams: { current: 1, step: 1 },\n            }\n        },\n    ];\n\n    constructor(private _router: Router,\n        private _dialog: MatDialog) {}\n\n    openDialog() {\n        const dialogRef = this._dialog.open(ActivitySelectionDialog, {\n            data: {\n                context: 'Application',\n            },\n            width: '75%',\n        });\n        dialogRef.afterClosed().subscribe(result => {\n            if (isObject(result)) {\n                const paramsObj = {\n                    activity: result['id'],\n                    budget: result['org_budget'],\n                    organization: result['organization'],\n                    amount: result['actual_total'],\n                    activity_date: result['activity_date'],\n                }\n                this._router.navigate(['/applications/add'], {\n                    queryParams: { current: 1, ...paramsObj },\n                });\n            }\n        })\n    }\n\n    pageHeadeAction(event) {\n        const orgId = get(JSON.parse(\n            localStorage.getItem('organization')), \n            'organization', null\n        );\n        this.openDialog();\n        // this._router.navigate(['/applications/add'], {\n        //     queryParams: { current: 1, organization: orgId }\n        // });\n    }\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { \n    PageContainerComponent \n} from '@fuse/components/page-container/page-container.component';\nimport { ApplicationsList } from './applications-list/applications-list.component';\nimport { \n    MainWrapperComponent \n} from '@fuse/components/tabbed-wrapper/components/main-wrapper/main-wrapper.component';\nimport {\n    MainStepperWrapperComponent\n} from '@fuse/components/stepper-wrapper/components/main-wrapper/main-wrapper.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: PageContainerComponent,\n        children: [\n            { path: '', redirectTo: 'list', pathMatch: 'full' },\n            { path: 'list', component: ApplicationsList },\n            {\n                path: 'add',\n                component: MainStepperWrapperComponent,\n                data: {\n                    stepsKey: 'application',\n                    context: 'Application',\n                    listRoute: '/applications',\n                }\n            },\n            { \n                path: 'details',\n                component: MainWrapperComponent,\n                data: {\n                    store: 'application',\n                    endPoint: 'applications',\n                    listRoute: '/applications'\n                }\n            }\n        ]\n    }\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports : [RouterModule],\n})\n\nexport class ApplicationsRoutingModule {}","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport { HttpModule } from '../../services/http/http.module';\nimport { TabbedWrapperModule } from '@fuse/components/tabbed-wrapper/tabbed-wrapper.module';\nimport { StepperWrapperModule } from '@fuse/components/stepper-wrapper/stepper-wrapper.module';\nimport {\n    ApplicationsRoutingModule\n} from './applications-routing.module'; \nimport { DynamicTableModule } from '../../../@fuse/components/dynamic-table/dynamic-table.module';\nimport { PageHeaderModule } from '../../../@fuse/components/page-header/page-header.module';\n\nimport { ApplicationsList } from './applications-list/applications-list.component';\nimport { \n    ActivitySelectionDialog\n} from './activity-selection-dialog/activity-selection-dialog.component';\n\n@NgModule({\n    imports: [\n        HttpModule,\n        RouterModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n        MatInputModule,\n        MatButtonModule,\n        MatIconModule,\n        MatFormFieldModule,\n        FuseSharedModule,\n        PageHeaderModule,\n        DynamicTableModule,\n        TabbedWrapperModule,\n        StepperWrapperModule,\n        MatProgressSpinnerModule,\n        ApplicationsRoutingModule,\n    ],\n    declarations: [\n        ApplicationsList,\n        ActivitySelectionDialog,\n    ]\n})\n\nexport class ApplicationsModule {}"]}