{"version":3,"sources":["webpack:///src/@fuse/components/dynamic-table/dynamic-table.module.ts","webpack:///src/@fuse/components/page-header/page-header.module.ts","webpack:///src/app/services/auth-checkers.service.ts","webpack:///src/@fuse/components/page-header/page-header.component.ts","webpack:///node_modules/@angular/material/fesm2015/card.js","webpack:///src/@fuse/pipes/removeUnderscore.pipe.ts","webpack:///src/@fuse/components/dynamic-table/components/dynamic-table-dialog/dynamic-table-dialog.component.html","webpack:///src/@fuse/components/dynamic-table/components/dynamic-table-dialog/dynamic-table-dialog.component.ts","webpack:///src/@fuse/components/dynamic-table/services/dynamic-table.service.ts","webpack:///src/@fuse/components/dynamic-table/components/pagination/pagination.component.ts","webpack:///src/@fuse/components/dynamic-table/components/compact-line-details/compact-line-details.component.ts","webpack:///src/@fuse/components/dynamic-table/components/inline-readonly-dialog/inline-readonly-dialog.component.html","webpack:///src/@fuse/components/dynamic-table/components/inline-readonly-dialog/inline-readonly-dialog.component.ts","webpack:///src/@fuse/components/dynamic-table/components/inline-readonly/inline-readonly.component.html","webpack:///src/@fuse/components/dynamic-table/components/inline-readonly/inline-readonly.component.ts","webpack:///src/@fuse/components/dynamic-table/components/dynamic-table/dynamic-table.component.html","webpack:///src/@fuse/components/dynamic-table/components/dynamic-table/dynamic-table.component.ts","webpack:///src/@fuse/components/page-container/page-container.component.ts","webpack:///node_modules/@angular/material/fesm2015/progress-spinner.js","webpack:///src/@fuse/components/dynamic-table/components/nested-string/nested-string.component.ts"],"names":["DynamicTableModule","PageHeaderModule","AuthCheckerService","_authConfig","allowedOrgTypes","roles","orgType","get","JSON","parse","localStorage","getItem","organization","user","this","getUser","isUndefined","indexOf","currOrg","find","organizations","group_name","isNull","group","PageHeaderComponent","_authCheckerServ","title","actions","menuActions","navigate","action","emit","act","has","isActionAllowed","bpType","_c0","_c1","MatCardContent","ɵfac","t","ɵdir","type","selectors","hostAttrs","MatCard","_animationMode","ɵcmp","hostVars","hostBindings","rf","ctx","exportAs","ngContentSelectors","decls","vars","template","styles","encapsulation","changeDetection","MatCardModule","ɵmod","ɵinj","factory","imports","RemoveUnderscorePipe","value","args","replace","dialogActions","DynamicTableService","DynamicTableDialog","PaginationComponent","data","_snackBar","_dataLayer","_formBuilder","_dialogRef","approve","frmVal","approveObj","item","review_state","review_comment","comment","updateRecord","successMsg","errorMsg","reject","rejectObj","msg","open","duration","dialogForm","required","adjustAmountForm","commentForm","frm","valid","console","log","transitionActions","transObj","feedback","update","configs","store","id","key","subscribe","resp","loading","closeDialog","openSnackBar","err","frmObj","amount","context","submitTransition","rationalized_price","status","actual_price","Error","list","patchObj","urlEnd","postTransition","aF","setValue","unit_price","arg","close","getUserOrganization","formInit","getRoles","setConfigs","controls","dataLayer","funcArr","func","extraParams","fxnObj","cmpt","errors","submitted","error","push","model","obj","organization_name","tabbedItem","listParams","modelObj","orgId","editInline","each","field","editParam","prefillObj","lngMsg","openDynamicSnackBar","showToast","getData","postCRUDFxn","errHandler","rolesToBeAssigned","map","role","roleCode","roleDescription","toBeAssignedThisRole","countyId","middleName","confirm_password","prefillModel","create","toggleHeaderInline","getServiceFxn","goToPage","currentPage","next","split","ctrl","includes","countLimit","parseInt","pageLimit","currentOffset","toItem","offset","fromItem","previous","Math","ceil","count","fixedCtrls","results","length","changes","currentValue","setPageInterval","goToPrev","goToNext","CompactLineDetailsComponent","InlineReadOnlyDialog","attachedDoc","strArr","file","fileName","files","fileFormData","target","attachment_type","formData","FormData","append","uploadFile","setFileName","notes","complaint_review","attachment","config","review_status","complaint","transitionDoc","fileChange","submitReview","InlineReadonlyComponent","_dialog","toggleRow","refreshList","description","width","afterClosed","result","params","current_org_id","forEach","review","attachList","fetchItemReviews","toggleReadOnly","activateAction","gridActions","DynamicTableComponent","router","http","dataTableServ","headers","rows","buttons","topActions","dropDownActions","addOrg","self","debounce","modalStatus","inlineModalStatus","headerInline","modal","row","modalConf","selectedItem","openDialog","btnText","inline","inlineConf","toggleInlineRow","inlineReadOnly","showInline","readOnly","fetchInline","inlineForm","editConfig","route","queryParams","link","tabDetails","current","step","qParam","conf","inlineHeaderConf","showModal","event","currIndex","preProcessModel","btnConfigs","dtParams","limit","paginationCtrl","statsChecker","statusArr","bpTypesArr","filter","searchControl","valueChanges","pipe","debounceTime","distinctUntilChanged","query","search","addExternalParams","str","modelKey","cmptParams","receiveModel","term","paginate","PageContainerComponent","MatProgressSpinner__svg_circle_1_Template","ctx_r0","_spinnerAnimationLabel","_getStrokeDashOffset","_getStrokeCircumference","_getCircleStrokeWidth","_getCircleRadius","MatProgressSpinner__svg_circle_2_Template","ctx_r1","MatSpinner__svg_circle_1_Template","MatSpinner__svg_circle_2_Template","_MatProgressSpinnerMixinBase","_elementRef","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","providedIn","diameter","MatProgressSpinner","platform","_document","animationMode","defaults","super","_diameter","_value","_fallbackAnimation","mode","trackedDiameters","_diameters","_getSpinnerAnimationLabel","head","set","Set","EDGE","TRIDENT","_noopAnimations","_forceAnimations","strokeWidth","element","nativeElement","_styleRoot","_attachStyleNode","classList","add","viewBox","PI","styleRoot","currentDiameter","diameters","diametersForElement","styleTag","createElement","setAttribute","textContent","_getAnimationText","appendChild","strokeCircumference","toString","size","_strokeWidth","newValue","max","min","inputs","color","features","consts","_getViewBox","directives","WeakMap","MatSpinner","elementRef","document","MatProgressSpinnerModule","NestedStringComponent","primary","secondary","parseFloat","primaryField","secondaryField"],"mappings":"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","file":"x","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { FusePipesModule } from '@fuse/pipes/pipes.module';\nimport { HttpModule } from '../../../app/services/http/http.module';\nimport { DynamicFormModule } from '@fuse/components/dynamic-form/dynamic-form.module';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatMenuModule } from '@angular/material/menu'\n\nimport { DynamicTableComponent } from './components/dynamic-table/dynamic-table.component';\nimport { DynamicTableDialog } from './components/dynamic-table-dialog/dynamic-table-dialog.component';\nimport { PaginationComponent } from './components/pagination/pagination.component';\nimport { NestedStringComponent } from './components/nested-string/nested-string.component';\nimport { InlineReadonlyComponent } from './components/inline-readonly/inline-readonly.component';\nimport { InlineReadOnlyDialog } from './components/inline-readonly-dialog/inline-readonly-dialog.component';\nimport { CompactLineDetailsComponent } from './components/compact-line-details/compact-line-details.component';\n\n@NgModule({\n    imports: [\n        HttpModule,\n        RouterModule,\n        CommonModule,\n        MatIconModule,\n        MatCardModule,\n        MatButtonModule,\n        MatSnackBarModule,\n        MatDialogModule,\n        MatMenuModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        NgSelectModule,\n        MatProgressSpinnerModule,\n        HttpClientModule,\n        DynamicFormModule,\n        ReactiveFormsModule,\n        FusePipesModule,\n    ],\n    declarations: [\n        DynamicTableComponent,\n        PaginationComponent,\n        NestedStringComponent,\n        DynamicTableDialog,\n        InlineReadonlyComponent,\n        InlineReadOnlyDialog,\n        CompactLineDetailsComponent,\n    ],\n    exports: [\n        DynamicTableComponent,\n        PaginationComponent,\n        NestedStringComponent,\n        DynamicTableDialog,\n        InlineReadonlyComponent,\n        InlineReadOnlyDialog,\n        CompactLineDetailsComponent,\n    ],\n    entryComponents: [\n        InlineReadOnlyDialog,\n    ]\n})\n\nexport class DynamicTableModule {}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { MatButtonModule }  from '@angular/material/button';\nimport { MatIconModule }  from  '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDividerModule }  from '@angular/material/divider';\nimport { PageHeaderComponent } from './page-header.component';\n\n@NgModule({\n    declarations: [\n        PageHeaderComponent\n    ],\n    exports: [\n        PageHeaderComponent\n    ],\n    imports: [\n        RouterModule,\n        CommonModule,\n        MatIconModule,\n        MatButtonModule,\n        MatDividerModule,\n        MatMenuModule,\n    ]\n})\nexport class PageHeaderModule\n{\n}","import { Injectable } from '@angular/core';\nimport { find, get, indexOf, isNull, isUndefined } from 'lodash';\n\nimport { Authorization } from './authorization.service';\n\n@Injectable()\nexport class AuthCheckerService {\n    constructor(private _authConfig: Authorization) {\n\n    }\n\n    isActionAllowed(allowedOrgTypes, roles) {\n        const orgType = get(JSON.parse(localStorage.getItem('organization')), 'org_type');\n        const organization = get(JSON.parse(localStorage.getItem('organization')), 'organization');\n        const user = JSON.parse(this._authConfig.getUser());\n        if (isUndefined(roles)) {\n            return indexOf(allowedOrgTypes, orgType) >= 0;\n        } else {\n            const currOrg = find(user.organizations, { organization }, null);\n            return ( indexOf(roles, currOrg.group_name) >= 0 \n                || isNull(currOrg.group)) \n                && indexOf(allowedOrgTypes, orgType) >= 0;\n        }\n    }\n}","import { Component, EventEmitter, Input, Output, OnInit }  from '@angular/core';\n\nimport { AuthCheckerService } from 'app/services/auth-checkers.service';\nimport { has } from 'lodash';\n\n@Component({\n    selector: 'page-header',\n    styleUrls: ['./page-header.component.scss'],\n    template: `\n        <div class=\"cont d-flex\"\n        [class.less-margin]=\"actions['length'] > 0\">\n            <div class=\"flex-fill\">\n                <span class=\"title pl-5\">{{ title }}</span>\n            </div>\n            <div class=\"d-flex justify-content-end pr-20\"\n            *ngIf=\"actions['length'] > 0\">\n                <span *ngFor=\"let act of actions\">\n                    <button mat-raised-button class=\"pl-3\" \n                    (click)=\"navigationAction(act)\"\n                    *ngIf=\"allowedCheckers(act)\">\n                        <mat-icon>add</mat-icon>\n                        &nbsp;{{ act.btnText }}\n                    </button>\n                </span>\n            </div>\n            <div class=\"d-flex justify-content-end pr-24\"\n            *ngIf=\"menuActions['length'] > 0\">\n                <span>\n                    <button mat-raised-button class=\"pr-2\"\n                    [matMenuTriggerFor]=\"menu\">\n                        SEND MESSAGE\n                        <mat-icon class=\"mt-n1\">keyboard_arrow_down</mat-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                        <button mat-menu-item class=\"pr-16\"\n                        (click)=\"navigationAction('transportation_event')\">\n                            <mat-icon>email</mat-icon>\n                            <span>SEND EMAIL</span>\n                        </button>\n                        <mat-divider></mat-divider>\n                        <button mat-menu-item class=\"pr-16\"\n                        (click)=\"navigationAction('attendance')\">\n                            <mat-icon>message</mat-icon>\n                            <span>SEND SMS</span>\n                        </button>\n                    </mat-menu>\n                </span>\n            </div>\n        </div>\n    `,\n    providers: [AuthCheckerService],\n})\n\nexport class PageHeaderComponent implements OnInit {\n    @Input () title: string = '';\n    @Input() actions: Array<any> = [];\n    @Input() menuActions: Array<any> = [];\n\n    @Output() navigate = new EventEmitter();\n\n    constructor(private _authCheckerServ: AuthCheckerService) {}\n\n    navigationAction(action) {\n        this.navigate.emit(action);\n    }\n\n    allowedCheckers(act) {\n        if (has(act, 'bpType')) {\n            return this._authCheckerServ.isActionAllowed(act.bpType, act.roles);\n        } else {\n            return true;\n        }\n    }\n\n    ngOnInit() {}\n}","import { Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"*\", [[\"mat-card-footer\"]]];\nconst _c1 = [\"*\", \"mat-card-footer\"];\nconst _c2 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nconst _c3 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"];\nconst _c4 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"img\"]], \"*\"];\nconst _c5 = [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"img\", \"*\"];\nclass MatCardContent {\n}\nMatCardContent.ɵfac = function MatCardContent_Factory(t) { return new (t || MatCardContent)(); };\nMatCardContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardContent, selectors: [[\"mat-card-content\"], [\"\", \"mat-card-content\", \"\"], [\"\", \"matCardContent\", \"\"]], hostAttrs: [1, \"mat-card-content\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardContent, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n                host: { 'class': 'mat-card-content' }\n            }]\n    }], null, null); })();\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardTitle {\n}\nMatCardTitle.ɵfac = function MatCardTitle_Factory(t) { return new (t || MatCardTitle)(); };\nMatCardTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardTitle, selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]], hostAttrs: [1, \"mat-card-title\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n                host: {\n                    'class': 'mat-card-title'\n                }\n            }]\n    }], null, null); })();\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardSubtitle {\n}\nMatCardSubtitle.ɵfac = function MatCardSubtitle_Factory(t) { return new (t || MatCardSubtitle)(); };\nMatCardSubtitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSubtitle, selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], hostAttrs: [1, \"mat-card-subtitle\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSubtitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n                host: {\n                    'class': 'mat-card-subtitle'\n                }\n            }]\n    }], null, null); })();\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardActions {\n    constructor() {\n        /** Position of the actions inside the card. */\n        this.align = 'start';\n    }\n}\nMatCardActions.ɵfac = function MatCardActions_Factory(t) { return new (t || MatCardActions)(); };\nMatCardActions.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardActions, selectors: [[\"mat-card-actions\"]], hostAttrs: [1, \"mat-card-actions\"], hostVars: 2, hostBindings: function MatCardActions_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-card-actions-align-end\", ctx.align === \"end\");\n    } }, inputs: { align: \"align\" }, exportAs: [\"matCardActions\"] });\nMatCardActions.propDecorators = {\n    align: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardActions, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-actions',\n                exportAs: 'matCardActions',\n                host: {\n                    'class': 'mat-card-actions',\n                    '[class.mat-card-actions-align-end]': 'align === \"end\"'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }] }); })();\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardFooter {\n}\nMatCardFooter.ɵfac = function MatCardFooter_Factory(t) { return new (t || MatCardFooter)(); };\nMatCardFooter.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardFooter, selectors: [[\"mat-card-footer\"]], hostAttrs: [1, \"mat-card-footer\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardFooter, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-footer',\n                host: { 'class': 'mat-card-footer' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardImage {\n}\nMatCardImage.ɵfac = function MatCardImage_Factory(t) { return new (t || MatCardImage)(); };\nMatCardImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardImage, selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]], hostAttrs: [1, \"mat-card-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-image], [matCardImage]',\n                host: { 'class': 'mat-card-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardSmImage {\n}\nMatCardSmImage.ɵfac = function MatCardSmImage_Factory(t) { return new (t || MatCardSmImage)(); };\nMatCardSmImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSmImage, selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]], hostAttrs: [1, \"mat-card-sm-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSmImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-sm-image], [matCardImageSmall]',\n                host: { 'class': 'mat-card-sm-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardMdImage {\n}\nMatCardMdImage.ɵfac = function MatCardMdImage_Factory(t) { return new (t || MatCardMdImage)(); };\nMatCardMdImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardMdImage, selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]], hostAttrs: [1, \"mat-card-md-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardMdImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-md-image], [matCardImageMedium]',\n                host: { 'class': 'mat-card-md-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardLgImage {\n}\nMatCardLgImage.ɵfac = function MatCardLgImage_Factory(t) { return new (t || MatCardLgImage)(); };\nMatCardLgImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardLgImage, selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]], hostAttrs: [1, \"mat-card-lg-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardLgImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-lg-image], [matCardImageLarge]',\n                host: { 'class': 'mat-card-lg-image' }\n            }]\n    }], null, null); })();\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardXlImage {\n}\nMatCardXlImage.ɵfac = function MatCardXlImage_Factory(t) { return new (t || MatCardXlImage)(); };\nMatCardXlImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardXlImage, selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]], hostAttrs: [1, \"mat-card-xl-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardXlImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                host: { 'class': 'mat-card-xl-image' }\n            }]\n    }], null, null); })();\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardAvatar {\n}\nMatCardAvatar.ɵfac = function MatCardAvatar_Factory(t) { return new (t || MatCardAvatar)(); };\nMatCardAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardAvatar, selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], hostAttrs: [1, \"mat-card-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardAvatar, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-avatar], [matCardAvatar]',\n                host: { 'class': 'mat-card-avatar' }\n            }]\n    }], null, null); })();\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\nclass MatCard {\n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n    }\n}\nMatCard.ɵfac = function MatCard_Factory(t) { return new (t || MatCard)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatCard.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCard, selectors: [[\"mat-card\"]], hostAttrs: [1, \"mat-card\", \"mat-focus-indicator\"], hostVars: 2, hostBindings: function MatCard_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, exportAs: [\"matCard\"], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatCard_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatCard.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCard, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card',\n                exportAs: 'matCard',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-card-footer\\\"></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-card mat-focus-indicator',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * @docs-private\n */\nclass MatCardHeader {\n}\nMatCardHeader.ɵfac = function MatCardHeader_Factory(t) { return new (t || MatCardHeader)(); };\nMatCardHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardHeader, selectors: [[\"mat-card-header\"]], hostAttrs: [1, \"mat-card-header\"], ngContentSelectors: _c3, decls: 4, vars: 0, consts: [[1, \"mat-card-header-text\"]], template: function MatCardHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-header',\n                template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-header' }\n            }]\n    }], null, null); })();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * @docs-private\n */\nclass MatCardTitleGroup {\n}\nMatCardTitleGroup.ɵfac = function MatCardTitleGroup_Factory(t) { return new (t || MatCardTitleGroup)(); };\nMatCardTitleGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardTitleGroup, selectors: [[\"mat-card-title-group\"]], hostAttrs: [1, \"mat-card-title-group\"], ngContentSelectors: _c5, decls: 4, vars: 0, template: function MatCardTitleGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitleGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-title-group',\n                template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"img\\\"></ng-content>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-title-group' }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatCardModule {\n}\nMatCardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCardModule });\nMatCardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCardModule_Factory(t) { return new (t || MatCardModule)(); }, imports: [[MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCardModule, { declarations: function () { return [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [\n                    MatCard,\n                    MatCardHeader,\n                    MatCardTitleGroup,\n                    MatCardContent,\n                    MatCardTitle,\n                    MatCardSubtitle,\n                    MatCardActions,\n                    MatCardFooter,\n                    MatCardSmImage,\n                    MatCardMdImage,\n                    MatCardLgImage,\n                    MatCardImage,\n                    MatCardXlImage,\n                    MatCardAvatar,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n                    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n                    MatCardXlImage, MatCardAvatar,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };\n\n//# sourceMappingURL=card.js.map","import { Pipe, PipeTransform } from '@angular/core';\nimport { isNull, isUndefined } from 'lodash';\n\n@Pipe({ name: 'removeUnderscore' })\n\nexport class RemoveUnderscorePipe implements PipeTransform{\n    transform(value: any, args?: any): any {\n        return !isNull(value) && !isUndefined(value) ? \n            value.replace(/_/g, ' ') : value;\n    }\n}","<div class=\"px-16 pt-8 pb-20\">\n    <div mat-dialog-title class=\"pb-3 d-flex\">\n        <div class=\"title-text flex-fill\">\n            {{ configs?.title || 'Approve Request' }}\n        </div>\n    </div>\n    <div mat-dialog-content>\n        {{configs?.description}}\n    </div>\n    <div mat-dialog-actions class=\"pt-5 pb-4 hidden d-flex justify-content-end\"\n    *ngIf=\"configs?.btnText === 'REJECT'\">\n\n        <button mat-button mat-dialog-close\n        (click)=\"closeDialog()\">CLOSE</button>\n\n        <button mat-button [class.spinner]=\"loading\"\n        [disabled]=\"loading\"\n        (click)=\"dialogActions[configs.action]()\">\n            {{ configs?.btnText || 'APPROVE' }}\n        </button>\n        \n    </div>\n    <!-- Start of table dialog form -->\n    <div mat-dialog-actions class=\"w-100-p pt-5 pb-4\"\n    *ngIf=\"configs?.btnText === 'APPROVE'\">\n        <form [formGroup]=\"dialogForm\" name=\"frm\" \n        (ngSubmit)=\"submitForm(dialogForm)\" class=\"w-100-p\">\n            <div class=\"w-100-p\">\n                <mat-form-field appearance=\"outline\" color=\"default\"\n                class=\"w-100-p\">\n                    <mat-label>Select Role</mat-label>\n                    <mat-select formControlName=\"group\">\n                        <mat-option>--</mat-option>\n                        <mat-option *ngFor=\"let role of roles\" [value]=\"role.id\">\n                            {{role?.name}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <div *ngIf=\"f.group.invalid && \n                (f.group.touched || f.group.dirty)\"  \n                class=\"invalid-feedback\">\n                    <div *ngIf=\"f.group.errors.required\">\n                        Role is required\n                    </div>\n                </div>\n            </div>\n            <div class=\"btn-container d-flex justify-content-end\">\n                <button mat-button mat-dialog-close\n                type=\"button\"\n                (click)=\"closeDialog()\">CLOSE</button>\n                <button mat-button type=\"submit\"\n                [class.spinner]=\"loading\" [disabled]=\"loading\">\n                    {{ configs?.btnText || 'APPROVE' }}\n                </button>\n            </div>\n        </form>\n    </div>\n    <!-- end of table dialog form -->\n\n    <!-- Start of rationalizing amount -->\n    <div mat-dialog-actions \n    class=\"w-100-p pt-16 pb-12 mt-n5 flex-column align-items-start\"\n    *ngIf=\"context === 'rationalize'\">\n        <div class=\"w-100-p\">\n            <ul class=\"list-unstyled\">\n                <li class=\"list-item d-flex\"\n                *ngIf=\"item?.item_data\">\n                    <div class=\"pr-3 font-weight-600\">Item name:</div> \n                    <div class=\"pl-2\"> {{ item?.item_data.name }} </div>\n                </li>\n                <li class=\"list-item d-flex\"\n                *ngIf=\"item?.allowance_data\">\n                    <div class=\"pr-16 font-weight-600\">Item name:</div> \n                    <div class=\"pl-2\"> {{ item?.allowance_data.name }} </div>\n                </li>\n                <li class=\"d-flex font-size-13 pt-2\"\n                *ngIf=\"!item?.allowance_data\">\n                    <div class=\"pr-32 font-weight-600\">Quantity:</div> \n                    <div> {{ item?.quantity | number: '1.0' }} </div>\n                    <div class=\"pl-1 pr-2\">@</div>\n                    <div> {{ item?.unit_price | currency: 'Kshs '}} </div>\n                </li>\n                <li class=\"d-flex font-size-13 pt-2\"\n                *ngIf=\"item?.allowance_data\">\n                    <div class=\"pr-18 font-weight-600\">Attendees:</div> \n                    <div class=\"font-weight-600 pl-20\"> &nbsp;{{ item?.head_count | number: '1.0' }} </div>\n                    <div class=\"px-2 font-weight-500\">for</div>\n                    <div class=\"font-weight-600\"> {{ item?.days | number: '1.0' }} </div>\n                    <div class=\"font-weight-500\">&nbsp;days</div> \n                        <div class=\"pl-1 pr-2\">@</div>\n                    <div> {{ item?.unit_price || item?.allowance_data.amount | currency: 'Kshs '}} </div>\n                </li>\n                <li class=\"d-flex font-size-13 pt-2\">\n                    <div class=\"pr-8 font-weight-600\">Applied Total: </div>\n                    <div>\n                        {{ item?.total | currency: 'Kshs ' }}\n                    </div>\n                </li>\n            </ul>\n        </div>\n        <div class=\"w-100-p\">\n            <form [formGroup]=\"adjustAmountForm\" name=\"frm\"\n            (ngSubmit)=\"submitTransitionFrm(adjustAmountForm)\">\n                <div class=\"w-100-p pt-1\">\n                    <div class=\"input-wrapper w-100-p\">\n                        <mat-form-field appearance=\"outline\" color=\"primary\"\n                        class=\"w-100-p pb-0 mb-0\">\n                            <mat-label>Rationalized Unit Price</mat-label>\n                            <input name=\"amount\" matInput\n                            placeholder=\"Kindly enter rationalized unit price...\"\n                            formControlName=\"amount\" />\n                        </mat-form-field>\n                        <div class=\"mt-n4 text-muted\">{{ aF.amount.value | currency: 'Kshs ' }}</div>\n                    </div>\n                    <div *ngIf=\"aF.amount.invalid && \n                    (aF.amount.touched || aF.amount.dirty)\"  \n                    class=\"invalid-feedback\">\n                        <div *ngIf=\"aF.amount.errors.required\">\n                            Rationalized unit price is required\n                        </div>\n                    </div>\n                </div>\n                <div class=\"btn-container d-flex justify-content-end\">\n                    <button mat-button mat-dialog-close\n                    type=\"button\"\n                    (click)=\"closeDialog()\">CLOSE</button>\n                    <button mat-button type=\"submit\"\n                    [class.spinner]=\"loading\" [disabled]=\"loading\">SUBMIT</button>\n                </div>\n            </form>\n        </div>\n    </div>\n    <!-- Start of product approval -->\n    <div mat-dialog-actions\n    class=\"w-100-p pt-16 pb-12 mt-n5 flex-column align-items-start\"\n    *ngIf=\"context === 'approve'\">\n        <div class=\"w-100-p\">\n            <ul class=\"list-unstyled\">\n                <li class=\"list-item d-flex\"\n                *ngIf=\"item?.item_name\">\n                    <div class=\"pr-3 font-weight-600\">Item name:</div> \n                    <div class=\"pl-2\"> {{ item?.item_data.name }} </div>\n                </li>\n                <li class=\"list-item d-flex\"\n                *ngIf=\"item?.allowance_name\">\n                    <div class=\"pr-3 font-weight-600\">Item name:</div> \n                    <div class=\"pl-2\"> {{ item?.allowance_data.name }} </div>\n                </li>\n                <li class=\"d-flex font-size-13 pt-2\"\n                *ngIf=\"!item?.allowance_data\">\n                    <div class=\"pr-32 font-weight-600\">Quantity:</div> \n                    <div> {{ item?.quantity | number: '1.0' }} </div>\n                    <div class=\"pl-1 pr-2\">@</div>\n                    <div> {{ item?.unit_price | currency: 'Kshs '}} </div>\n                </li>\n                <li class=\"d-flex font-size-13 pt-2\"\n                *ngIf=\"item?.allowance_data\">\n                    <div class=\"pr-24 font-weight-600\">Attendees:</div> \n                    <div class=\"font-weight-600 pl-1\"> {{ item?.head_count | number: '1.0' }} </div>\n                    <div class=\"px-2 font-weight-500\">for</div>\n                    <div class=\"font-weight-600\"> {{ item?.days | number: '1.0' }} </div>\n                    <div class=\"font-weight-500\">&nbsp;days</div> \n                        <div class=\"pl-1 pr-2\">@</div>\n                    <div> {{ item?.unit_price || item?.allowance_data.amount | currency: 'Kshs '}} </div>\n                </li>\n                <li class=\"d-flex font-size-13 pt-2\">\n                    <div class=\"pr-8 font-weight-600\">Applied Total: </div>\n                    <div>\n                        {{ item?.total | currency: 'Kshs ' }}\n                    </div>\n                </li>\n                <li class=\"d-flex font-size-13 pt-2\">\n                    <div class=\"pr-12 font-weight-600\">Rationalized: </div>\n                    <div>\n                        {{ item?.rationalized_total | currency: 'Kshs ' }}\n                    </div>\n                    <div class=\"text-muted pl-3\">\n                        (@&nbsp;{{ item?.rationalized_price | currency: 'Kshs ' }})\n                    </div>\n                </li>\n            </ul>\n        </div>\n        <div class=\"w-100-p\">\n            <form [formGroup]=\"adjustAmountForm\" name=\"frm\"\n            (ngSubmit)=\"submitTransitionFrm(adjustAmountForm)\">\n                <div class=\"w-100-p pt-1\">\n                    <div class=\"input-wrapper w-100-p\">\n                        <mat-form-field appearance=\"outline\" color=\"primary\"\n                        class=\"w-100-p pb-0 mb-0\">\n                            <mat-label>Approved Unit Price</mat-label>\n                            <input name=\"amount\" matInput\n                            placeholder=\"Kindly enter approved unit price...\"\n                            formControlName=\"amount\" />\n                        </mat-form-field>\n                        <div class=\"mt-n4 text-muted\">{{ aF.amount.value | currency: 'Kshs ' }}</div>\n                    </div>\n                    <div *ngIf=\"aF.amount.invalid && \n                    (aF.amount.touched || aF.amount.dirty)\"  \n                    class=\"invalid-feedback\">\n                        <div *ngIf=\"aF.amount.errors.required\">\n                            Approved unit price is required\n                        </div>\n                    </div>\n                </div>\n                <div class=\"btn-container d-flex justify-content-end\">\n                    <button mat-button mat-dialog-close\n                    type=\"button\"\n                    (click)=\"closeDialog()\">CLOSE</button>\n                    <button mat-button type=\"submit\"\n                    [class.spinner]=\"loading\" [disabled]=\"loading\">SUBMIT</button>\n                </div>\n            </form>\n        </div>\n    </div>\n    <!-- Start of reject workflow -->\n    <div mat-dialog-actions class=\"w-100-p pt-16 pb-12 mt-n5 flex-column align-items-start\"\n    *ngIf=\"context === 'reject'\">\n        <div class=\"context === 'reject'\">\n            <p>\n                Kindly confirm that you would like to reject the following\n                activity:\n            </p>\n            <div class=\"mb-3\">\n                <div class=\"d-flex\">\n                    <div class=\"text-muted pr-3\">\n                        Applied Amount:\n                    </div>\n                    <div class=\"font-weight-600\">\n                        {{ item?.total | currency: 'Kshs '}}\n                    </div>\n                </div>\n                <div class=\"d-flex pt-2\">\n                    <div class=\"text-muted pr-36\">\n                        Rationalized:\n                    </div>\n                    <div class=\"font-weight-600\">\n                        {{ item?.rationalized_total | currency: 'Kshs '}}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <form [formGroup]=\"commentForm\" name=\"frm\"\n        (ngSubmit)=\"submitTransitionFrm(commentForm)\" class=\"w-100-p\">\n            <div class=\"w-100-p pt-1\">\n                <div class=\"input-wrapper fullwidth\">\n                    <mat-form-field appearance=\"outline\"\n                    color=\"primary\" class=\"pb-0 mb-0 w-100-p\">\n                        <mat-label>Enter comment*</mat-label>\n                        <textarea name=\"comment\" id=\"\" matInput\n                        cols=\"30\" rows=\"6\" formControlName=\"comment\"\n                        placeholder=\"Kindly enter a comment...\"></textarea>\n                    </mat-form-field>\n                </div>\n                <div *ngIf=\"cF.comment.invalid && \n                (cF.comment.touched || cF.comment.dirty)\"  \n                class=\"invalid-feedback\">\n                    <div *ngIf=\"cF.comment.errors.required\">\n                        Comment is required\n                    </div>\n                </div>\n            </div>\n            <div class=\"btn-container d-flex justify-content-end w-100-p\">\n                <button mat-button mat-dialog-close\n                type=\"button\" (click)=\"closeDialog()\">CLOSE</button>\n                <button mat-button type=\"submit\"\n                [class.spinner]=\"loading\" [disabled]=\"loading\">\n                    SUBMIT\n                </button>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nimport { DataLayerService } from 'app/services/http/dataLayer.service';\nimport { get, isUndefined } from 'lodash';\n\n@Component({\n    selector: 'tabbed-dialog',\n    templateUrl: 'dynamic-table-dialog.component.html',\n    styles: ['dynamic-table-dialog.component.scss'],\n    providers: [DataLayerService],\n})\n\nexport class DynamicTableDialog implements OnInit {\n    loading: boolean;\n    organization: any;\n    comment: string;\n    configs: any;\n    context: string;\n    commentForm: FormGroup;\n    dialogForm: FormGroup;\n    adjustAmountForm: FormGroup;\n    item: any;\n    roles: Array<any> = [];\n\n    constructor(@Inject(MAT_DIALOG_DATA) public data: any,\n        private _snackBar: MatSnackBar,\n        private _dataLayer: DataLayerService,\n        private _formBuilder: FormBuilder,\n        private _dialogRef: MatDialogRef<DynamicTableDialog>) {}\n\n    openSnackBar(msg: string, action: string) {\n        this._snackBar.open(msg, action, {\n            duration: 20000,\n        });\n    }\n\n    formInit() {\n        this.dialogForm = this._formBuilder.group({\n            'group': ['', Validators.required],\n        });\n        this.adjustAmountForm = this._formBuilder.group({\n            'amount': ['', Validators.required],\n        });\n        this.commentForm = this._formBuilder.group({\n            'comment': ['', Validators.required],\n        });\n    }\n\n    submitForm(frm) {\n        if (frm.valid) {\n            this.dialogActions.approve(frm.value);\n        }\n    }\n\n    submitTransitionFrm(frm) {\n        if (frm.valid) {\n            console.log(frm);\n            this.transitionActions(frm.value);\n        }\n    }\n\n    submitTransition(transObj, feedback) {\n        const params = { \n            key: 'current_org_id', \n            value: this.organization \n        };\n        this._dataLayer.update(\n            this.configs.store, this.item.id, transObj, params)\n                .subscribe(resp => {\n                    console.log(resp);\n                    this.loading = false;\n                    this.closeDialog('refresh');\n                    this.openSnackBar(feedback.successMsg, 'CLOSE');\n                }, err => {\n                    this.loading = false;\n                    this.openSnackBar(feedback.errorMsg, 'CLOSE'); \n                });\n    }\n\n    transitionActions(frmObj) {\n        console.log(frmObj);\n        const amount = frmObj ? frmObj.amount : 0;\n        switch(this.context) {\n            case 'rationalize':\n                const ratObj = {\n                    rationalized_price: amount,\n                    status: 'RATIONALIZED',\n                };\n                const ratFeedbackObj = {\n                    successMsg: 'Item appproved successfully',\n                    errorMsg: 'An error occurred. Kindly try again',\n                };\n                this.submitTransition(ratObj, ratFeedbackObj);\n                break;\n            case 'approve':\n                const apprObj = {\n                    actual_price: amount,\n                    status: 'SASDEF_APPROVED',\n                };\n                const apprFeedbackObj = {\n                    successMsg: 'Item appproved successfully',\n                    errorMsg: 'An error occurred. Kindly try again',\n                };\n                this.submitTransition(apprObj, apprFeedbackObj);\n                break;\n            case 'reject':\n                const rejectFeedbackObj = {\n                    status: 'REJECTED',\n                    comment: frmObj.comment,\n                };\n                const rejFeedbackObj = {\n                    successMsg: 'Item rejected successfully',\n                    errorMsg: 'An error occurred. Kindly try again',\n                };\n                this.submitTransition(rejectFeedbackObj, rejFeedbackObj);\n                break;\n            default:\n                throw new Error('No relevant transition action given');\n        }\n    }\n\n    get f() { return this.dialogForm.controls };\n    get cF() { return this.commentForm.controls };\n    get aF() { return this.adjustAmountForm.controls };\n\n    getUserOrganization() {\n        const organization = JSON.parse(\n            localStorage.getItem('organization'));\n        this.organization = get(organization, 'organization', null);\n    }\n\n    getRoles() {\n        this._dataLayer.list('user-groups', {})\n            .subscribe(resp => {\n                this.roles = resp['results'];\n            }, err => console.log(err));\n    }\n\n    updateRecord(patchObj, feedback, urlEnd) {\n        this.loading = true;\n        const params = { \n            key: 'current_org_id', \n            value: this.organization \n        };\n        const idUrlEnd = `${this.data.item.id}/${urlEnd}/`;\n        this._dataLayer.postTransition(this.configs.store, \n            patchObj, idUrlEnd, params)\n            .subscribe(resp => {\n                this.loading = false;\n                this.closeDialog('refresh');\n                this.openSnackBar(feedback.successMsg, 'CLOSE');\n            }, err => {\n                this.loading = false;\n                this.openSnackBar(feedback.errorMsg, 'CLOSE');\n            })\n    }\n\n    dialogActions: any = {\n        approve: (frmVal?) => {\n            const approveObj = {\n                ...this.data.item,\n                ...frmVal,\n                review_state: 'APPROVED',\n                review_comment: this.comment || 'Request approved',\n            };\n            const feedback = {\n                successMsg: 'Request has been appproved successfully',\n                errorMsg: 'An error occurred. Kindly try again',\n            };\n            this.updateRecord(approveObj, feedback, 'approve');\n        },\n        reject: () => {\n            const rejectObj = {\n                ...this.data.item,\n                review_state: 'REJECTED',\n                review_comment: this.comment || 'Request rejected',\n            };\n            const feedback = {\n                successMsg: 'Request has been rejected successfully',\n                errorMsg: 'An error occurred. Kindly try again'\n            };\n            this.updateRecord(rejectObj, feedback, 'reject');\n        }\n    }\n\n    setConfigs() {\n        const context = this.data.configs.context;\n        this.context = context;\n        if (!isUndefined(context)) {\n            switch(context) {\n                case 'rationalize':\n                    this.configs = {\n                        ...this.configs,\n                        title: 'Rationalize item amount',\n                    };\n                    this.item = { ...this.data.item };\n                    this.aF.amount.setValue(this.item.unit_price);\n                    break;\n                case 'approve':\n                    this.configs = {\n                        ...this.configs,\n                        title: 'Approve item amount'\n                    };\n                    this.item = { ...this.data.item };\n                    this.aF.amount.setValue(this.item.rationalized_price);\n                    break;\n                case 'reject':\n                    this.configs = {\n                        ...this.configs,\n                        title: 'Reject item',\n                    };\n                    this.item = { ...this.data.item };\n                    break;\n                default:\n                    throw new Error('Provide a valid choice');\n            }\n        }\n    }\n\n    closeDialog(arg?) {\n        this._dialogRef.close(arg);\n    }\n\n    ngOnInit() {\n        this.getUserOrganization();\n        this.formInit();\n        this.getRoles();\n        this.configs = { ...this.data.configs };\n        this.setConfigs();\n    }\n}","import { Injectable } from '@angular/core';\nimport * as _ from 'lodash';\nimport { each, get, has, isUndefined } from 'lodash';\nimport * as moment from 'moment';\nimport { \n    DataLayerService \n} from '../../../../app/services/http/dataLayer.service';\n\n@Injectable()\n\nexport class DynamicTableService {\n    funcArr = [\n        { store: 'accept-events', func: 'acceptEvent' },\n        { store: 'assign-vehicle', func: 'assignVehicle' },\n        { store: 'visit-purposes', func: 'editInline' },\n        { store: 'invites', func: 'editInline' },\n        { store: 'organisations', func: 'editInline' },\n        { store: 'document-types', func: 'editInline' },\n        { store: 'organization-financial-years', func: 'editInline' },\n        { \n            store: 'organization-budget-activities', \n            func: 'setOrgInline',\n            extraParams: {\n                key: 'current_org_id',\n            }\n        },\n        {\n            store: 'organization-budget-activity-items',\n            func: 'setOrgInline',\n        },\n        {\n            store: 'organization-budget-activity-attendees',\n            func: 'setOrgInline',\n        },\n        {\n            store: 'organization-budget-activity-allowances',\n            func: 'setOrgInline',\n        },\n        { store: 'organization-roles', func: 'editInline' },\n        { store: 'organization-members', func: 'editInlineMultiple' },\n        { store: 'application-items', func: 'setOrgInline' },\n        { store: 'application-allowances', func: 'setOrgInline' },\n        { store: 'application-activity-items', func: 'setOrgInline' },\n        { store: 'application-attendees', func: 'setOrgInline' },\n        { store: 'application-activity-attendees', func: 'setOrgInline' },\n        { store: 'application-alternate-funding-sources', func: 'setOrgInline' },\n        { store: 'sports-categories', func: 'editInline' },\n        { store: 'billable-items', func: 'editInline' },\n        { store: 'allowances', func: 'editInline' },\n        { store: 'users', func: 'editInline' }\n    ];\n\n    constructor(private dataLayer: DataLayerService) {}\n\n    getServiceFxn(store) {\n        const fxnObj = _.find(this.funcArr, { store });\n        if (!_.isUndefined(fxnObj)) {\n            return fxnObj.func;\n        }\n    }\n\n    errHandler(cmpt) {\n        cmpt.errors = [];\n        cmpt.submitted = false;\n        cmpt.error = ['Sorry an error occurred'];\n        cmpt.errors.push(cmpt.error[0]);\n    }\n\n    prefillModel(cmpt?, model?, store?) {\n        if (store === 'branches') {\n            const obj = {\n                organization_name: cmpt.tabbedItem['name']\n            };\n            model = { ...model, ...cmpt.listParams };\n            model = {...model, ...obj };\n        } else if (store === 'users') {\n            model = { ...model, ...cmpt.listParams };\n        }\n    }\n\n    setOrgInline(model, cmpt, store) {\n        const modelObj = { \n            ...model, \n            organization: get(cmpt.tabbedItem, 'organization', null)\n        };\n        const orgId = get(JSON.parse(\n            localStorage.getItem('organization')), 'organization', null);\n        const editParam = { key: 'current_org_id', value: orgId };\n        this.editInline(modelObj, cmpt, store, editParam);\n    }\n\n    editInlineMultiple(model, cmpt, store) {\n        const userFields = ['first_name', 'last_name', 'other_names',\n            'email', 'phone_number', 'dob', 'gender', 'id_number',\n            'passport_number', 'federation_number' ];\n        each(userFields, field => {\n            model['user'] = { ...model['user'], [field]:  model[field] };\n            delete model[field];\n        });\n        const orgId = get(JSON.parse(\n            localStorage.getItem('organization')), 'organization', null);\n        const editParam = { key: 'current_org_id', value: orgId };\n        // if (has(model, 'id')) delete model['user']['email'];\n        if (has(model, 'id')) delete model['user'];\n        this.editInline(model, cmpt, store, editParam);\n    }\n\n    preProcessModel(prefillObj) {\n        const userFields = ['first_name', 'last_name', 'other_names',\n            'email', 'phone_number', 'dob', 'gender', 'id_number',\n            'passport_number', 'federation_number' ];\n        each(userFields, field => {\n            prefillObj = { ...prefillObj, [field]: get(prefillObj['user'], field, null) }\n        });\n        delete prefillObj['user'];\n        return prefillObj;\n    }\n\n    editInline(model, cmpt, store, editParam?) {\n        store = store === 'users' ? 'register' : store;\n        if (model.id) {\n            cmpt.submitted = true;\n            this.dataLayer.update(store, model.id, model, editParam)\n            .subscribe((resp: any) => {\n                cmpt.submitted = false;\n                const lngMsg = 'Record updated successful';\n                this.dataLayer.openDynamicSnackBar(lngMsg, 'success');\n                cmpt.showToast('bottom-right', 'success', 'Updating record', lngMsg);\n                cmpt.getData();\n                if (!isUndefined(cmpt.postCRUDFxn)) {\n                    cmpt.postCRUDFxn.emit();\n                }\n            }, err => { \n                this.errHandler(err); \n                cmpt.submitted = false;\n                const errMsg = 'An error occurred during updated. Try again';\n                this.dataLayer.openDynamicSnackBar(errMsg, 'error');\n            })\n        } else {\n            if (store === 'register') {\n                model.rolesToBeAssigned.map(role => {\n                    delete role.roleCode;\n                    delete role.roleDescription;\n                    role.toBeAssignedThisRole = true;\n                    return role;\n                })\n                model.countyId = model.countyId || 1;\n                model.middleName = model.middleName || '';\n                delete model.confirm_password;\n            }\n            this.prefillModel(cmpt, model, store);\n            this.dataLayer.create(store, model, undefined, editParam)\n            .subscribe((resp: any) => {\n                cmpt.submitted = false;\n                const lngMsg = 'Record created successful';\n                this.dataLayer.openDynamicSnackBar(lngMsg, 'success')\n                cmpt.showToast('bottom-right', 'success', 'Creating record', lngMsg);\n                cmpt.toggleHeaderInline();\n                cmpt.getData();\n                if (!isUndefined(cmpt.postCRUDFxn)) {\n                    cmpt.postCRUDFxn.emit();\n                }\n            }, err => { \n                this.errHandler(err); \n                cmpt.submitted = false; \n                const errMsg = 'An error occurred during creation. Try again';\n                this.dataLayer.openDynamicSnackBar(errMsg, 'error');\n            })\n        }\n    }\n\n    addingItemtoModel(store) {\n        const storesArr = ['accept-events'];\n        const ind = _.indexOf(storesArr, store);\n        return ind >= 0;\n    }\n\n    receiveModel(model, store, cmpt) {\n        cmpt.submitted = true;\n        const currFxn = this.getServiceFxn(store);\n        this[currFxn](model, cmpt, store);\n    }\n}","import { Component, OnInit, Input, Output, OnChanges, SimpleChanges, EventEmitter } from '@angular/core';\nimport * as _ from 'lodash';\n@Component({\n    selector: 'pagination',\n    styleUrls: ['./pagination.component.scss'],\n    template: `\n        <caption class=\"d-flex flex-1 w-100-p px-3 pb-3\">   \n            <div class=\"col-md-12\">\n                <ul class=\"list-inline\">\n                    <li class=\"list-inline-item text-muted fs-16 pt-2\">\n                        Page {{controls.currentPage}} \n                        ({{controls?.fromItem}} - {{controls?.toItem}} of {{controls?.count}} Items)\n                    </li>\n                    <li class=\"list-inline-item float-right d-flex justify-content-end\">\n                        <ul class=\"pagination\">\n                            <li class=\"page-item\n                            {{controls.previous === null ? 'disabled' : 'activeCtrl'}}\">\n                                <a class=\"page-link px-2\" (click)=\"goToPrev()\">\n                                    <mat-icon>keyboard_arrow_left</mat-icon>\n                                </a>\n                            </li>\n                            <li class=\"page-item disabled\">\n                                <a class=\"page-link font-size-18 pb-8 px-12\"\n                                style=\"padding-top: 0.6rem;\">\n                                    {{controls.currentPage}}\n                                </a>\n                            </li>\n                            <li class=\"page-item \n                            {{controls.next === null ? 'disabled' : 'activeCtrl'}}\">\n                                <a class=\"page-link px-2\" (click)=\"goToNext()\">\n                                    <mat-icon>keyboard_arrow_right</mat-icon>\n                                </a>\n                            </li>\n                        </ul>\n                    </li>\n                </ul>\n            </div>\n        </caption>\n    `\n})\n\nexport class PaginationComponent implements OnInit, OnChanges {\n    @Input() controls: any;\n\n    @Output() goToPage = new EventEmitter();\n\n    currentPage: number = 1;\n    constructor() {}\n\n    setPageInterval() {\n        if (_.has(this.controls, 'next') && !_.isNull(this.controls.next)) {\n            var pageArr = this.controls.next.split('?')[1].split('&');\n            pageArr.map(ctrl => {\n                if (ctrl.includes('limit')) {\n                    const countLimit = parseInt(ctrl.split('=')[1], 10);\n                    this.controls.pageLimit = countLimit;\n                } else if (ctrl.includes('offset')) {\n                    const currentOffset = parseInt(ctrl.split('=')[1], 10);\n                    this.controls.toItem = currentOffset;\n                    this.controls.offset = currentOffset;\n                    this.controls.fromItem = 1 + (currentOffset - this.controls.pageLimit);\n                    this.controls.currentPage = currentOffset/this.controls.pageLimit;\n                }\n            });\n        } else if (_.isNull(this.controls.next) && !_.isNull(this.controls.previous)) {\n            var pageArr = this.controls.previous.split('?')[1].split('&');\n            pageArr.map(ctrl => {\n                if (ctrl.includes('limit')) {\n                    const countLimit = parseInt(ctrl.split('=')[1], 10);\n                    const currentPage = Math.ceil(this.controls.count/countLimit);\n                    this.controls.fromItem = (countLimit * (currentPage - 1) + 1 );\n                    this.controls.toItem = this.controls.count;\n                    this.controls.offset = currentPage * countLimit;\n                    this.controls.pageLimit = countLimit;\n                    this.controls.currentPage = currentPage;\n                }\n            })\n        } \n        else {\n            var fixedCtrls = {};\n            if (_.has(this.controls, 'results')) {\n                fixedCtrls = { \n                    fromItem: 1, \n                    toItem: this.controls.results.length \n                };\n            } else {\n                fixedCtrls = { fromItem: 0,  toItem: 0 };   \n            }\n            this.controls = { ...this.controls, ...fixedCtrls };\n        }\n    }\n\n    goToNext() {\n        const offsetCount = this.controls.toItem;\n        const nxtObj = {  offset: offsetCount };\n        this.goToPage.emit(nxtObj);\n    }\n\n    goToPrev() {\n        const offsetCount = this.controls.offset - (this.controls.pageLimit * 2);\n        const prevObj = { offset: offsetCount };\n        this.goToPage.emit(prevObj);\n    }\n\n    ngOnInit() {}\n\n    ngOnChanges(changes: SimpleChanges) {\n        const pagination = { \n            currentPage: this.currentPage || 1\n        };\n        this.controls = { ...pagination };\n        if (_.has(changes, 'controls')) {\n            this.controls = { \n                ...this.controls,\n                ...changes.controls.currentValue \n            };\n            this.setPageInterval();\n        }\n    }\n}","import { Component, Input, OnInit  } from '@angular/core';\n\n@Component({\n    selector: 'compact-line',\n    template: `\n        <div class=\"d-flex\">\n            <div *ngIf=\"config?.fieldType === 'nested_string'\" >\n                <div *ngIf=\"item?.item_data\">\n                    {{ item?.item_data.name }} \n                </div>\n                <div *ngIf=\"item?.allowance_data\">\n                    {{ item?.allowance_data.name }} \n                </div>\n                <div *ngIf=\"config?.context === 'attendees' &&\n                item.member_data\"\n                class=\"font-size-13\">\n                    <span class=\"text-muted font-size-13\">For</span>\n                    {{ item?.member_data.user_name }}\n                </div>\n                <div *ngIf=\"config?.context === 'allowances'\"\n                class=\"font-size-13\">\n                    {{ item?.head_count }}&nbsp;\n                    <span class=\"text-muted font-size-13\">Attendees</span>\n                </div>\n                <div class=\"pt-1 d-flex\" *ngIf=\"item?.quantity\">\n                    <div class=\"font-size-13 text-muted\">\n                        {{ item?.quantity | number: '1.0' }}\n                    </div>\n                    <div class=\"font-size-13 pl-1\">@</div>\n                    <div class=\"font-size-13 pl-2 text-muted\">\n                        {{ item?.unit_price | currency: 'Kshs '}}\n                    </div>\n                </div>\n                <div class=\"pt-1 d-flex\" *ngIf=\"item?.allowance_data\">\n                    <div class=\"font-size-13 text-muted\">\n                        {{ item?.days | number: '1.0' }} day(s)\n                    </div>\n                    <div class=\"font-size-13 pl-1\">@</div>\n                    <div class=\"font-size-13 pl-2 text-muted\">\n                        {{ item?.unit_price || \n                            item?.allowance_data.amount | currency: 'Kshs '}}\n                    </div>\n                </div>\n            </div>\n            <div *ngIf=\"config?.fieldType === 'nested_totals'\">\n                <div class=\"d-flex\">\n                    <div class=\"font-size-13 text-muted pr-1\">Rationalized:</div> \n                    <div> {{ item?.rationalized_total || 0 | currency: 'Kshs ' }}</div>\n                </div>\n                <div class=\"d-flex\">\n                    <div class=\"font-size-13 text-muted pr-20\">Approved:</div> \n                    <div>{{ item?.actual_total || 0 | currency: 'Kshs '}}</div>\n                </div>\n            </div>\n            <div *ngIf=\"config?.fieldType === 'nested_status_total'\">\n                <div class=\"d-flex\">\n                    <div> {{ item?.total || 0 | currency: 'Kshs ' }}</div>\n                </div>\n                <div class=\"d-flex\">\n                    <div>\n                        <span class=\"badge {{ item?.status | lowercase }}\">\n                            {{item?.status | removeUnderscore }}\n                        </span>\n                    </div>\n                </div>\n            </div>\n\n            <!-- Start of member details -->\n            \n            <div *ngIf=\"config?.fieldType === 'nested_member'\" >\n                <div *ngIf=\"!item?.member\" class=\"d-flex\">\n                    <div class=\"pt-0\">\n                        <mat-icon class=\"font-size-16 text-danger\n                        mb-n3 mr-n2\">\n                            error_outline\n                        </mat-icon>\n                    </div>\n                    <div class=\"text-muted\">Provide member</div>\n                </div>\n                <div *ngIf=\"item?.member_data\"\n                    class=\"font-size-13 mt-n1\">\n                        <span class=\"text-muted font-size-13\">For</span>\n                        {{ item?.member_data.user_name }}\n                </div>\n                <div class=\"pt-1 d-flex pl-2 mt-n1\" *ngIf=\"item?.allowance_data\">\n                    <div class=\"font-size-13 text-muted\">\n                        {{ item?.days | number: '1.0' }} day(s)\n                    </div>\n                    <div class=\"font-size-13 pl-1\">@</div>\n                    <div class=\"font-size-13 pl-2 text-muted\">\n                        {{ item?.unit_price || \n                            item?.allowance_data.amount | currency: 'Kshs '}}\n                    </div>\n                </div>\n            </div>\n            <!-- End of member details -->\n\n            <!-- Activity line details -->\n            <div *ngIf=\"config?.fieldType === 'activity_details'\">\n                <div *ngIf=\"item?.budget_activity_item_data\">\n                    <div>\n                        <span class=\"text-muted font-size-13 font-weight-500\"> Total:&nbsp;</span>\n                        {{ item?.budget_activity_item_data?.actual_total | currency: 'Kshs '}}\n                    </div>\n                </div>\n                <div *ngIf=\"!item?.budget_activity_item_data\">\n                    <mat-icon>remove</mat-icon>\n                </div>\n                <div *ngIf=\"item?.budget_activity_item_data\">\n                    <div class=\"pt-1 d-flex\" *ngIf=\"item?.budget_activity_item_data.quantity\">\n                        <div class=\"font-size-13 text-muted\">\n                            {{ item?.budget_activity_item_data.quantity | number: '1.0' }}\n                        </div>\n                        <div class=\"font-size-13 pl-1\">@</div>\n                        <div class=\"font-size-13 pl-2 text-muted\">\n                            {{ item?.budget_activity_item_data.actual_price | currency: 'Kshs '}}\n                        </div>\n                    </div>\n                    <div class=\"pt-1 d-flex\" *ngIf=\"item?.budget_activity_item_data.allowance_data\">\n                        <div class=\"font-size-13 text-muted\">\n                            {{ item?.budget_activity_item_data.days | number: '1.0' }} day(s)\n                        </div>\n                        <div class=\"font-size-13 pl-1\">@</div>\n                        <div class=\"font-size-13 pl-2 text-muted\">\n                            {{ item?.budget_activity_item_data.unit_price || \n                                item?.budget_activity_item_data.allowance_data.actual_amount | currency: 'Kshs '}}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- End of activity line details -->\n        </div>\n    `,\n    styleUrls: ['compact-line-details.component.scss',\n        '../dynamic-table/dynamic-table.component.scss'],\n})\n\nexport class CompactLineDetailsComponent implements OnInit {\n    @Input() item: any;\n    @Input() config: any;\n\n    ngOnInit() {}\n}","<div class=\"px-16 pt-8 pb-20\">\n    <div mat-dialog-title class=\"pb-3 d-flex\">\n        <div class=\"title-text flex-fill\">\n            {{data?.configs.title || 'REVIEW COMPLAINT' }}\n        </div>\n        <div>\n            <mat-icon class=\"hover-pointer\"\n            (click)=\"closeDialog()\">close</mat-icon>\n        </div>\n    </div>\n    <div mat-dialog-content class=\"\">\n        <div>{{data?.configs.description}}</div>\n        <!-- Start of adding review attachment -->\n        <div class=\"\">\n            <div class=\"attachemnt-wrapper mb-1 pt-3\">\n                <input type=\"file\" [hidden]=\"true\" class=\"ng-hide\"\n                id=\"input-attachment\" (change)=\"fileChange($event)\">\n                <label for=\"input-attachment\" class=\"mat-button w-100-p\n                d-flex pl-16 mat-elevation-z1 pt-2\">\n                    <div class=\"mt-2 pr-2\"><mat-icon class=\"\">\n                        {{fileName ? 'attachment' : 'cloud_upload' }}\n                    </mat-icon></div>\n                    <div class=\"pl-2\"> \n                        {{ fileName || 'Upload Approval Attachments' }} \n                    </div>\n                </label>\n            </div>\n            <!-- Note input -->\n           \n        </div>\n    </div>\n    <div mat-dialog-actions class=\"w-100-p pt-16 pb-4\">\n        <form [formGroup]=\"commentForm\" name=\"fmr\" \n        (ngSubmit)=\"submitReview()\" class=\"w-100-p\">\n            <div class=\"w-100-p pt-1\">\n                <div class=\"input-wrapper w-100-p\">\n                    <mat-form-field appearance=\"outline\" color=\"primary\"\n                    class=\"w-100-p pb-0 mb-0\">\n                        <mat-label>Enter a comment</mat-label>\n                        <textarea name=\"notes\" matInput\n                        id=\"\" cols=\"30\" rows=\"6\" \n                        placeholder=\"Kindly enter a comment...\"\n                        formControlName=\"notes\"></textarea>\n                    </mat-form-field>\n                </div>\n                <div *ngIf=\"f.notes.invalid && \n                (f.notes.touched || f.notes.dirty)\"  \n                class=\"invalid-feedback\">\n                    <div *ngIf=\"f.notes.errors.required\">\n                        Comment is required\n                    </div>\n                </div>\n            </div>\n            <div class=\"btn-container d-flex justify-content-end\">\n                <button mat-button mat-dialog-close\n                type=\"button\"\n                (click)=\"closeDialog()\">CLOSE</button>\n                <button mat-button type=\"submit\"\n                [class.spinner]=\"loading\" [disabled]=\"loading\">\n                    {{data?.configs.action || 'SUBMIT' }}\n                </button>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nimport { DataLayerService } from 'app/services/http/dataLayer.service';\nimport { isUndefined } from 'lodash';\nimport { InlineReadonlyComponent } from '../inline-readonly/inline-readonly.component';\n\n@Component({\n    selector: 'inline-dialog',\n    templateUrl: 'inline-readonly-dialog.component.html',\n    styleUrls: ['inline-readonly-dialog.component.scss'],\n    providers: [DataLayerService],\n})\n\nexport class InlineReadOnlyDialog implements OnInit {\n    loading: boolean;\n    organization: any;\n    comment: string;\n    commentForm: FormGroup;\n    attachedDoc: any = {};\n    fileName: string;\n\n    constructor(@Inject(MAT_DIALOG_DATA) public data: any,\n        private _formBuilder: FormBuilder,\n        private _dataLayer: DataLayerService,\n        public _dialogRef: MatDialogRef<InlineReadOnlyDialog>) {}\n\n    setFileName() {\n        const strArr = this.attachedDoc.file.split('/');\n        this.fileName = strArr[strArr.length - 1];\n    }\n\n    fileChange(files) {\n        const file = files.target.files[0];\n        const fileFormData = {\n            file,\n            attachment_type: 'APPLICATION_DOCUMENT',\n        };\n        const formData = new FormData();\n        formData.append('file', fileFormData.file);\n        formData.append('attachment_type', fileFormData.attachment_type);\n\n        this._dataLayer.uploadFile('attachments', formData)\n            .subscribe(resp => {\n                this.attachedDoc = resp;\n                this.setFileName();\n            }, err => {\n                console.log(err);\n                const errMsg = 'An error occurred during file upload. Kindly try again';\n                this._dataLayer.openDynamicSnackBar(errMsg, 'error');\n            });\n    }\n\n    formInit() {\n        this.commentForm = this._formBuilder.group({\n            notes: [''],\n        });\n    }\n\n    submitTransition(configs, feedback) {\n        this.loading = true;\n        this._dataLayer.create('complaint-reviews', configs)\n            .subscribe(resp => {\n                console.log(resp);\n                this.loading = false;\n                this.closeDialog('refresh');\n                this._dataLayer.openDynamicSnackBar(feedback, 'success');\n                if (!isUndefined(this.fileName)) {\n                    const postObj = {\n                        organization: this.organization.organization,\n                        complaint_review: resp['id'],\n                        attachment: this.attachedDoc['id'],\n                    }\n                    const params = { \n                        key: 'current_org_id', \n                        value: this.organization.organization \n                    };\n                    this._dataLayer.create('complaint-review-attachments', \n                        postObj, undefined, params)\n                        .subscribe(resp => {\n                            \n                        }, err => {\n                            console.log(err);\n                            const errMsg = 'An error occurred. Kindly try again later';\n                            this._dataLayer.openDynamicSnackBar(errMsg, 'error');\n                        })\n                } else {\n                    this._dataLayer.openDynamicSnackBar(feedback, 'success');\n                }\n            }, err => {\n                console.log(err);\n                const errMsg = 'An error occurred. Kindly try again later';\n                this._dataLayer.openDynamicSnackBar(errMsg, 'error');\n            })\n    }\n\n    transitionDoc(model) {\n        const config = {\n            review_status: 'IN_REVIEW',\n            complaint: this.data.item.id,\n            notes: model.notes,\n            organization: this.organization.organization,\n        };\n        let feedback = 'Complaint has been successfully reviewed';\n        switch(this.data.context) {\n            case 'Review':\n                config.review_status = 'IN_REVIEW';\n                this.submitTransition(config, feedback);\n                break;\n            case 'Resolve':\n                config.review_status = 'RESOLVED';\n                feedback = 'Complaint has been successfully resolved';\n                this.submitTransition(config, feedback);\n            case 'Close':\n                config.review_status = 'CLOSED',\n                feedback = 'Complaint has been successfully closed';\n                this.submitTransition(config, feedback);\n                break;\n            default:\n                throw Error('You need to provide a valid state');\n        }\n    }\n\n    submitReview() {\n        if (this.commentForm.valid) {\n            const model = this.commentForm.value;\n            this.transitionDoc(model);\n        }\n    }\n\n    get f() { return this.commentForm.controls }\n\n    closeDialog(arg?) {\n        this._dialogRef.close(arg);\n    }\n\n    ngOnInit() {\n        this.formInit();\n        this.organization = JSON.parse(\n            localStorage.getItem('organization'));\n    }\n}","<div class=\"w-100-p\">\n    <mat-card class=\"p-0\">\n        <div class=\"card-header border-bottom-0\" mat-card-header>\n            <div class=\"w-100-p d-flex justify-content-end pb-3 pr-12\">\n                <mat-icon class=\"hover-pointer font-size-32\"\n                (click)=\"toggleReadOnly()\">close</mat-icon>\n            </div>\n        </div>\n        <mat-card-content class=\"px-12 pt-12\">\n            <div class=\"w-100-p title-section d-flex pb-20 align-items-center\">\n                <div class=\"avatar pl-16 pr-52\">\n                    <mat-icon class=\"font-size-70\">feedback</mat-icon>\n                </div>\n                <div class=\"pl-28 flex-fill\">\n                    <div class=\"font-size-20 pt-16\">\n                        <span class=\"text-muted\">By:</span>\n                        &nbsp;{{ item?.full_name }}\n                    </div>\n                    <div class=\"d-flex pt-8\">\n                        <div class=\"d-flex pr-16\">\n                            <div class=\"pr-1\">\n                                <mat-icon class=\"font-size-20\">phone</mat-icon></div>\n                            <div>{{ item?.phone_number }}</div>\n                        </div>\n                        <div class=\"d-flex pr-16\">\n                            <div class=\"pr-1\" >\n                                <mat-icon class=\"font-size-20\">mail</mat-icon></div>\n                            <div>{{ item?.email }}</div>\n                        </div>\n                        <div>\n                            <span class=\"badge badge {{ item?.status | lowercase }}\">\n                                {{ item?.status }}\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    <button mat-raised-button *ngIf=\"item.status === 'PENDING'\"\n                    (click)=\"openDialog('Review')\">\n                        REVIEW\n                    </button>\n                    <button mat-raised-button color=\"success\"\n                    *ngIf=\"item.status === 'IN_REVIEW'\"\n                    (click)=\"openDialog('Resolve')\">\n                        RESOLVE\n                    </button>\n                    <button mat-raised-button color=\"warn\"\n                    *ngIf=\"item.status === 'PENDING' || item.status === 'IN_REVIEW'\"\n                    (click)=\"openDialog('Close')\">\n                        CLOSE\n                    </button>\n                </div>\n            </div>\n            <!-- Start of message content sections -->\n            <div class=\"content section pt-16 pb-28 pl-20 pr-12\">\n                <div class=\"w-100-p pb-32\">\n                    <div class=\"card\">\n                        <div class=\"card-header py-12 pl-16\">\n                            <span class=\"text-muted\">Subject:</span>&nbsp;&nbsp;{{ item?.subject }}\n                        </div>\n                        <div class=\"card-body pl-16\">\n                            <div class=\"font-size-14 text-muted pb-3\">Message</div>\n                            <div class=\"pb-16\">\n                                {{ item?.body}}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"w-100-p pb-12\">\n                    <div class=\"card\">\n                        <div class=\"card-header pt-12 pb-8 d-flex\">\n                            <div><mat-icon>assessment</mat-icon></div>\n                            <div class=\"font-size-14 pl-2\">&nbsp;Complaint Status</div>\n                        </div>\n                        <div class=\"card-body p-0\">\n                            <table class=\" mb-32\">\n                                <thead>\n                                    <tr>\n                                        <th>Status</th>\n                                        <th>Notes</th>\n                                        <th>Attachment</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr *ngFor=\"let item of list\">\n                                        <td>\n                                            <span class=\"badge {{item?.review_status | lowercase }}\">\n                                                {{ item?.review_status | removeUnderscore }}\n                                            </span>\n                                        </td>\n                                        <td>\n                                            {{ item?.notes }}\n                                        </td>\n                                        <td>\n                                            <span *ngIf=\"item?.file\">\n                                                <a mat-stroked-button download target=\"_blank\"\n                                                [attr.href]=\"item['file']['file']\">\n                                                    <mat-icon>cloud_download</mat-icon>&nbsp;\n                                                    Download\n                                                </a>\n                                            </span>\n                                            <span *ngIf=\"!item?.file\" class=\"d-flex ml-2\">\n                                                <span class=\"badge badge-secondary p-2\">\n                                                    No Attachment\n                                                </span>\n                                            </span>\n                                        </td>\n                                    </tr>\n                                    <tr *ngIf=\"loading\">\n                                        <td colspan=\"4\">\n                                            <div class=\"d-flex justify-content-center py-20\">\n                                                <mat-spinner diameter=\"40\"></mat-spinner>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                    <tr *ngIf=\"!loading && !list.length\">\n                                        <td colspan=\"4\">\n                                            <div>\n                                                <div class=\"alert alert-primary mb-0 pb-2 pt-3\">\n                                                    <div class=\"d-flex align-items-center\">\n                                                        <div class=\"pr-20\">\n                                                            <mat-icon>\n                                                                info_circle\n                                                            </mat-icon>\n                                                        </div>\n                                                        <div class=\"flex-fill\">\n                                                            There is currently no status changes for this complaint.\n                                                            Get started by reviewing this complaint\n                                                        </div>\n                                                        <div class=\"pr-8\">\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </mat-card-content>\n    </mat-card>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { DataLayerService } from 'app/services/http/dataLayer.service';\nimport { InlineReadOnlyDialog } from '../inline-readonly-dialog/inline-readonly-dialog.component';\n\n@Component({\n    selector: 'inline-readonly',\n    templateUrl: './inline-readonly.component.html',\n    styleUrls: ['inline-readonly.component.scss', \n        '../dynamic-table/dynamic-table.component.scss'],\n    providers: [DataLayerService],\n})\n\nexport class InlineReadonlyComponent implements OnInit {\n    @Input() item: any;\n\n    @Output() toggleRow = new EventEmitter();\n    @Output() refreshList = new EventEmitter();\n\n    list: Array<any> = [];\n    loading: boolean;\n    organization: any;\n    configs: any;\n\n    constructor(private _dataLayer: DataLayerService,\n        private _dialog: MatDialog) {}\n\n    setConfigs(action) {\n        switch(action) {\n            case 'Review':\n                return {\n                    title: 'Review Complaint',\n                    description: `Kidnly verify that you would indeed like\n                        to review this complaint.`,\n                    action: 'REVIEW',\n                    context: 'Review',\n                };\n            case 'Resolve':\n                return {\n                    title: 'Resolve Complaint',\n                    description: ``,\n                    action: 'RESOLVE',\n                    context: 'Resolve',\n                };\n            case 'Close':\n                return {\n                    title: 'Close Complaint',\n                    description: ``,\n                    action: 'CLOSE',\n                    context: 'Close',\n                }\n            default: \n                throw Error('Provide a valid choice');\n        }\n    }\n\n    openDialog(action) {\n        const item = this.item;\n        const configs:any = this.setConfigs(action);\n        const dialogRef = this._dialog.open(InlineReadOnlyDialog, {\n            data: {\n                item,\n                configs,\n                context: configs.context,\n            },\n            width: '45%',\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result === 'refresh') {\n                this.refreshList.emit();\n            }\n        })\n    }\n\n    toggleReadOnly() {\n        this.toggleRow.emit(this.item);\n    }\n\n    fetchItemReviews() {\n        const params = {\n            current_org_id: this.organization.organization,\n            complaint: this.item.id,\n        };\n        this.loading = true;\n        this._dataLayer.list('complaint-reviews', params)\n            .subscribe((resp: any) => {\n                this.list = resp['results'];\n                this.loading = false;\n                this.list.forEach(review => {\n                    const params = {\n                        current_org_id: this.organization.organization,\n                        complaint_review: review['id'],\n                    };\n                    this._dataLayer.list('complaint-review-attachments', params)\n                        .subscribe((resp: any) => {\n                            const attachList = resp['result'] || [];\n                            if (attachList.length) {\n                                review['file'] = attachList[0]['attachment_data'];\n                            }\n                        })\n                })\n            }, err => {\n                console.log(err);\n                this.loading = false;\n            });\n    }\n\n    ngOnInit() {\n        this.organization = JSON.parse(localStorage.getItem('organization'));\n        this.fetchItemReviews();\n    }\n}","<mat-card class=\"table-cont w-100-p p-0 raised mb-5\"\n[class.noElevation]=\"noCard\">\n    <div matCardHeader class=\"card-header bg-white\"\n    *ngIf=\"!customHeader\">\n        <div class=\"d-flex pt-2 pb-1\">\n            <div class=\"flex-fill font-weight-600 font-size-16 pt-2 pl-3\">{{title}}</div>\n            <div class=\"d-flex flex-1 justify-content-end pr-3\">\n                <span *ngFor=\"let act of topActions\">\n                    <button class=\"pl-3\" \n                    mat-stroked-button color=\"accent\"\n                    (click)=\"activateAction[act.action](act.conf)\">\n                        <mat-icon>add</mat-icon>\n                        {{ act.btnText }}\n                    </button>\n                </span>\n            </div>\n            <!-- Search container -->\n            <div class=\"float-left d-flex flex-1\n            justify-content-end\" *ngIf=\"hasSearch\">\n                <!-- TODO: Implement search -->\n            </div>\n            <!-- End of search container -->\n        </div>\n        \n    </div>\n    <mat-card-content class=\"card-body p-0\">\n        <!-- Start of creation -->\n        <div class=\"header-form-cont pt-15 py-3 bg-light-grey\"\n        *ngIf=\"headerInline\" [ngClass]=\"{'px-5': !largForms, 'px-2': largeForms}\">\n            <div class=\"col-12 why\"\n            [ngClass]=\"{'col-lg-10': !largeForms, 'col-lg-11': largeForms}\"\n            style=\"margin: auto;\">\n                <mat-card class=\"card p-0\">\n                    <div class=\"card-header py-0\">\n                        <div class=\"d-flex py-2\">\n                            <div class=\"flex-fill pt-3\">\n                                ADD {{inlineHeaderConf.context | uppercase }}\n                            </div>\n                            <div>\n                                <span style=\"cursor: pointer;\"\n                                class=\"float-right font-size-28\n                                text-muted\" (click)=\"activateAction.inline()\">\n                                    &times;\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"card-body px-5 pt-5\">\n                        <!-- TODO: Implement creation form -->\n                        <dynamic-form \n                        btnClass=\"tiny mr-3\" [submitted]=\"submitted\" \n                        [baseCancel]=\"true\" btnStatus=\"primary\"\n                        [store]=\"inlineHeaderConf?.store\" btnText=\"SAVE\"\n                        (cancelFxn)=\"activateAction.inline()\"\n                        (submitModel)=\"receiveModel($event, inlineHeaderConf?.store)\">\n                        </dynamic-form>\n                    </div>\n                </mat-card>\n            </div>\n        </div>\n        <!-- End of creations -->\n        <table class=\"table row-border bordered w-100-p\">\n            <thead class=\"thead-light\">\n                <tr>\n                    <th scope=\"col\" \n                    class=\"font-size-13 py-2\"\n                    *ngFor=\"let header of headers\">\n                        {{ header?.title }}\n                    </th>\n                </tr>\n            </thead>\n            <tbody *ngIf=\"list.length\">\n                <tr scope=\"row\" *ngFor=\"let item of list\">\n                    <td *ngFor=\"let td of rows\" \n                    class=\"py-2\"\n                    [hidden]=\"item.showInline\">\n                        <span *ngIf=\"td.type === 'string'\"\n                        class=\"font-size-14\">\n                            {{ replaceUnderscore(item[td.key]) }}\n                            <div style=\"margin-top: -1rem;\"\n                            *ngIf=\"!item[td.key]\">\n                                <mat-icon>\n                                    minimize\n                                </mat-icon>\n                            </div>\n                        </span>\n                        <span *ngIf=\"td.type === 'date'\"\n                        class=\"font-size-14\">\n                            {{ item[td.key] | date: 'dd-MM-yyyy' }}\n                        </span>\n                        <span *ngIf=\"td.type === 'currency'\"\n                        class=\"font-size-14\">\n                            {{ item[td.key] | currency: 'Kshs '}}\n                        </span>\n                        <span *ngIf=\"td.type === 'number'\"\n                        class=\"font-size-14\">\n                            {{ item[td.key] | number }}\n                        </span>\n                        <span *ngIf=\"td.type === 'status'\">\n                            <span class=\"badge {{item[td.key] | lowercase }} \n                            p-2\">\n                                {{ item[td.key] | removeUnderscore }}\n                            </span>                            \n                        </span>\n                        <span *ngIf=\"td.type === 'nested'\">\n                            <nested-string [type]=\"td.fieldType\"\n                            [config]=\"td\" [item]=\"item\">\n                            </nested-string>\n                        </span>\n                        <div *ngIf=\"td.type === 'compact-line'\">\n                            <compact-line [item]=\"item\"\n                            [config]=\"td\"></compact-line>\n                        </div>\n                        <span *ngIf=\"td.type === 'boolean'\">\n                            <mat-icon *ngIf=\"item[td.key]\"\n                            class=\"font-size-26 text-success\">check</mat-icon>\n                            <mat-icon *ngIf=\"!item[td.key]\"\n                            class=\"font-size-26 text-danger\">close</mat-icon>\n                        </span>\n                    </td>\n                    <td *ngIf=\"hasAction && !item.showInline\"\n                    class=\"py-0\">\n                        <button mat-raised-button [color]=\"act.status\"\n                        *ngFor=\"let act of actions\"\n                        class=\"{{ act.customClass }}\"\n                        [disabled]=\"stateChecker(item, act.modalConf)\"\n                        (click)=\"gridActions[act.action](item, act.modalConf)\">\n                            {{ act?.btnText }}\n                        </button>\n                        <!-- Start of drop down actions -->\n                        <button mat-mini-fab color=\"default\"\n                        class=\"mat-elevation-z0 border bg-light h-32 w-32\"\n                        aria-label=\"Click to select more actions\"\n                        [matMenuTriggerFor]=\"menu\"\n                        *ngIf=\"dropDownActions && dropDownActions.length\">\n                            <mat-icon class=\"mt-n2 font-size-20\">more_vert</mat-icon>\n                        </button>\n                        <!-- Start of dropdown menu -->\n                        <mat-menu #menu=\"matMenu\">\n                            <button mat-menu-item \n                            *ngFor=\"let act of actChecker(item)\"\n                            (click)=\"gridActions[act.action](item, act.modalConf)\">\n                                <mat-icon class=\"{{ act?.class || 'text-primary'}} \n                                font-size-18 mr-0\">{{ act?.icon }}</mat-icon>\n                                {{ act?.btnText }}\n                            </button>\n                            <!-- <button mat-menu-item \n                            *ngFor=\"let act of dropDownActions\"\n                            (click)=\"gridActions[act.action](item, act.modalConf)\">\n                                <mat-icon class=\"{{ act?.class || 'text-primary'}} \n                                font-size-18 mr-0\">{{ act?.icon }}</mat-icon>\n                                {{ act?.btnText }}\n                            </button> -->\n                        </mat-menu>\n                    </td>\n                    <td *ngIf=\"item.showInline\"\n                    [attr.colspan]=\"headers.length\"\n                    class=\"bg-light-grey py-3 px-5\">\n                        <div class=\"col-12 col-lg-10\"\n                        style=\"margin: auto;\" *ngIf=\"!item.readOnly\">\n                            <mat-card class=\"card p-0\">\n                                <div class=\"card-header py-0\">\n                                    <div class=\"d-flex py-2\">\n                                        <div class=\"flex-fill pt-3\">\n                                            EDIT {{inlineConf?.context | uppercase }}\n                                        </div>\n                                        <div>\n                                            <span style=\"cursor: pointer;\"\n                                            class=\"font-size-28 text-muted\"\n                                            (click)=\"toggleInlineRow(item)\">\n                                                &times;\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"card-body px-5 pt-5\">\n                                    <!-- TODO: Implement inline form -->\n                                    <dynamic-form btnText=\"SAVE\"\n                                    btnClass=\"tiny\" [model]=\"selectedItem\"\n                                    [submitted]=\"submitted\" [baseCancel]=\"true\"\n                                    [store]=\"inlineConf?.store\" btnStatus=\"primary\"\n                                    (cancelFxn)=\"toggleInlineRow(item)\"\n                                    (submitModel)=\"receiveModel($event, inlineConf?.store)\">\n                                    </dynamic-form>\n                                </div>\n                            </mat-card>\n                        </div>\n                        <div class=\"w-100-p bg-light-grey px-12 py-3\"\n                        *ngIf=\"item.readOnly\">\n                            <inline-readonly [item]=\"item\"\n                            (refreshList)=\"getData()\"\n                            (toggleRow)=\"toggleReadOnly($event)\"></inline-readonly>\n                        </div>\n                    </td>\n                </tr>\n            </tbody>\n            <tbody *ngIf=\"!list?.length\">\n                <tr scope=\"row\" *ngIf=\"loading\">\n                    <td [attr.colspan]=\"headers?.length\">\n                        <div class=\"w-100-p d-flex justify-content-center py-16\">\n                            <mat-spinner diameter=\"45\"></mat-spinner>\n                        </div>\n                    </td>\n                </tr>\n                <tr scope=\"row\" *ngIf=\"!loading\">\n                    <td [attr.colspan]=\"headers?.length\">\n                        <div class=\"col-md-12\">\n                            <div class=\"text-center\">\n                                <mat-icon class=\"font-size-100 w-100-p text-muted\">folder_open</mat-icon>\n                            </div>\n                            <div class=\"col-md-12 text-center font-size-18 text-muted\"\n                            *ngIf=\"!loading\">\n                                No data present to display.\n                            </div>\n                            <div class=\"col-md-12 text-center font-size-18 pb-16\">\n                                <small *ngIf=\"!loading\">\n                                    Once a new recorded is added it will be displayed here.\n                                </small>\n                            </div>\n                        </div>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n        <pagination class=\"d-flex\" [controls]=\"paginationCtrl\" \n        (goToPage)=\"paginate($event)\"></pagination>\n    </mat-card-content>\n</mat-card>","import { Component, Input,  OnInit,  ViewChild, \n    OnDestroy, SimpleChange, OnChanges, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { FormControl } from '@angular/forms';\n\nimport * as _ from 'lodash';\nimport { find, get, has, indexOf, isUndefined } from 'lodash';\n\nimport { MatDialog } from '@angular/material/dialog';\nimport { \n    DynamicTableDialog \n} from '../dynamic-table-dialog/dynamic-table-dialog.component';\n\nimport { \n    DataLayerService \n} from '../../../../../app/services/http/dataLayer.service';\nimport { \n    DynamicTableService } from '../../services/dynamic-table.service';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\n\n    @Component({\n        selector: 'dynamic-table',\n        styleUrls: ['./dynamic-table.component.scss'],\n        templateUrl: './dynamic-table.component.html',\n        providers: [DataLayerService, DynamicTableService],\n    })\n\n    export class DynamicTableComponent implements OnInit, OnChanges ,OnDestroy {\n\n        @Input() title: string;\n        @Input() headers: Array<any> = [];\n        @Input() list: Array<any> = [];\n        @Input() listParams: any;\n        @Input() rows: Array<any> = [];\n        @Input() buttons: Array<any> =  [];\n        @Input ('no-card') noCard: boolean;\n        @Input ('has-action') hasAction: boolean;\n        @Input() topActions: Array<any> = [];\n        @Input() actions: Array<any> = [];\n        @Input() dropDownActions: Array<any> = [];\n        @Input() store: string;\n        @Input() tabbedItem: any = {};\n        @Input() hasSearch: boolean;\n        @Input() largeForms: boolean;\n        @Input() customHeader: boolean;\n\n        @Input() cmptParams: any;\n        @Input() modelKey: string;\n\n\n        @Input() addOrg: boolean = false;\n\n        @Output() postCRUDFxn = new EventEmitter();\n\n        self = this;\n        loading: boolean = false;\n        showModal: boolean;\n        submitted: boolean;\n        errors: any;\n        selectedItem: any;\n        inlineDetails: any;\n        paginationCtrl: any;\n        searchControl: FormControl;\n        debounce: number = 400;\n\n        modalConf: any;\n        msgSubscription: any;\n        inlineModalConf: any;\n        modalStatus: boolean = false;\n        inlineModalStatus: boolean = false;\n        headerInline: boolean = false;\n        inlineConf: any;\n        inlineHeaderConf: any;\n        cancelled: boolean;\n        organization: any = {};\n        params: any = {};\n\n        constructor(\n            private router: Router,\n            private http: HttpClient,\n            public _dialog: MatDialog,\n            protected dataLayer: DataLayerService,\n            private dataTableServ: DynamicTableService,\n        ) {\n\n        }\n\n        showToast() {}\n\n        openDialog(configs?, action?) {\n            const item = this.selectedItem;\n            const dialogRef = this._dialog.open(DynamicTableDialog, {\n                data: { item, configs, action },\n                width: configs.width || '40%',\n            });\n\n\n            dialogRef.afterClosed().subscribe(result => {\n                if (result === 'refresh') {\n                    this.getData();\n                }\n            })\n        }\n\n        toggleModal(row) {\n            this.selectedItem = row;\n            this.showModal = !this.showModal;\n        }\n\n        toggleReadOnly(event) {\n            console.log(event);\n            const currIndex = indexOf(this.list, find(this.list, { id: event.id }));\n            console.log(currIndex);\n            this.list[currIndex].readOnly = false;\n            this.list[currIndex].showInline = false;\n        }\n\n        fetchInline(row) {\n            const orgId = get(JSON.parse(\n                localStorage.getItem('organization')), 'organization', null);\n            let params = { current_org_id: orgId };\n            this.dataLayer.get(this.inlineConf.store, row.id, params)\n                .subscribe(resp => {\n                    this.selectedItem = resp;\n                }, err => {\n                    console.log(err);\n                })\n        }\n\n        toggleInlineRow(row) {\n            row.showInline = !row.showInline;\n            let params = {};\n            if (this.addOrg) {\n                const orgId = get(JSON.parse(\n                    localStorage.getItem('organization')), 'organization', null);\n                params = { current_org_id: orgId };\n                if (this.store === 'organization-join-requests') {\n                    params = { ...params, organization: orgId };\n                }\n                \n            }\n            if (row.id) {\n                this.dataLayer.get(this.inlineConf.store, row.id, params)\n                .subscribe(resp => {\n                    this.selectedItem = this.store === 'organization-members' \n                        ? this.dataTableServ.preProcessModel(resp)\n                        : resp;\n                }, err => {\n                    console.log(err);\n                })\n            }\n        }\n\n        stateChecker(row, btnConfigs) {\n            if (has(btnConfigs, 'disableStatus')) {\n                return indexOf(\n                    btnConfigs['disableStatus'], row['review_state']) >= 0;\n            }\n        }\n\n        gridActions = {\n            modal: (row, modalConf) => {\n                this.modalConf = modalConf;\n                this.selectedItem = row;\n                this.openDialog(modalConf, modalConf.btnText);\n            },\n            inline: (row, inlineConf) => {\n                this.inlineConf = inlineConf;\n                this.toggleInlineRow(row);\n            },\n            inlineReadOnly: (row, inlineConf) => {\n                this.inlineConf = inlineConf;\n                row.showInline = !row.showInline;\n                row.readOnly = !row.readOnly;\n                this.fetchInline(row);\n            },\n            inlineForm: (row, inlineConf) => {\n                this.inlineModalStatus = !this.inlineModalStatus;\n                this.selectedItem = row;\n                this.modalConf = row.editConfig;\n            },\n            route: (row, inlineConf) => {\n                const params = { id: row.id, ...inlineConf.queryParams };\n                this.router.navigate([inlineConf.link], {\n                    queryParams: params\n                })\n            },\n            tabDetails: (row, inlineConf) => {\n                let queryParams = { \n                    current: 1, step: 1, \n                    id: row.id,\n                };\n                if (has(inlineConf, 'qParam')) \n                    queryParams = { \n                        ...queryParams, \n                        [inlineConf.qParam]: row[inlineConf.qParam] \n                    }\n                this.router.navigate([inlineConf.link], { queryParams });\n            }\n        }\n\n        toggleHeaderInline() {\n            this.headerInline = !this.headerInline;\n        }\n\n        activateAction = {\n            inline: (conf?) => {\n                this.headerInline = !this.headerInline;\n                this.inlineHeaderConf = conf;\n            }\n        };\n\n        getData(dtParams?) {\n            this.loading = true;\n            const pageSize = { limit: 50 };\n            dtParams = {  ...dtParams, ...pageSize };\n            if (this.addOrg) {\n                this.organization = JSON.parse(localStorage.getItem('organization'));\n                const orgId = get(this.organization, 'organization', 'null');\n                dtParams = { ...dtParams, current_org_id: orgId };\n                if (this.store === 'organization-join-requests') {\n                    const orgType = get(this.organization, 'org_type', null);\n                    if (orgType !== 'SASDEF') {\n                        dtParams = { ...dtParams, organization: orgId };\n                    }\n                }\n            }\n            if (this.listParams) dtParams = { ...dtParams, ...this.listParams };\n            this.dataLayer.list(this.store, dtParams)\n            .subscribe(resp => {\n                this.loading = false;\n                this.list = has(resp, 'results') ? resp['results'] : resp;\n                this.paginationCtrl = { ...resp };\n            }, err => {\n                console.log(err);\n                this.loading = false;\n                const errMsg = 'An error occurred while retrieving records';\n                this.dataLayer.openDynamicSnackBar(errMsg, 'error');\n            })\n        }\n\n        addExternalParams(params) {\n            this.listParams = { ...this.listParams, ...params};\n            this.getData();\n        }\n\n        paginate(event) {\n            this.getData(event);\n        }\n\n        actChecker(item) {\n            const orgType = get(\n                JSON.parse(localStorage.getItem('organization')), 'org_type', null);\n            const statsChecker = (statusArr, bpTypesArr) => \n                indexOf(statusArr, item.status) >= 0 &&\n                    indexOf(bpTypesArr, orgType) >= 0\n            return !isUndefined(this.dropDownActions) ? this.dropDownActions.filter(item => {\n                const context = item.modalConf.context;\n                switch (context) {\n                    case 'Billable Item':\n                        const statusArr = ['DRAFT'];\n                        const bpTypesArr = ['SPORTS_ORGANIZATION', 'GOVERNMENT_AGENCY'];\n                        if (statsChecker(statusArr, bpTypesArr)) return item;\n                        break;\n                    case 'Attendee':\n                        const attStatusArr = ['DRAFT'];\n                        const attBpTypesArr = ['SPORTS_ORGANIZATION', 'GOVERNMENT_AGENCY'];\n                        if (statsChecker(attStatusArr, attBpTypesArr)) return item;\n                        break;\n                    case 'Allowance':\n                        const allStatusArr = ['DRAFT'];\n                        const allBpTypesArr = ['SPORTS_ORGANIZATION', 'GOVERNMENT_AGENCY'];\n                        if (statsChecker(allStatusArr, allBpTypesArr)) return item;\n                        break;\n                    case 'rationalize':\n                        const ratStatusArr = ['DRAFT'];\n                        const ratBpTypesArr = ['MINISTRY', 'SASDEF'];\n                        if (statsChecker(ratStatusArr, ratBpTypesArr)) return item;\n                        break;\n                    case 'approve':\n                        const appStatusArr = ['RATIONALIZED'];\n                        const appBpTypesArr = ['SASDEF'];\n                        if (statsChecker(appStatusArr, appBpTypesArr)) return item;\n                        break;\n                    case 'reject':\n                        const rejStatusArr = ['DRAFT', 'RATIONALIZED'];\n                        const rejBpTypesArr = ['MINISTRY', 'SASDEF'];\n                        if (statsChecker(rejStatusArr, rejBpTypesArr)) return item;\n                        break;\n                    default:\n                        throw new Error('Provide a valid action or context');\n                }\n                // return item;\n            }) : [];\n        }\n\n        ngOnInit() {\n            this.getData();\n            this.searchControl = new FormControl('');\n            this.searchControl.valueChanges\n            .pipe(debounceTime(this.debounce),\n            distinctUntilChanged())\n            .subscribe(query => {\n                if (query.length > 3) {\n                    let queryObj = { search: query };\n                    this.getData(queryObj);\n                }\n                if (_.isEmpty(query)) {\n                    this.getData();\n                }\n            });\n        }\n\n        ngOnChanges(changes: SimpleChanges) {\n            this.listParams = !_.isUndefined(changes['listParams'])\n                ? changes['listParams']['currentValue']\n                : this.listParams;\n            if (_.has(changes, 'tabbedItem')) {\n                if (!_.isEmpty(changes['tabbedItem']['currentValue'])) {\n                    this.tabbedItem = { \n                        ...this.tabbedItem,\n                        ...changes['tabbedItem']['currentValue']\n                    }\n                }\n            }\n            if (_.has(changes, 'cmptParams')) {\n                if (!_.isEmpty(changes['cmptParams']['currentValue'])) {\n                    const externalParams = changes['cmptParams']['currentValue'];\n                    this.addExternalParams(externalParams);\n                }\n            }\n        }\n\n        replaceUnderscore(str) {\n            return !_.isUndefined(str) && _.isString(str) ? \n                str.replace(/_/g, ' ') : str;\n        }\n\n        ngOnDestroy() {\n            \n        }\n\n        receiveModel(model, store) {\n            if (this.modelKey) {\n                const key = this.modelKey;\n                model = { \n                    ...model, \n                    [key]: this.tabbedItem['id'], \n                    organization: this.modelKey === 'organization' \n                        ? this.cmptParams['organization'] \n                        : get(this.organization, 'organization', null),\n                };\n            }\n            this.dataTableServ.receiveModel(model, store, this.self);\n        }\n\n        searchTerm(term) {\n            console.log(term);\n        }\n    }\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'page-container',\n    template: `<router-outlet></router-outlet>`,\n    styleUrls: ['./page-container.component.scss'],\n})\n\nexport class PageContainerComponent {}","import { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { _getShadowRoot, Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base reference size of the spinner.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/common';\n\nfunction MatProgressSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r0._spinnerAnimationLabel)(\"stroke-dashoffset\", ctx_r0._getStrokeDashOffset(), \"px\")(\"stroke-dasharray\", ctx_r0._getStrokeCircumference(), \"px\")(\"stroke-width\", ctx_r0._getCircleStrokeWidth(), \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r0._getCircleRadius());\n} }\nfunction MatProgressSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r1._getStrokeDashOffset(), \"px\")(\"stroke-dasharray\", ctx_r1._getStrokeCircumference(), \"px\")(\"stroke-width\", ctx_r1._getCircleStrokeWidth(), \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r1._getCircleRadius());\n} }\nfunction MatSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r0._spinnerAnimationLabel)(\"stroke-dashoffset\", ctx_r0._getStrokeDashOffset(), \"px\")(\"stroke-dasharray\", ctx_r0._getStrokeCircumference(), \"px\")(\"stroke-width\", ctx_r0._getCircleStrokeWidth(), \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r0._getCircleRadius());\n} }\nfunction MatSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r1._getStrokeDashOffset(), \"px\")(\"stroke-dasharray\", ctx_r1._getStrokeCircumference(), \"px\")(\"stroke-width\", ctx_r1._getCircleStrokeWidth(), \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r1._getCircleRadius());\n} }\nconst _c0 = \".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:currentColor}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\";\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n * @docs-private\n */\nconst BASE_STROKE_WIDTH = 10;\n// Boilerplate for applying mixins to MatProgressSpinner.\n/** @docs-private */\nclass MatProgressSpinnerBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatProgressSpinnerMixinBase = mixinColor(MatProgressSpinnerBase, 'primary');\n/** Injection token to be used to override the default options for `mat-progress-spinner`. */\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n// .0001 percentage difference is necessary in order to avoid unwanted animation frames\n// for example because the animation duration is 4 seconds, .1% accounts to 4ms\n// which are enough to see the flicker described in\n// https://github.com/angular/components/issues/8984\nconst INDETERMINATE_ANIMATION_TEMPLATE = `\n @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\n    0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\n    12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\n    12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\n    25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\n\n    25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\n    37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\n    37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\n    50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\n\n    50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\n    62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\n    62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\n    75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\n\n    75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\n    87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\n    87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\n    100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\n  }\n`;\n/**\n * `<mat-progress-spinner>` component.\n */\nclass MatProgressSpinner extends _MatProgressSpinnerMixinBase {\n    constructor(_elementRef, platform, _document, animationMode, defaults) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._document = _document;\n        this._diameter = BASE_SIZE;\n        this._value = 0;\n        this._fallbackAnimation = false;\n        /** Mode of the progress circle */\n        this.mode = 'determinate';\n        const trackedDiameters = MatProgressSpinner._diameters;\n        this._spinnerAnimationLabel = this._getSpinnerAnimationLabel();\n        // The base size is already inserted via the component's structural styles. We still\n        // need to track it so we don't end up adding the same styles again.\n        if (!trackedDiameters.has(_document.head)) {\n            trackedDiameters.set(_document.head, new Set([BASE_SIZE]));\n        }\n        this._fallbackAnimation = platform.EDGE || platform.TRIDENT;\n        this._noopAnimations = animationMode === 'NoopAnimations' &&\n            (!!defaults && !defaults._forceAnimations);\n        if (defaults) {\n            if (defaults.diameter) {\n                this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n    }\n    /** The diameter of the progress spinner (will set width and height of svg). */\n    get diameter() { return this._diameter; }\n    set diameter(size) {\n        this._diameter = coerceNumberProperty(size);\n        this._spinnerAnimationLabel = this._getSpinnerAnimationLabel();\n        // If this is set before `ngOnInit`, the style root may not have been resolved yet.\n        if (!this._fallbackAnimation && this._styleRoot) {\n            this._attachStyleNode();\n        }\n    }\n    /** Stroke width of the progress spinner. */\n    get strokeWidth() {\n        return this._strokeWidth || this.diameter / 10;\n    }\n    set strokeWidth(value) {\n        this._strokeWidth = coerceNumberProperty(value);\n    }\n    /** Value of the progress circle. */\n    get value() {\n        return this.mode === 'determinate' ? this._value : 0;\n    }\n    set value(newValue) {\n        this._value = Math.max(0, Math.min(100, coerceNumberProperty(newValue)));\n    }\n    ngOnInit() {\n        const element = this._elementRef.nativeElement;\n        // Note that we need to look up the root node in ngOnInit, rather than the constructor, because\n        // Angular seems to create the element outside the shadow root and then moves it inside, if the\n        // node is inside an `ngIf` and a ShadowDom-encapsulated component.\n        this._styleRoot = _getShadowRoot(element) || this._document.head;\n        this._attachStyleNode();\n        // On IE and Edge, we can't animate the `stroke-dashoffset`\n        // reliably so we fall back to a non-spec animation.\n        const animationClass = `mat-progress-spinner-indeterminate${this._fallbackAnimation ? '-fallback' : ''}-animation`;\n        element.classList.add(animationClass);\n    }\n    /** The radius of the spinner, adjusted for stroke width. */\n    _getCircleRadius() {\n        return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /** The view box of the spinner's svg element. */\n    _getViewBox() {\n        const viewBox = this._getCircleRadius() * 2 + this.strokeWidth;\n        return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /** The stroke circumference of the svg circle. */\n    _getStrokeCircumference() {\n        return 2 * Math.PI * this._getCircleRadius();\n    }\n    /** The dash offset of the svg circle. */\n    _getStrokeDashOffset() {\n        if (this.mode === 'determinate') {\n            return this._getStrokeCircumference() * (100 - this._value) / 100;\n        }\n        // In fallback mode set the circle to 80% and rotate it with CSS.\n        if (this._fallbackAnimation && this.mode === 'indeterminate') {\n            return this._getStrokeCircumference() * 0.2;\n        }\n        return null;\n    }\n    /** Stroke width of the circle in percent. */\n    _getCircleStrokeWidth() {\n        return this.strokeWidth / this.diameter * 100;\n    }\n    /** Dynamically generates a style tag containing the correct animation for this diameter. */\n    _attachStyleNode() {\n        const styleRoot = this._styleRoot;\n        const currentDiameter = this._diameter;\n        const diameters = MatProgressSpinner._diameters;\n        let diametersForElement = diameters.get(styleRoot);\n        if (!diametersForElement || !diametersForElement.has(currentDiameter)) {\n            const styleTag = this._document.createElement('style');\n            styleTag.setAttribute('mat-spinner-animation', this._spinnerAnimationLabel);\n            styleTag.textContent = this._getAnimationText();\n            styleRoot.appendChild(styleTag);\n            if (!diametersForElement) {\n                diametersForElement = new Set();\n                diameters.set(styleRoot, diametersForElement);\n            }\n            diametersForElement.add(currentDiameter);\n        }\n    }\n    /** Generates animation styles adjusted for the spinner's diameter. */\n    _getAnimationText() {\n        const strokeCircumference = this._getStrokeCircumference();\n        return INDETERMINATE_ANIMATION_TEMPLATE\n            // Animation should begin at 5% and end at 80%\n            .replace(/START_VALUE/g, `${0.95 * strokeCircumference}`)\n            .replace(/END_VALUE/g, `${0.2 * strokeCircumference}`)\n            .replace(/DIAMETER/g, `${this._spinnerAnimationLabel}`);\n    }\n    /** Returns the circle diameter formatted for use with the animation-name CSS property. */\n    _getSpinnerAnimationLabel() {\n        // The string of a float point number will include a period ‘.’ character,\n        // which is not valid for a CSS animation-name.\n        return this.diameter.toString().replace('.', '_');\n    }\n}\nMatProgressSpinner.ɵfac = function MatProgressSpinner_Factory(t) { return new (t || MatProgressSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatProgressSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatProgressSpinner, selectors: [[\"mat-progress-spinner\"]], hostAttrs: [\"role\", \"progressbar\", 1, \"mat-progress-spinner\"], hostVars: 10, hostBindings: function MatProgressSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-valuemin\", ctx.mode === \"determinate\" ? 0 : null)(\"aria-valuemax\", ctx.mode === \"determinate\" ? 100 : null)(\"aria-valuenow\", ctx.mode === \"determinate\" ? ctx.value : null)(\"mode\", ctx.mode);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\", mode: \"mode\", diameter: \"diameter\", strokeWidth: \"strokeWidth\", value: \"value\" }, exportAs: [\"matProgressSpinner\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatProgressSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatProgressSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatProgressSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._getViewBox());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [_c0], encapsulation: 2, changeDetection: 0 });\n/**\n * Tracks diameters of existing instances to de-dupe generated styles (default d = 100).\n * We need to keep track of which elements the diameters were attached to, because for\n * elements in the Shadow DOM the style tags are attached to the shadow root, rather\n * than the document head.\n */\nMatProgressSpinner._diameters = new WeakMap();\nMatProgressSpinner.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n];\nMatProgressSpinner.propDecorators = {\n    diameter: [{ type: Input }],\n    strokeWidth: [{ type: Input }],\n    mode: [{ type: Input }],\n    value: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-progress-spinner',\n                exportAs: 'matProgressSpinner',\n                host: {\n                    'role': 'progressbar',\n                    'class': 'mat-progress-spinner',\n                    '[class._mat-animation-noopable]': `_noopAnimations`,\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter',\n                    '[attr.aria-valuemin]': 'mode === \"determinate\" ? 0 : null',\n                    '[attr.aria-valuemax]': 'mode === \"determinate\" ? 100 : null',\n                    '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                    '[attr.mode]': 'mode'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_getViewBox()\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + _spinnerAnimationLabel\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:currentColor}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, { mode: [{\n            type: Input\n        }], diameter: [{\n            type: Input\n        }], strokeWidth: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\n/**\n * `<mat-spinner>` component.\n *\n * This is a component definition to be used as a convenience reference to create an\n * indeterminate `<mat-progress-spinner>` instance.\n */\nclass MatSpinner extends MatProgressSpinner {\n    constructor(elementRef, platform, document, animationMode, defaults) {\n        super(elementRef, platform, document, animationMode, defaults);\n        this.mode = 'indeterminate';\n    }\n}\nMatSpinner.ɵfac = function MatSpinner_Factory(t) { return new (t || MatSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSpinner, selectors: [[\"mat-spinner\"]], hostAttrs: [\"role\", \"progressbar\", \"mode\", \"indeterminate\", 1, \"mat-spinner\", \"mat-progress-spinner\"], hostVars: 6, hostBindings: function MatSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._getViewBox());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [_c0], encapsulation: 2, changeDetection: 0 });\nMatSpinner.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-spinner',\n                host: {\n                    'role': 'progressbar',\n                    'mode': 'indeterminate',\n                    'class': 'mat-spinner mat-progress-spinner',\n                    '[class._mat-animation-noopable]': `_noopAnimations`,\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_getViewBox()\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + _spinnerAnimationLabel\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:currentColor}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatProgressSpinnerModule {\n}\nMatProgressSpinnerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatProgressSpinnerModule });\nMatProgressSpinnerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatProgressSpinnerModule_Factory(t) { return new (t || MatProgressSpinnerModule)(); }, imports: [[MatCommonModule, CommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatProgressSpinnerModule, { declarations: function () { return [MatProgressSpinner, MatSpinner]; }, imports: function () { return [MatCommonModule, CommonModule]; }, exports: function () { return [MatProgressSpinner, MatSpinner, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinnerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, CommonModule],\n                exports: [\n                    MatProgressSpinner,\n                    MatSpinner,\n                    MatCommonModule\n                ],\n                declarations: [\n                    MatProgressSpinner,\n                    MatSpinner\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n\n//# sourceMappingURL=progress-spinner.js.map","import { Component, Input, OnInit } from '@angular/core';\nimport * as _ from 'lodash';\n\n@Component({\n    selector: 'nested-string',\n    template: `\n        <span *ngIf=\"type === 'nested_string'\"\n        class=\"font-size-14\">\n            {{ primaryField | removeUnderscore }}\n            <mat-icon *ngIf=\"!primaryField\">remove</mat-icon>\n        </span>\n        <span *ngIf=\"type === 'nested_currency'\">\n            {{ primaryField | currency: 'Kshs '}}\n        </span>\n        <span *ngIf=\"type === 'nested_multistrings'\">\n            {{ primaryField }} {{ secondaryField }}\n        </span>\n        <span *ngIf=\"type === 'nested_total'\">\n            {{ sum(primaryField, secondaryField) | currency: 'Kshs ' }}\n        </span>\n        <div *ngIf=\"type === 'nested_range'\"\n        class=\"d-flex\">\n            <div class=\"font-size-14\">{{ primaryField | date: 'MM/yy' }}&nbsp;</div>\n            <div style=\"margin-top:-1.05rem;\">\n                <mat-icon >minimize</mat-icon>&nbsp;\n            </div>\n            <div class=\"font-size-14\">{{ secondaryField | date: 'MM/yy' }}</div>\n        </div>\n    `\n})\n\nexport class NestedStringComponent implements OnInit {\n    @Input() type: string;\n    @Input() item: any;\n    @Input() config: any;\n\n    primaryField: any;\n    secondaryField: any;\n\n    sum(primary, secondary) {\n        return parseFloat(primary) * parseFloat(secondary);\n    }\n\n    ngOnInit() {\n        this.primaryField = _.get(this.item, this.config['primaryField'], null);\n        this.secondaryField = _.get(\n            this.item, this.config['secondaryField'], null);\n    }\n}"]}