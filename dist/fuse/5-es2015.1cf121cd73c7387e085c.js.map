{"version":3,"sources":["webpack:///src/@fuse/components/tabbed-wrapper/tabbed-wrapper.module.ts","webpack:///src/app/services/auth-checkers.service.ts","webpack:///src/@fuse/components/tabbed-wrapper/services/applications.constant.ts","webpack:///src/@fuse/components/tabbed-wrapper/services/configs.constant.ts","webpack:///src/@fuse/components/tabbed-wrapper/services/budgets.constant.ts","webpack:///src/@fuse/components/tabbed-wrapper/services/tabbed-wrapper.service.ts","webpack:///src/@fuse/components/tabbed-wrapper/components/main-dialog/main-dialog.component.html","webpack:///src/@fuse/components/tabbed-wrapper/components/main-dialog/main-dialog.component.ts","webpack:///src/@fuse/components/tabbed-wrapper/components/organization-summary/organization-summary.component.html","webpack:///src/@fuse/components/tabbed-wrapper/components/organization-summary/organization-summary.component.ts","webpack:///src/@fuse/components/tabbed-wrapper/components/application-me/application-me.component.html","webpack:///src/@fuse/components/tabbed-wrapper/components/application-me/application-me.component.ts","webpack:///src/@fuse/components/tabbed-wrapper/components/tabbed-inline-list/tabbed-inline-list.component.html","webpack:///src/@fuse/components/tabbed-wrapper/components/tabbed-inline-list/tabbed-inline-list.component.ts","webpack:///src/@fuse/components/tabbed-wrapper/components/activity-summary/activity-summary.component.html","webpack:///src/@fuse/components/tabbed-wrapper/components/activity-summary/activity-summary.component.ts","webpack:///src/@fuse/components/tabbed-wrapper/components/audit-trail/audit-trail.component.html","webpack:///src/@fuse/components/tabbed-wrapper/components/audit-trail/audit-trail.component.ts","webpack:///src/@fuse/components/tabbed-wrapper/components/header-attachments/header-attachments.component.html","webpack:///src/@fuse/components/tabbed-wrapper/components/header-attachments/header-attachments.component.ts","webpack:///src/@fuse/components/tabbed-wrapper/components/attachments-listing/attachment-dialog/attachment-dialog.component.html","webpack:///src/@fuse/components/tabbed-wrapper/components/attachments-listing/attachment-dialog/attachment-dialog.component.ts","webpack:///src/@fuse/components/tabbed-wrapper/components/attachments-listing/attachments-listing.component.html","webpack:///src/@fuse/components/tabbed-wrapper/components/attachments-listing/attachments-listing.component.ts","webpack:///src/@fuse/components/tabbed-wrapper/components/nested-inline-list/nested-inline-dialog/nested-inline-dialog.component.html","webpack:///src/@fuse/components/tabbed-wrapper/components/nested-inline-list/nested-inline-dialog/nested-inline-dialog.component.ts","webpack:///src/@fuse/components/tabbed-wrapper/components/nested-inline-list/nested-inline-list.component.html","webpack:///src/@fuse/components/tabbed-wrapper/components/nested-inline-list/nested-inline-list.component.ts","webpack:///src/@fuse/components/tabbed-wrapper/components/main-wrapper/main-wrapper.component.html","webpack:///src/@fuse/components/tabbed-wrapper/components/main-wrapper/main-wrapper.component.ts"],"names":["TabbedWrapperModule","AuthCheckerService","_authConfig","allowedOrgTypes","roles","orgType","get","JSON","parse","localStorage","getItem","organization","user","this","getUser","isUndefined","indexOf","currOrg","find","organizations","group_name","isNull","group","TabsConfigs","key","tabs","store","label","content","context","parentKey","count","formConf","cancelTxt","nextTxt","addStore","editStore","getStore","detailsConf","icon","type","fieldType","primaryField","secondaryField","bankConfs","title","extraDetails","auditTrail","applicationME","activitySummary","modelKey","listParams","gridConf","topActions","btnText","status","action","conf","rows","headers","oderable","searchable","dropDownActions","disableStatus","modalConf","titleKey","class","width","actions","headerConfig","headerLabel","headerValue","subTitleLabel","subTitleValue","orgSummary","attachments","totalsSummary","TabbedWrapperService","configArray","dialogActions","MainDialogComponent","data","_formBuilder","_snackBar","_dataLayer","dialogRef","activities","allApproved","attachedDoc","submitApplication","getUserOrganization","loading","transitionDocument","comment","review_status","application","item","id","successMsg","firstApproveApplication","authorizeApplication","revised_amount","update","value","subscribe","resp","err","console","log","openDynamicSnackBar","rationalizeApplication","ratObj","params","create","configs","undefined","closeDialog","approveApplication","rejectApplication","openSnackBar","submitted","org_budget","approve","rationalize","approveBudget","forEach","activity","ind","approved","length","reject","strArr","file","split","fileName","commentForm","required","revisedAmountForm","has","rA","setValue","amount_requested","message","open","duration","transitionObj","feedback","application_review","attachment","frm","valid","controls","arg","close","isEmpty","every","filter","completed","list","current_org_id","setAllApproved","files","fileFormData","target","attachment_type","formData","FormData","append","uploadFile","setFileName","formInit","fetchNested","OrganizationSummaryComponent","ApplicationMEComponent","postObj","organiazation","amount","quantity","description","showInline","showForm","orgId","model","getList","toggleCreateForm","orgDetails","getOrganization","TabbedInlinedList","getBankAccount","ActivitySummaryComponent","activityBudget","activityDetails","getItemActivity","getItemBudget","AuditTrailComponent","storesMap","paramKey","hasAction","config","review","attachList","getAuditTrail","HeaderAttachmentsComponent","budget","attachmentObj","map","obj","fileResp","push","fileChange","AttachmentDialog","http","_dialogRef","progress","sUrl","serverURL","uploadForm","form","control","Object","keys","markAsDirty","document_type","cb","post","formValue","reportProgress","observe","pipe","tap","event","UploadProgress","Math","round","loaded","total","Response","res","body","reset","field","error","dirty","hasError","submitForm","AttachmentsListing","_dialog","_route","docType","getApplicationAttachments","afterClosed","result","getDocumentTypes","appAttachments","docTypeObj","linkedFile","org_type","linkedOrganization","queryParams","linkedOrgId","getOrgnization","getParams","NestedInlineDialog","adjustedAmountForm","adjustedAmount","transObj","succMsg","errMsg","frmObj","succStr","errStr","ratFeedback","submitTransition","appObj","appFeedback","rejFeedback","rejObj","Error","transitionActions","validationKey","setConfigs","NestedTabbedInlineList","onNavigate","nestedList","cmptParams","actActions","emit","text","iconClass","bpType","act","orgInd","statusInd","selectedAllowance","refreshSelected","active","all","allowanceId","selected","presetAllowance","currInd","oldInd","getNestedList","budget_activity_allowance","budget_activity","setSelected","itemId","getMainList","parseInt","current","tab","getItemId","headerActions","MainWrapperComponent","_router","_tabsService","_authChecker","currIndex","submit","openDialog","navigate","listRoute","activeStates","isActionAllowed","loadTabs","apiStore","setCmptParams","asyncTabs","Observable","observer","setTimeout","next","str","replace","getTabs","getRouteConfigs","window","print","printPage","setParams","tabSelectChange"],"mappings":"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","file":"x","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule }  from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatListModule } from '@angular/material/list';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { FusePipesModule } from '@fuse/pipes/pipes.module';\nimport { FuseSharedModule } from '@fuse/shared.module';\n\nimport { HttpModule } from '../../../app/services/http/http.module';\nimport { DynamicTableModule } from '../dynamic-table/dynamic-table.module';\nimport { DynamicFormModule } from '@fuse/components/dynamic-form/dynamic-form.module';\n\nimport { TabbedWrapperService } from './services/tabbed-wrapper.service';\n\nimport { MainWrapperComponent } from './components/main-wrapper/main-wrapper.component';\nimport { MainDialogComponent } from './components/main-dialog/main-dialog.component';\nimport { AuditTrailComponent } from './components/audit-trail/audit-trail.component';\nimport { ActivitySummaryComponent } from './components/activity-summary/activity-summary.component';\nimport { HeaderAttachmentsComponent } from './components/header-attachments/header-attachments.component';\nimport { OrganizationSummaryComponent } from './components/organization-summary/organization-summary.component';\nimport { TabbedInlinedList } from './components/tabbed-inline-list/tabbed-inline-list.component';\nimport { AttachmentsListing } from './components/attachments-listing/attachments-listing.component';\nimport { ApplicationMEComponent } from './components/application-me/application-me.component';\nimport { NestedTabbedInlineList } from './components/nested-inline-list/nested-inline-list.component';\nimport { NestedListModule } from './components/nested-list/nested-list.module';\nimport { NestedInlineDialog } from './components/nested-inline-list/nested-inline-dialog/nested-inline-dialog.component';\nimport { AttachmentDialog } from './components/attachments-listing/attachment-dialog/attachment-dialog.component';\n\n@NgModule({\n    imports: [\n        HttpModule,\n        RouterModule,\n        CommonModule,\n        MatIconModule,\n        MatTabsModule,\n        MatCardModule,\n        MatListModule,\n        MatMenuModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatCheckboxModule,\n        FusePipesModule,\n        MatSnackBarModule,\n        DynamicFormModule,\n        DynamicTableModule,\n        MatExpansionModule,\n        FormsModule,\n        FuseSharedModule,\n        ReactiveFormsModule,\n        NestedListModule,\n        MatProgressSpinnerModule,\n    ],\n    declarations: [\n        TabbedInlinedList,\n        AttachmentsListing,\n        MainWrapperComponent,\n        MainDialogComponent,\n        AuditTrailComponent,\n        ActivitySummaryComponent,\n        OrganizationSummaryComponent,\n        HeaderAttachmentsComponent,\n        ApplicationMEComponent,\n        NestedTabbedInlineList,\n        NestedInlineDialog,\n        AttachmentDialog,\n    ],\n    exports: [\n        TabbedInlinedList,\n        AttachmentsListing,\n        MainWrapperComponent,\n        MainDialogComponent,\n        AuditTrailComponent,\n        ActivitySummaryComponent,\n        OrganizationSummaryComponent,\n        HeaderAttachmentsComponent,\n        ApplicationMEComponent,\n        NestedTabbedInlineList,\n        NestedInlineDialog,\n        AttachmentDialog,\n    ],\n    providers: [\n        TabbedWrapperService\n    ],\n})\n\nexport class TabbedWrapperModule {}","import { Injectable } from '@angular/core';\nimport { find, get, indexOf, isNull, isUndefined } from 'lodash';\n\nimport { Authorization } from './authorization.service';\n\n@Injectable()\nexport class AuthCheckerService {\n    constructor(private _authConfig: Authorization) {\n\n    }\n\n    isActionAllowed(allowedOrgTypes, roles) {\n        const orgType = get(JSON.parse(localStorage.getItem('organization')), 'org_type');\n        const organization = get(JSON.parse(localStorage.getItem('organization')), 'organization');\n        const user = JSON.parse(this._authConfig.getUser());\n        if (isUndefined(roles)) {\n            return indexOf(allowedOrgTypes, orgType) >= 0;\n        } else {\n            const currOrg = find(user.organizations, { organization }, null);\n            return ( indexOf(roles, currOrg.group_name) >= 0 \n                || isNull(currOrg.group)) \n                && indexOf(allowedOrgTypes, orgType) >= 0;\n        }\n    }\n}","export const ApplicationsConfigs = {\n    key: 'applications',\n    tabs: [\n        {\n            store: 'applications',\n            label: 'Basic Details',\n            content: 'form',\n            context: 'Application',\n            parentKey: 'organization',\n            count: 1,\n            formConf: {\n                store: 'applications',\n                cancelTxt: 'CANCEL',\n                nextTxt: 'SAVE',\n                addStore: 'applications',\n                editStore: 'applications',\n                getStore: 'applications'\n            },\n            detailsConf: [\n                {\n                    label: 'Applied Amount',\n                    key: 'total',\n                    icon: 'account_balance',\n                    type: 'currency'\n                },\n                {\n                    label: 'Required By',\n                    key: 'date_requested',\n                    icon: 'calendar_today',\n                    type: 'date',\n                },\n                {\n                    label: 'Financial Year',\n                    key: 'financial_year',\n                    icon: 'calendar_today',\n                    type: 'nested',\n                    fieldType: 'nested_range',\n                    primaryField: 'financial_year_data.starts_on',\n                    secondaryField: 'financial_year_data.ends_on',\n                },\n                {\n                    label: 'Status',\n                    key: 'status',\n                    icon: 'assessment',\n                    type: 'status',\n                },\n            ],\n            bankConfs: [\n                { \n                    title: 'Account Name',\n                    key: 'account_name',\n                },\n                { \n                    title: 'Account #',\n                    key: 'account_number',\n                },\n                { \n                    title: 'Bank',\n                    key: 'bank_name',\n                },\n                { \n                    title: 'Branch',\n                    key: 'branch_name',\n                },\n            ],\n            extraDetails: 'extraDetails',\n            auditTrail: true,\n            applicationME: true,\n            // orgSummary: true,\n            activitySummary: true,\n        },\n        {\n            store: 'application-items',\n            label: 'Billable Items',\n            modelKey: 'application',\n            content: 'grid',\n            listParams: { 'member_null': true },\n            gridConf: {\n                getStore: 'application-items',\n                editStore: 'application-items'\n            },\n            topActions: [\n                {\n                    btnText: 'ADD BILLABLE ITEM',\n                    status: 'info',\n                    icon: 'true',\n                    action: 'inline',\n                    conf: {\n                        context: 'BILLABLE ITEM',\n                        store: 'application-items',\n                        btnText: 'SAVE'\n                    }\n                }\n            ],\n            rows: [\n                {\n                    key: 'item',\n                    type: 'compact-line',\n                    context: 'billable-item',\n                    fieldType: 'nested_string',\n                    primaryField: 'item_data.name',\n                },\n                {\n                    key: 'item',\n                    type: 'compact-line',\n                    context: 'billable-item',\n                    fieldType: 'activity_details',\n                    primaryField: 'item_data.name',\n                },\n                { \n                    key: 'item', \n                    type: 'compact-line',\n                    context: 'billable-item',\n                    fieldType: 'nested_status_total',\n                    primaryField: 'item_data.name', \n                },\n                { \n                    key: 'item', \n                    type: 'compact-line',\n                    context: 'billable-item',\n                    fieldType: 'nested_totals',\n                    primaryField: 'item_data.name', \n                },\n            ],\n            headers: [\n                { title: 'Item' },\n                { title: 'Activity Item' },\n                { title: 'Total' },\n                { title: 'Approved Totals' },\n                { title: 'Actions', oderable: false, searchable: false },\n            ],\n            dropDownActions: [\n                {\n                    btnText: 'Edit',\n                    status: 'info',\n                    icon: 'edit',\n                    disableStatus: 'FINISHED',\n                    action: 'inline',\n                    modalConf: {\n                        store: 'application-items',\n                        titleKey: 'item',\n                        context: 'Billable Item',\n                        btnText: 'SAVE'\n                    }\n                },\n                {\n                    btnText: 'Rationalize',\n                    status: 'draft',\n                    icon: 'compare_arrows',\n                    disableStatus: 'FINISHED',\n                    class: 'text-success',\n                    action: 'modal',\n                    modalConf: {\n                        store: 'application-items',\n                        titleKey: 'item',\n                        context: 'rationalize',\n                        btnText: 'SAVE',\n                        width: '50%',\n                    }\n                },\n                {\n                    btnText: 'Approve',\n                    status: 'rationalized',\n                    icon: 'check',\n                    class: 'text-success',\n                    disableStatus: 'FINISHED',\n                    action: 'modal',\n                    modalConf: {\n                        store: 'application-items',\n                        titleKey: 'item',\n                        context: 'approve',\n                        btnText: 'SAVE',\n                        width: '50%',\n                    }\n                },\n                {\n                    btnText: 'Reject',\n                    status: 'rationalize',\n                    icon: 'close',\n                    class: 'text-danger',\n                    disableStatus: 'FINISHED',\n                    action: 'modal',\n                    modalConf: {\n                        store: 'application-items',\n                        titleKey: 'item',\n                        context: 'reject',\n                        btnText: 'SAVE',\n                        width: '50%',\n                    }\n                },\n            ]\n        },\n        {\n            store: 'application-attendees',\n            label: 'Attendees',\n            content: 'grid',\n            modelKey: 'application',\n            listParams: { 'member_null': false },\n            gridConf: {\n                getStore: 'application-attendees',\n                editStore: 'application-attendees'\n            },\n            topActions: [\n                {\n                    btnText: 'ADD ATTENDEE',\n                    status: 'info',\n                    icon: 'true',\n                    action: 'inline',\n                    conf: {\n                        context: 'ATTENDEE',\n                        store: 'application-attendees',\n                        btnText: 'SAVE'\n                    }\n                }\n            ],\n            rows: [\n                { \n                    key: 'item', \n                    type: 'compact-line',\n                    context: 'attendees',\n                    fieldType: 'nested_string',\n                    primaryField: 'item_data.name', \n                },\n                {\n                    key: 'item',\n                    type: 'compact-line',\n                    context: 'billable-item',\n                    fieldType: 'activity_details',\n                    primaryField: 'item_data.name',\n                },\n                { \n                    key: 'item', \n                    type: 'compact-line',\n                    context: 'billable-item',\n                    fieldType: 'nested_status_total',\n                    primaryField: 'item_data.name', \n                },\n                { \n                    key: 'item', \n                    type: 'compact-line',\n                    context: 'billable-item',\n                    fieldType: 'nested_totals',\n                    primaryField: 'item_data.name', \n                },\n            ],\n            headers: [\n                { title: 'Member' },\n                { title: 'Activity Details' },\n                { title: 'Totals' },\n                { title: 'Approved Totals' },\n                { title: 'Actions', oderable: false, searchable: false },\n            ],\n            dropDownActions: [\n                {\n                    btnText: 'Edit',\n                    status: 'info',\n                    icon: 'edit',\n                    disableStatus: 'FINISHED',\n                    action: 'inline',\n                    modalConf: {\n                        store: 'application-items',\n                        titleKey: 'item',\n                        context: 'Billable Item',\n                        btnText: 'SAVE'\n                    }\n                },\n                {\n                    btnText: 'Rationalize',\n                    status: 'draft',\n                    icon: 'compare_arrows',\n                    disableStatus: 'FINISHED',\n                    class: 'text-success',\n                    action: 'modal',\n                    modalConf: {\n                        store: 'application-items',\n                        titleKey: 'item',\n                        context: 'rationalize',\n                        btnText: 'SAVE',\n                        width: '50%',\n                    }\n                },\n                {\n                    btnText: 'Approve',\n                    status: 'rationalized',\n                    icon: 'check',\n                    class: 'text-success',\n                    disableStatus: 'FINISHED',\n                    action: 'modal',\n                    modalConf: {\n                        store: 'application-items',\n                        titleKey: 'item',\n                        context: 'approve',\n                        btnText: 'SAVE',\n                        width: '50%',\n                    }\n                },\n                {\n                    btnText: 'Reject',\n                    status: 'rationalize',\n                    icon: 'close',\n                    class: 'text-danger',\n                    disableStatus: 'FINISHED',\n                    action: 'modal',\n                    modalConf: {\n                        store: 'application-items',\n                        titleKey: 'item',\n                        context: 'reject',\n                        btnText: 'SAVE',\n                        width: '50%',\n                    }\n                },\n            ]\n        },\n        {\n            store: 'application-allowances',\n            label: 'Allowances',\n            content: 'nested-inline-list',\n            getStore: 'application-allowances',\n            editStore: 'application-allowances',\n            gridConf: {\n                getStore: 'application-allowances',\n                editStore: 'application-allowances',\n            },\n            topActions: [\n                {\n                    btnText: 'ADD ALLOWANCE',\n                    status: 'info',\n                    icon: 'true',\n                    action: 'inline',\n                    conf: {\n                        context: 'ALLOWANCE',\n                        store: 'application-allowances',\n                        btnText: 'SAVE'\n                    }\n                }\n            ],\n            rows: [\n                { \n                    key: 'item', \n                    type: 'compact-line',\n                    context: 'allowances',\n                    fieldType: 'nested_member',\n                    primaryField: 'item_data.name', \n                },\n                { \n                    key: 'item', \n                    type: 'compact-line',\n                    context: 'billable-item',\n                    fieldType: 'nested_status_total',\n                    primaryField: 'item_data.name', \n                },\n                { \n                    key: 'item', \n                    type: 'compact-line',\n                    context: 'billable-item',\n                    fieldType: 'nested_totals',\n                    primaryField: 'item_data.name', \n                },\n            ],\n            headers: [\n                { title: 'Allowance' },\n                { title: 'Totals' },\n                { title: 'Approved Totals' },\n                { title: 'Actions', oderable: false, searchable: false },\n            ],\n            actions: [\n                {\n                    btnText: 'EDIT',\n                    status: 'info',\n                    icon: false,\n                    disableStatus: 'FINISHED',\n                    action: 'inline',\n                    modalConf: {\n                        store: 'application-allowances',\n                        titleKey: 'item',\n                        context: 'Allowance',\n                        btnText: 'SAVE'\n                    }\n                },\n                {\n                    btnText: 'Rationalize',\n                    status: 'draft',\n                    icon: 'compare_arrows',\n                    disableStatus: 'FINISHED',\n                    class: 'text-success',\n                    action: 'modal',\n                    modalConf: {\n                        store: 'application-allowances',\n                        titleKey: 'item',\n                        context: 'rationalize',\n                        btnText: 'SAVE',\n                        width: '50%',\n                    }\n                },\n                {\n                    btnText: 'Approve',\n                    status: 'rationalized',\n                    icon: 'check',\n                    class: 'text-success',\n                    disableStatus: 'FINISHED',\n                    action: 'modal',\n                    modalConf: {\n                        store: 'application-allowances',\n                        titleKey: 'item',\n                        context: 'approve',\n                        btnText: 'SAVE',\n                        width: '50%',\n                    }\n                },\n                {\n                    btnText: 'Reject',\n                    status: 'rationalize',\n                    icon: 'close',\n                    class: 'text-danger',\n                    disableStatus: 'FINISHED',\n                    action: 'modal',\n                    modalConf: {\n                        store: 'application-allowances',\n                        titleKey: 'item',\n                        context: 'reject',\n                        btnText: 'SAVE',\n                        width: '50%',\n                    }\n                },\n            ]\n        },\n        {\n            store: 'users',\n            label: 'Attachments',\n            content: 'attachments',\n            gridConf: {\n                getStore: 'organisations',\n                editStore: 'organisations'\n            },\n            topActions: [\n                {\n                    btnText: 'ADD USER',\n                    status: 'info',\n                    icon: 'true',\n                    action: 'inline',\n                    conf: {\n                        context: 'USER',\n                        store: 'users',\n                        btnText: 'SAVE'\n                    }\n                }\n            ],\n            rows: [\n                { key: 'first_name', type: 'string' },\n                { key: 'last_name', type: 'string' },\n                { key: 'phone_number', type: 'string' },\n                { key: 'email', type: 'string' },\n            ],\n            headers: [\n                { title: 'Names' },\n                { title: '.' },\n                { title: 'Phone Number' },\n                { title: 'Email' },\n                { title: 'Actions', oderable: false, searchable: false },\n            ],\n            actions: [\n                {\n                    btnText: 'EDIT',\n                    status: 'info',\n                    icon: false,\n                    disableStatus: 'FINISHED',\n                    action: 'inline',\n                    modalConf: {\n                        store: 'users',\n                        titleKey: 'name',\n                        context: 'Users',\n                        btnText: 'SAVE'\n                    }\n                    }\n            ]\n        },\n        {\n            store: 'application-alternate-funding-sources',\n            label: 'Alternative Funds',\n            content: 'grid',\n            modelKey: 'application',\n            gridConf: {\n                getStore: 'application-alternate-funding-sources',\n                editStore: 'application-alternate-funding-sources'\n            },\n            topActions: [\n                {\n                    btnText: 'ADD ALTERNATIVE FUND',\n                    status: 'info',\n                    icon: 'true',\n                    action: 'inline',\n                    conf: {\n                        context: 'ALTERNATIVE FUNDING',\n                        store: 'application-alternate-funding-sources',\n                        btnText: 'SAVE'\n                    }\n                }\n            ],\n            rows: [\n                { key: 'entity_name', type: 'string' },\n                { key: 'estimated_amount', type: 'currency' },\n                { key: 'description', type: 'string' },\n            ],\n            headers: [\n                { title: 'Entity Name' },\n                { title: 'Estimated Amount' },\n                { title: 'Description' },\n                { title: 'Actions', oderable: false, searchable: false },\n            ],\n            actions: [\n                {\n                    btnText: 'EDIT',\n                    status: 'info',\n                    icon: false,\n                    disableStatus: 'FINISHED',\n                    action: 'inline',\n                    modalConf: {\n                        store: 'application-alternate-funding-sources',\n                        titleKey: 'entity_name',\n                        context: 'Alternative Funding',\n                        btnText: 'SAVE'\n                    }\n                }\n            ]\n        }\n    ]\n}","import { ApplicationsConfigs } from './applications.constant';\nimport { BudgetsConfigs } from './budgets.constant';\n\nexport const TabsConfigs = [\n    {\n        key: 'application',\n        tabs: ApplicationsConfigs.tabs,\n        headerConfig: {\n            icon: 'assignment',\n            headerLabel: 'Application',\n            headerValue: 'id',\n            subTitleLabel: 'By',\n            subTitleValue: 'organization_data.name',\n            actions: [\n                {\n                    'btnText': 'SUBMIT',\n                    'action': 'submit',\n                    'color':'default',\n                    'context': 'APPLICATION',\n                    'activeStates': ['DRAFT'],\n                    'bpType': [\n                        'GOVERNMENT_AGENCY', \n                        'PROFESSIONAL_SPORTPERSON',\n                        'SPORTS_ORGANIZATION',\n                        'MINISTRY'\n                    ],\n                    'roles': [\n                        'Admin',\n                        'Budget Reviewer', \n                        'Ministry Approver',\n                    ],\n                    'configs': {\n                        'title': 'Submit Application',\n                        'context': 'APPLICATION',\n                        'store': 'applications',\n                        'action': 'update',\n                        'description':  `Kindly verify that you would indeed like to\n                            submit the following application for review. Once submitted \n                            you will not be able to make any further updates to it. \n                            Click Submit below to proceed`,\n                    }\n                },\n                // {\n                //     'btnText': 'APPROVE',\n                //     'action': 'approve',\n                //     'context': 'APPLICATION',\n                //     'color': 'default',\n                //     'activeStates': [\n                //         'FIRST_LEVEL_APPROVED',\n                //     ], // TODO: Give correct status\n                //     'bpType': [\n                //         'SASDEF',\n                //     ],\n                //     'roles': [\n                //         'Ministry Approver',\n                //         'SASDEF Admin',\n                //     ],\n                //     'configs': {\n                //         'title': 'Approve Application',\n                //         'context': 'APPLICATION',\n                //         'store': 'application-reviews',\n                //         'action': 'finalApproveApplication',\n                //         'description':  `Kindly verify that you would indeed like to\n                //             approve the following application. Confirm that you have reviewed\n                //             and approve the application before you can\n                //             continue`,\n                //         'approveNested': false,\n                //         'reviewAttachment': true,\n                //     }\n                // },\n                // {\n                //     'btnText': 'REJECT',\n                //     'action': 'reject',\n                //     'context': 'APPLICATION',\n                //     'color': 'warn',\n                //     'activeStates': ['FIRST_LEVEL_APPROVED', 'SUBMITTED'], // TODO: Give correct status\n                //     'bpType': [\n                //         'MINISTRY',\n                //         'SASDEF',\n                //     ],\n                //     'roles': [\n                //         'Ministry Approver',\n                //         'SASDEF Admin',\n                //     ],\n                //     'configs': {\n                //         'title': 'Reject Application',\n                //         'context': 'APPLICATION',\n                //         'store': 'application-reviews',\n                //         'action': 'rejectApplication',\n                //         'description':  `Kindly verify that you would indeed like to\n                //             reject the following application. Confirm that you have reviewed\n                //             and reject the application before you can\n                //             continue`,\n                //         'comment': true,\n                //     }\n                // },\n                {\n                    'btnText': 'RATIONALIZE',\n                    'action': 'rationalize',\n                    'context': 'APPLICATIONS',\n                    'color': 'default',\n                    'activeStates': ['SUBMITTED'],\n                    'bpType': [\n                        'MINISTRY', 'SASDEF',\n                    ],\n                    'roles': [\n                        'Admin',\n                        'Budget Reviewer', \n                        'Ministry Approver',\n                    ],\n                    'configs': {\n                        'title': 'Rationalize Application',\n                        'context': 'APPLICATIONS',\n                        'store': 'application-reviews',\n                        'action': 'rationalizeApplication',\n                        'description':  `Kindly verify that you would indeed like to \n                            rationalize the following application. Confirm that you have reviewed\n                            and rationalized or rejected activity lines before you can\n                            continue`,\n                        'approveNested': false,\n                        'comment': false,\n                    }\n                },\n                {\n                    'btnText': 'APPROVE',\n                    'action': 'approve',\n                    'context': 'APPLICATIONS',\n                    'color': 'default',\n                    'activeStates': ['RATIONALIZED'],\n                    'bpType': [\n                        'SASDEF',\n                    ],\n                    'roles': [\n                        'Budget Reviewer', \n                        'Ministry Approver',\n                        'SASDEF Admin',\n                    ],\n                    'configs': {\n                        'title': 'Approve Application',\n                        'context': 'APPLICATION  ',\n                        'store': 'application-reviews',\n                        'action': 'approveApplication',\n                        'description':  `Kindly verify that you would indeed like to\n                            approve the following application. Confirm that you have reviewed\n                            and approved or rejected activity lines before you can\n                            continue`,\n                        'approveNested': false,\n                        'comment': false,\n                    }\n                },\n                {\n                    'btnText': 'REJECT',\n                    'action': 'reject',\n                    'context': 'APPLICATIONS',\n                    'color': 'warn',\n                    'activeStates': ['SUBMITTED', 'RATIONALIZED'],\n                    'bpType': [\n                        'MINISTRY',\n                        'SASDEF',\n                    ],\n                    'roles': [\n                        'Budget Reviewer', \n                        'Ministry Approver',\n                        'SASDEF Admin',\n                    ],\n                    'configs': {\n                        'title': 'Reject Application',\n                        'context': 'APPLICATIONS',\n                        'hasComment': true,\n                        'store': 'application-reviews',\n                        'action': 'rejectApplication',\n                        'description':  `Kindly verify that you would indeed like to\n                            reject the following application. Once rejected you will\n                            not be able to approve any of the activities lines`,\n                        'comment': true,\n                    }\n                },\n            ],\n        },\n    },\n    {\n        key: 'organization-budget',\n        headerConfig: {\n            icon: 'work',\n            headerLabel: 'Calendar of Event',\n            headerValue: 'id',\n            subTitleLabel: 'By',\n            subTitleValue: 'organization_data.name',\n            actions: [\n                {\n                    'btnText': 'SUBMIT',\n                    'action': 'submit',\n                    'color':'default',\n                    'context': 'CALENDAR OF EVENTS',\n                    'activeStates': ['DRAFT'],\n                    'bpType': [\n                        'GOVERNMENT_AGENCY', \n                        'PROFESSIONAL_SPORTPERSON',\n                        'SPORTS_ORGANIZATION',\n                        'MINISTRY'\n                    ],\n                    'roles': [\n                        'Admin',\n                        'Budget Reviewer', \n                        'Ministry Approver',\n                    ],\n                    'configs': {\n                        'title': 'Submit Calendar of Events',\n                        'context': 'CALENDAR OF EVENTS',\n                        'store': 'organization-budgets',\n                        'action': 'update',\n                        'description':  `Kindly verify that you would indeed like to\n                            submit the following calendar of events. Once submitted you will not\n                            be able to make any further updates to it. Click Submit\n                            below to proceed`,\n                    }\n                },\n                {\n                    'btnText': 'RATIONALIZE',\n                    'action': 'rationalize',\n                    'context': 'CALENDAR OF EVENTS',\n                    'color': 'default',\n                    'activeStates': ['SUBMITTED'],\n                    'bpType': [\n                        'MINISTRY',\n                    ],\n                    'roles': [\n                        'Admin',\n                        'Budget Reviewer', \n                        'Ministry Approver',\n                    ],\n                    'configs': {\n                        'title': 'Rationalize Calendar of Events',\n                        'context': 'CALENDAR OF EVENTS',\n                        'store': 'organization-budget-reviews',\n                        'action': 'rationalize',\n                        'description':  `Kindly verify that you would indeed like to \n                            rationalize the following calendar of events. Confirm that you have reviewed\n                            and rationalized or rejected activities and activity lines before you can\n                            continue`,\n                        'approveNested': false,\n                        'comment': false,\n                    }\n                },\n                {\n                    'btnText': 'APPROVE',\n                    'action': 'approve',\n                    'context': 'CALENDAR OF EVENTS',\n                    'color': 'default',\n                    'activeStates': ['RATIONALIZED'],\n                    'bpType': [\n                        'SASDEF',\n                    ],\n                    'roles': [\n                        'Budget Reviewer', \n                        'Ministry Approver',\n                        'SASDEF Admin',\n                    ],\n                    'configs': {\n                        'title': 'Approve Calendar of Events',\n                        'context': 'CALENDAR OF EVENTS  ',\n                        'store': 'organization-budget-reviews',\n                        'action': 'approve',\n                        'description':  `Kindly verify that you would indeed like tO\n                            approve the following calendar of events. Confirm that you have reviewed\n                            and approved or rejected activities and activity lines before you can\n                            continue`,\n                        'approveNested': false,\n                        'comment': false,\n                    }\n                },\n                {\n                    'btnText': 'REJECT',\n                    'action': 'reject',\n                    'context': 'CALENDAR OF EVENTS',\n                    'color': 'warn',\n                    'activeStates': ['SUBMITTED', 'RATIONALIZED'],\n                    'bpType': [\n                        'MINISTRY',\n                        'SASDEF',\n                    ],\n                    'roles': [\n                        'Budget Reviewer', \n                        'Ministry Approver',\n                        'SASDEF Admin',\n                    ],\n                    'configs': {\n                        'title': 'Reject Calendar of Events',\n                        'context': 'CALENDAR OF EVENTS',\n                        'hasComment': true,\n                        'store': 'organization-budget-reviews',\n                        'action': 'reject',\n                        'description':  `Kindly verify that you would indeed like to\n                            reject the following calendar of events. Once rejected you will\n                            not be able to approve any of the activities or activity`,\n                        'comment': true,\n                    }\n                },\n            ],\n        },\n        tabs: BudgetsConfigs.tabs,\n    },\n    {\n        key: 'organization',\n        tabs: [\n            {\n                store: 'organisations',\n                label: 'Basic Details',\n                content: 'form',\n                // icon: 'work',\n                count: 1,\n                formConf: {\n                    store: 'organisations',\n                    cancelTxt: 'CANCEL',\n                    nextTxt: 'SAVE',\n                    addStore: 'organisations',\n                    editStore: 'organisations',\n                    getStore: 'organisations'\n                },\n                detailsConf: [\n                    {\n                        label: 'Name',\n                        key: 'name',\n                        icon: 'business'\n                    },\n                    {\n                        label: 'Organization Type',\n                        key: 'org_type_code',\n                        icon: 'account_balance',\n                    },\n                    {\n                        label: 'Phone #',\n                        key: 'phone_number',\n                        icon: 'phone'\n                    },\n                    {\n                        label: 'Email',\n                        key: 'email',\n                        icon: 'email'\n                    }\n                ],\n                bankConfs: [\n                    { \n                        title: 'Account Name',\n                        key: 'account_name',\n                    },\n                    { \n                        title: 'Account #',\n                        key: 'account_number',\n                    },\n                    { \n                        title: 'Bank',\n                        key: 'bank_name',\n                    },\n                    { \n                        title: 'Branch',\n                        key: 'branch_name',\n                    },\n                ]\n            },\n            {\n                store: 'organization-members',\n                label: 'Athletes & Officials',\n                content: 'grid',\n                modelKey: 'organization',\n                gridConf: {\n                    getStore: 'organization-members',\n                    editStore: 'organization-members'\n                },\n                topActions: [\n                    {\n                        btnText: 'ADD MEMBER',\n                        status: 'info',\n                        icon: 'true',\n                        action: 'inline',\n                        conf: {\n                          context: 'MEMBER',\n                          store: 'organization-members',\n                          btnText: 'SAVE'\n                        }\n                    }\n                ],\n                rows: [\n                    { \n                        key: 'federation_number', \n                        fieldType: 'nested_string',\n                        type: 'nested',\n                        primaryField: 'user.federation_number',\n                    },\n                    { \n                        key: 'user.first_name', \n                        fieldType: 'nested_multistrings',\n                        type: 'nested',\n                        primaryField: 'user.first_name',\n                        secondaryField: 'user.last_name',\n                    },\n                    { \n                        key: 'user.dob',\n                        fieldType: 'nested_string',\n                        type: 'nested',\n                        primaryField: 'user.dob',\n                    },\n                    { \n                        key: 'user.email', \n                        fieldType: 'nested_string',\n                        type: 'nested',\n                        primaryField: 'user.email',\n                    },\n                    { \n                        key: 'user.phone_number', \n                        fieldType: 'nested_string',\n                        type: 'nested',\n                        primaryField: 'user.phone_number',\n                    },\n                    { \n                        key: 'sports_category', \n                        type: 'nested',\n                        fieldType: 'nested_string',\n                        primaryField: 'sports_category_data.name',\n                    },\n                ],\n                headers: [\n                    { title: 'Federation #' },\n                    { title: 'Names' },\n                    { title: 'Date of Birth' },\n                    { \n                        title: 'Email' \n                    },\n                    { title: 'Phone #' },\n                    { title: 'Sports Category' },\n                    { title: 'Actions', oderable: false, searchable: false },\n                ],\n                actions: [\n                    {\n                        btnText: 'EDIT',\n                        status: 'info',\n                        icon: false,\n                        disableStatus: 'FINISHED',\n                        action: 'inline',\n                        modalConf: {\n                          store: 'organization-members',\n                          titleKey: 'first_name',\n                          context: 'MEMBER',\n                          btnText: 'SAVE'\n                        }\n                      }\n                ]\n            },\n            // {\n            //     store: 'organization-roles',\n            //     label: 'Organization Roles',\n            //     modelKey: 'organization',\n            //     content: 'grid',\n            //     gridConf: {\n            //         getStore: 'organization-roles',\n            //         editStore: 'organization-roles'\n            //     },\n            //     topActions: [\n            //         {\n            //             btnText: 'ADD ROLE',\n            //             status: 'info',\n            //             icon: 'true',\n            //             action: 'inline',\n            //             conf: {\n            //               context: 'ROLE',\n            //               store: 'organization-roles',\n            //               btnText: 'SAVE'\n            //             }\n            //         }\n            //     ],\n            //     rows: [\n            //         { key: 'description', type: 'string' },\n            //     ],\n            //     headers: [\n            //         { title: 'Description' },\n            //         { title: 'Actions', oderable: false, searchable: false },\n            //     ],\n            //     actions: [\n            //         {\n            //             btnText: 'EDIT',\n            //             status: 'info',\n            //             icon: false,\n            //             disableStatus: 'FINISHED',\n            //             action: 'inline',\n            //             modalConf: {\n            //               store: 'organization-roles',\n            //               titleKey: 'description',\n            //               context: 'Role',\n            //               btnText: 'SAVE'\n            //             }\n            //           }\n            //     ]\n            // },\n            // {\n            //     store: 'users',\n            //     label: 'Users',\n            //     content: 'grid',\n            //     modelKey: 'organization',\n            //     gridConf: {\n            //         getStore: 'users',\n            //         editStore: 'users'\n            //     },\n            //     rows: [\n            //         { \n            //             key: 'first_name',\n            //             fieldType: 'nested_multistrings',\n            //             type: 'nested',\n            //             primaryField: 'first_name',\n            //             secondaryField: 'last_name',\n            //         },\n            //         { key: 'phone_number', type: 'string' },\n            //         { key: 'email', type: 'string' },\n            //     ],\n            //     headers: [\n            //         { title: 'Names' },\n            //         { title: 'Phone Number' },\n            //         { title: 'Email' },\n            //         { title: 'Actions', oderable: false, searchable: false },\n            //     ],\n            //     actions: [\n            //         {\n            //             btnText: 'MANAGE',\n            //             status: 'info',\n            //             icon: false,\n            //             disableStatus: 'FINISHED',\n            //             action: 'inline',\n            //             modalConf: {\n            //               store: 'users',\n            //               titleKey: 'name',\n            //               context: 'Users',\n            //               btnText: 'SAVE'\n            //             }\n            //           }\n            //     ]\n            // },\n            // TODO: Bring back when fixed to work well\n            // {\n            //     store: 'organization-join-requests',\n            //     label: 'Join Requests',\n            //     content: 'grid',\n            //     modelKey: 'organization',\n            //     gridConf: {\n            //         getStore: 'organization-join-requests',\n            //         editStore: 'organization-join-requests'\n            //     },\n            //     rows: [\n            //         { key: 'requester', type: 'string' },\n            //         { key: 'organization', type: 'string' },\n            //         { key: 'requested_on', type: 'date' },\n            //         { key: 'review_state', type: 'status' }\n            //     ],\n            //     headers: [\n            //         { title: 'Requsted by' },\n            //         { title: 'Requested on'},\n            //         { title: 'Status' },\n            //         { title: 'Actions' }\n            //     ],\n            //     actions: [\n            //         {\n            //             btnText: 'APPROVE',\n            //             status: 'info',\n            //             icon: false,\n            //             disableStatus: 'FINISHED',\n            //             action: 'inline',\n            //             modalConf: {\n            //               store: 'organization-join-requests',\n            //               titleKey: 'name',\n            //               context: 'Join Request',\n            //               btnText: 'SAVE'\n            //             }\n            //           }\n            //     ]\n            // }\n        ]\n    }\n]","export const BudgetsConfigs = {\n    key: 'organization-budget',\n    tabs: [\n        {\n            store: 'organizaation-budgets',\n            label: 'Basic Details',\n            content: 'form',\n            icon: 'work',\n            context: 'Calendar of Events',\n            count: 1,\n            formConf: {\n                store: 'organization-budgets',\n                cancelTxt: 'CANCEL',\n                nextTxt: 'SAVE',\n                addStore: 'organization-budgets',\n                editStore: 'organization-budgets',\n                getStore: 'organization-budgets'\n            },\n            detailsConf: [\n                {\n                    label: 'Applied Total',\n                    key: 'total',\n                    icon: 'account_balance',\n                    type: 'currency',\n                },\n                {\n                    label: 'Financial Year',\n                    key: 'financial_year',\n                    icon: 'calendar_today',\n                    type: 'nested',\n                    fieldType: 'nested_range',\n                    primaryField: 'financial_year_data.starts_on',\n                    secondaryField: 'financial_year_data.ends_on',\n                },\n                {\n                    label: 'Status',\n                    key: 'status',\n                    icon: 'assessment',\n                    type: 'status',\n                },\n                {\n                    label: 'Organization Type',\n                    key: 'organization',\n                    icon: 'business',\n                    type: 'nested',\n                    fieldType: 'nested_string',\n                    primaryField: 'organization_data.org_type_code',\n                }\n            ],\n            auditTrail: true,\n            orgSummary: true,\n            attachments:  true,\n            totalsSummary: true,\n        },\n        // {\n        //     store: 'branches',\n        //     label: 'Activities',\n        //     content: 'grid',\n        //     modelKey: 'org_budget',\n        //     gridConf: {\n        //         getStore: 'organization-budget-activities',\n        //         editStore: 'organization-budget-activities'\n        //     },\n        //     topActions: [\n        //         {\n        //             btnText: 'ADD ACTIVITY',\n        //             status: 'info',\n        //             icon: 'true',\n        //             action: 'inline',\n        //             conf: {\n        //                 context: 'ACTIVITY',\n        //                 store: 'organization-budget-activities',\n        //                 btnText: 'SAVE'\n        //             }\n        //         }\n        //     ],\n        //     rows: [\n        //         { key: 'title', type: 'string' },\n        //         { key: 'activity_date', type: 'date' },\n        //         { key: 'estimated_amount', type: 'currency' },\n        //         { key: 'status', type: 'status' },\n        //     ],\n        //     headers: [\n        //         { title: 'Title' },\n        //         { title: 'Activity Date' },\n        //         { title: 'Estimated Amount' },\n        //         { title: 'Status' },\n        //         { title: 'Actions', oderable: false, searchable: false },\n        //     ],\n        //     actions: [\n        //         {\n        //             btnText: 'EDIT',\n        //             status: 'info',\n        //             icon: false,\n        //             disableStatus: 'FINISHED',\n        //             action: 'inline',\n        //             modalConf: {\n        //                 store: 'organization-budget-activities',\n        //                 titleKey: 'name',\n        //                 context: 'Budget Acitivity',\n        //                 btnText: 'SAVE'\n        //             }\n        //         },\n        //     ]\n        // },\n        {\n            store: 'branches',\n            label: 'Activities',\n            content: 'nested-list',\n        },\n        {\n            store: 'users',\n            label: 'Attachments',\n            content: 'attachments',\n            gridConf: {\n                getStore: 'organisations',\n                editStore: 'organisations'\n            },\n            topActions: [\n                {\n                    btnText: 'ADD USER',\n                    status: 'info',\n                    icon: 'true',\n                    action: 'inline',\n                    conf: {\n                        context: 'USER',\n                        store: 'users',\n                        btnText: 'SAVE'\n                    }\n                }\n            ],\n            rows: [\n                { key: 'first_name', type: 'string' },\n                { key: 'last_name', type: 'string' },\n                { key: 'phone_number', type: 'string' },\n                { key: 'email', type: 'string' },\n            ],\n            headers: [\n                { title: 'Names' },\n                { title: '.' },\n                { title: 'Phone Number' },\n                { title: 'Email' },\n                { title: 'Actions', oderable: false, searchable: false },\n            ],\n            actions: [\n                {\n                    btnText: 'EDIT',\n                    status: 'info',\n                    icon: false,\n                    disableStatus: 'FINISHED',\n                    action: 'inline',\n                    modalConf: {\n                        store: 'users',\n                        titleKey: 'name',\n                        context: 'Users',\n                        btnText: 'SAVE'\n                    }\n                    }\n            ]\n        },\n    ]\n}","import { Injectable } from '@angular/core';\nimport * as _ from 'lodash';\n\nimport { TabsConfigs } from './configs.constant';\n\n@Injectable()\nexport class TabbedWrapperService {\n    configArray = TabsConfigs;\n\n    getTabs(key) {\n        return _.find(this.configArray, { key });\n    }\n}","<div class=\"px-16 pt-8 pb-20\">\n    <div mat-dialog-title class=\"pb-3 d-flex\">\n        <div class=\"title-text flex-fill\">{{data?.configs.title || 'SUBMIT' }}</div>\n        <div>\n            <!-- <mat-icon class=\"hover-pointer\"\n            (click)=\"closeDialog\">close</mat-icon> -->\n        </div>\n    </div>\n    <div mat-dialog-content class=\"\">\n        <div>{{data?.configs.description}}</div>\n        <div *ngIf=\"data?.configs.approveNested\"\n        class=\"pt-4\">\n            <div class=\"list-section mb-n1 pt-16\">\n                <mat-checkbox class=\"\"\n                [checked]=\"allApproved\"\n                [indeterminate]=\"someApproved()\"\n                (change)=\"setAllApproved($event.checked)\">\n                    <span class=\"text-muted\">Select to approve all activities</span>\n                </mat-checkbox>\n            </div>\n            <div class=\"border-bottom mt-2\"></div>\n            <div class=\"list-section mt-0\">\n                <ul class=\"list-unstyled\">\n                    <li *ngFor=\"let activity of activities\">\n                        <div class=\"d-flex align-items-center\">\n                            <div>\n                                <mat-checkbox\n                                [(ngModel)]=\"activity.approved\"\n                                (ngModelChange)=\"updateAllApproved()\">\n                                    <div class=\"pl-8 pt-2\">\n                                        <div class=\"mb-n1\">\n                                            {{ activity?.title }}\n                                        </div>\n                                        <div class=\"d-flex\">\n                                            <div class=\"font-size-14\">\n                                                <span class=\"text-muted\">Amount:</span>\n                                                {{ activity?.estimated_amount | currency: 'Kshs '}}\n                                            </div>\n                                            <div class=\"pl-3 font-size-14 d-flex\">\n                                                <div><mat-icon class=\"font-size-14\">calendar_today</mat-icon></div>\n                                                <div class=\"ml-n2\">{{ activity?.activity_date | date: 'dd-MM-yyyy' }}</div>\n                                            </div>\n                                        </div>  \n                                    </div>\n                                </mat-checkbox>\n                            </div>\n                            <div>\n\n                            </div>\n                        </div>\n                    </li>\n                </ul>\n            </div>\n        </div>\n        <!-- Start of review attachment -->\n        <div class=\"\" *ngIf=\"data?.configs.reviewAttachment\">\n            <div class=\"attachemnt-wrapper mb-1 pt-3\">\n                <input type=\"file\" [hidden]=\"true\" class=\"ng-hide\"\n                id=\"input-attachment\" (change)=\"fileChange($event)\">\n                <label for=\"input-attachment\" class=\"mat-button w-100-p\n                d-flex pl-16 mat-elevation-z1 pt-2\">\n                    <div class=\"mt-2 pr-2\"><mat-icon class=\"\">\n                        {{fileName ? 'attachment' : 'cloud_upload' }}\n                    </mat-icon></div>\n                    <div class=\"pl-2\"> \n                        {{ fileName || 'Upload Approval Attachments' }} \n                    </div>\n                </label>\n            </div>\n        </div>\n        <!-- End of review attachments -->\n    </div>\n    <div mat-dialog-actions class=\"pt-5 pb-4 d-flex justify-content-end\"\n    *ngIf=\"!data?.configs.comment && !data?.configs.revisedAmount\">\n        <button mat-button mat-dialog-close \n        (click)=\"closeDialog()\">CLOSE</button>\n        <button mat-button [class.spinner]=\"loading\" \n        [disabled]=\"loading\" \n        (click)=\"dialogActions[data.configs.action]()\">\n            {{data?.action || 'SUBMIT' }}\n        </button>\n    </div>\n    <div mat-dialog-actions class=\"w-100-p pt-16 pb-4\"\n    *ngIf=\"data?.configs.comment\">\n        <form [formGroup]=\"commentForm\" name=\"fmr\" \n        (ngSubmit)=\"submitComment(commentForm)\" class=\"w-100-p\">\n            <div class=\"w-100-p pt-1\">\n                <div class=\"input-wrapper w-100-p\">\n                    <mat-form-field appearance=\"outline\" color=\"primary\"\n                    class=\"w-100-p pb-0 mb-0\">\n                        <mat-label>Enter a comment</mat-label>\n                        <textarea name=\"comment\" matInput\n                        id=\"\" cols=\"30\" rows=\"6\" \n                        placeholder=\"Kindly enter a comment...\"\n                        formControlName=\"comment\"></textarea>\n                    </mat-form-field>\n                </div>\n                <div *ngIf=\"f.comment.invalid && \n                (f.comment.touched || f.comment.dirty)\"  \n                class=\"invalid-feedback\">\n                    <div *ngIf=\"f.comment.errors.required\">\n                        Comment is required\n                    </div>\n                </div>\n            </div>\n            <div class=\"btn-container d-flex justify-content-end\">\n                <button mat-button mat-dialog-close\n                type=\"button\"\n                (click)=\"closeDialog()\">CLOSE</button>\n                <button mat-button type=\"submit\"\n                [class.spinner]=\"loading\" [disabled]=\"loading\">SUBMIT</button>\n            </div>\n        </form>\n    </div>\n    <div mat-dialog-actions class=\"w-100-p pt-16 pb-4\"\n    *ngIf=\"data?.configs.revisedAmount\">\n        <form [formGroup]=\"revisedAmountForm\" name=\"fmr\" \n        (ngSubmit)=\"submitRevisedAmount(revisedAmountForm)\" class=\"w-100-p\">\n            <div class=\"w-100-p pt-1\">\n                <div class=\"input-wrapper w-100-p\">\n                    <mat-form-field appearance=\"outline\" color=\"primary\"\n                    class=\"w-100-p pb-0 mb-0\">\n                        <mat-label>Approved Amount</mat-label>\n                        <input name=\"revised_amount\" matInput\n                        placeholder=\"Kindly enter a approved amount...\"\n                        formControlName=\"revised_amount\" />\n                    </mat-form-field>\n                    <div class=\"mt-n4 text-muted\">{{ rA.revised_amount.value | currency: 'Kshs ' }}</div>\n                </div>\n                <div *ngIf=\"rA.revised_amount.invalid && \n                (rA.revised_amount.touched || rA.revised_amount.dirty)\"  \n                class=\"invalid-feedback\">\n                    <div *ngIf=\"rA.revised_amount.errors.required\">\n                        Approved amount is required\n                    </div>\n                </div>\n            </div>\n            <div class=\"btn-container d-flex justify-content-end\">\n                <button mat-button mat-dialog-close\n                type=\"button\"\n                (click)=\"closeDialog()\">CLOSE</button>\n                <button mat-button type=\"submit\"\n                [class.spinner]=\"loading\" [disabled]=\"loading\">SUBMIT</button>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nimport { DataLayerService } from 'app/services/http/dataLayer.service';\nimport { get, has, isEmpty, isUndefined } from 'lodash';\n\n@Component({\n    selector: 'tabbed-dialog',\n    templateUrl: 'main-dialog.component.html',\n    styleUrls: ['main-dialog.component.scss'],\n    providers: [DataLayerService]\n})\n\nexport class MainDialogComponent implements OnInit {\n    loading: boolean;\n    organization: any;\n    comment: string;\n\n    commentForm: FormGroup;\n    revisedAmountForm: FormGroup;\n    activities: Array<any> = [];\n    allApproved: boolean = false;\n    attachedDoc: any = {};\n    fileName: string;\n\n    constructor(@Inject(MAT_DIALOG_DATA) public data: any,\n        private _formBuilder: FormBuilder,\n        private _snackBar: MatSnackBar,\n        private _dataLayer: DataLayerService,\n        public dialogRef: MatDialogRef<MainDialogComponent>) {\n    }\n\n    setFileName() {\n        const strArr = this.attachedDoc.file.split('/');\n        this.fileName = strArr[strArr.length - 1];\n    }\n\n    formInit() {\n        this.commentForm = this._formBuilder.group({\n            comment: ['', Validators.required],\n        });\n        this.revisedAmountForm = this._formBuilder.group({\n            revised_amount: ['', Validators.required],\n        });\n        if (has(this.data.configs, 'revisedAmount')) {\n            this.rA.revised_amount.setValue(this.data.item.amount_requested);\n        }\n    }\n\n    openSnackBar(message: string, action: string) {\n        this._snackBar.open(message, action, {\n          duration: 4000,\n        });\n    }\n\n    getUserOrganization() {\n        const organization = JSON.parse(localStorage.getItem('organization'));\n        this.organization = get(organization, 'organization', null);\n    }\n\n    transitionDocument(transitionObj?, feedback?) {\n        this._dataLayer.create(this.data.configs.store, transitionObj)\n            .subscribe(resp => {\n                this.loading = false;\n                this.closeDialog('refresh');\n                this._dataLayer.openDynamicSnackBar(feedback.successMsg, 'success');\n                if (!isUndefined(this.fileName)) {\n                    const postObj = {\n                        organization: this.organization,\n                        application_review: resp['id'],\n                        attachment: this.attachedDoc['id'],\n                    }\n                    const params = { key: 'current_org_id', value: this.organization };\n                    this._dataLayer.create('application-review-attachments',\n                        postObj, undefined, params)\n                        .subscribe(resp => {\n                        }, err => {\n                            console.log(err);\n                            this._dataLayer.openDynamicSnackBar('An error occurred', 'error');\n                        })\n                }\n            }, err => {\n                console.log(err);\n                this.loading = false;\n                this._dataLayer.openDynamicSnackBar('An error occurred', 'error');\n            })\n    }\n\n    submitComment(frm) {\n        if (frm.valid) {\n            const comment = frm.value['comment'];\n            this.dialogActions[this.data.configs.action](comment);\n        }\n    }\n\n    submitRevisedAmount(frm) {\n        if (frm.valid) {\n            const revised_amount = frm.value['revised_amount'];\n            this.dialogActions[this.data.configs.action](revised_amount);\n        }\n    }\n\n    get f() { return this.commentForm.controls };\n    get rA() { return this.revisedAmountForm.controls };\n\n    dialogActions: any = {\n        submitApplication: () => {\n            this.getUserOrganization();\n            this.loading = true;\n            const postObject = {\n                comment: this.comment || 'Application submitted',\n                review_status: 'SUBMITTED',\n                organization: this.organization,\n                application: this.data.item.id,\n            };\n            const feedback = {\n                successMsg: 'Record has been submitted successfully'\n            }\n            this.transitionDocument(postObject, feedback);\n        },\n        firstApproveApplication: () => {\n            this.getUserOrganization();\n            this.loading = true;\n            const postObject = {\n                comment: this.comment || 'Application authorized',\n                review_status: 'FIRST_LEVEL_APPROVED',\n                organization: this.organization,\n                application: this.data.item.id,\n            }\n            const feedback = {\n                successMsg: 'Record has been authorized successfully',\n            };\n            this.transitionDocument(postObject, feedback);\n        },\n        authorizeApplication: (revised_amount?) => {\n            this.getUserOrganization();\n            this.loading = true;\n            const params = {\n                key: 'current_org_id',\n                value: this.organization,\n            }\n            const updateObj = {\n                revised_amount,\n            };\n            this._dataLayer.update('applications', this.data.item.id,\n                updateObj, params)\n                .subscribe(resp => {\n                    this.dialogActions.firstApproveApplication();\n                }, err => {\n                    console.log(err);\n                    const errMsg = 'An error occurred while authorizing application';\n                    this._dataLayer.openDynamicSnackBar(errMsg, 'error');\n                })\n        },\n        rationalizeApplication: (comment?) => {\n            this.getUserOrganization();\n            const ratObj = {\n                comment: comment || 'Application rationalized',\n                review_status: 'RATIONALIZED',\n                organization: this.organization,\n                application: this.data.item.id,\n            };\n            const params = {\n                key: 'current_org_id',\n                value: this.organization,\n            };\n            this.loading = true;\n            this._dataLayer.create(this.data.configs.store, ratObj, undefined, params)\n            .subscribe(resp => {\n                console.log(resp);\n                this.loading = false;\n                this.closeDialog('refresh');\n                this._dataLayer.openDynamicSnackBar(\n                    'Application rationalized successfully', 'success'\n                );\n            }, err => {\n                console.log(err);\n                this.loading = false;\n                this._dataLayer.openDynamicSnackBar(\n                    'An error occurred', 'error'\n                );\n            })\n        },\n        approveApplication: (comment?) => {\n            this.getUserOrganization();\n            this.loading = true;\n            const approveObj = {\n                comment: comment || 'Calendar of events approved',\n                review_status: 'SASDEF_APPROVED',\n                organization: this.organization,\n                application: this.data.item.id,\n            };\n            const params = {\n                key: 'current_org_id',\n                value: this.organization,\n            };\n            this._dataLayer.create(this.data.configs.store, approveObj, undefined, params)\n            .subscribe(resp => {\n                this.loading = false;\n                this.closeDialog('refresh');\n                this._dataLayer.openDynamicSnackBar(\n                    'Application has been approved successfully', 'success');\n            }, err => {\n                console.log(err);\n                this.loading = false;\n                this._dataLayer.openDynamicSnackBar('An error occurred', 'error');\n            })\n        },\n        rejectApplication: (comment?) => {\n            this.getUserOrganization();\n            this.loading = true;\n            const postObject = {\n                comment: this.comment || 'Application rejected',\n                review_status: 'REJECTED',\n                organization: this.organization,\n                application: this.data.item.id,\n            }\n            const params = {\n                key: 'current_org_id',\n                value: this.organization,\n            };\n            const feedback = {\n                successMsg: 'Record has been rejected successfully',\n            };\n            this._dataLayer.create(this.data.configs.store, postObject, undefined, params)\n            .subscribe(resp => {\n                this.loading = false;\n                this.closeDialog('refresh');\n                this._dataLayer.openDynamicSnackBar(\n                    'Application has been rejected successfully', 'success');\n            }, err => {\n                console.log(err);\n                this.loading = false;\n                this._dataLayer.openDynamicSnackBar('An error occurred', 'error');\n            })\n        },\n        update: () => {\n            this.getUserOrganization();\n            this.loading = true;\n            const patchParams = {key: 'current_org_id', value: this.organization };\n            this._dataLayer.update(this.data.configs.store, \n                this.data.item.id, { status: 'SUBMITTED' }, patchParams)\n                .subscribe(resp => {\n                    this.loading = false;\n                    this.closeDialog('refresh');\n                    this.openSnackBar('Record has been submitted successfully', 'CLOSE');\n                }, err => {\n                    console.log(err);\n                    this.loading = false;\n                    this.openSnackBar('An error occurred', 'CLOSE');\n                });\n        },\n        submitted: () => {\n            this.getUserOrganization();\n            this.loading = true;\n            const approveObj = {\n                comment: this.comment || 'Budget submitted',\n                review_status: 'SUBMITTED',\n                organization: this.organization,\n                org_budget: this.data.item.id,\n            };\n            this._dataLayer.create(this.data.configs.store, approveObj)\n            .subscribe(resp => {\n                this.loading = false;\n                this.closeDialog('refresh');\n                this._dataLayer.openDynamicSnackBar(\n                    'Budget has been submitted successfully', 'success');\n            }, err => {\n                console.log(err);\n                this.loading = false;\n                this._dataLayer.openDynamicSnackBar('An error occurred', 'error');\n            })\n        },\n        approve: (comment?) => {\n            this.getUserOrganization();\n            this.loading = true;\n            const approveObj = {\n                comment: comment || 'Calendar of events approved',\n                review_status: 'SASDEF_APPROVED',\n                organization: this.organization,\n                org_budget: this.data.item.id,\n            };\n            this._dataLayer.create(this.data.configs.store, approveObj)\n            .subscribe(resp => {\n                this.loading = false;\n                this.closeDialog('refresh');\n                this._dataLayer.openDynamicSnackBar(\n                    'Calendar of events has been approved successfully', 'success');\n            }, err => {\n                console.log(err);\n                this.loading = false;\n                this._dataLayer.openDynamicSnackBar('An error occurred', 'error');\n            })\n        },\n        rationalize: (comment?) => {\n            this.getUserOrganization();\n            const ratObj = {\n                comment: comment || 'Calendar of events rationalized',\n                review_status: 'RATIONALIZED',\n                organization: this.organization,\n                org_budget: this.data.item.id,\n            };\n            const params = {\n                key: 'current_org_id',\n                value: this.organization,\n            };\n            this.loading = true;\n            this._dataLayer.create(this.data.configs.store, ratObj, undefined, params)\n            .subscribe(resp => {\n                console.log(resp);\n                this.loading = false;\n                this.closeDialog('refresh');\n                this._dataLayer.openDynamicSnackBar(\n                    'Calendar of events rationalized successfully', 'success'\n                );\n            }, err => {\n                console.log(err);\n                this.loading = false;\n                this._dataLayer.openDynamicSnackBar(\n                    'An error occurred', 'error'\n                );\n            })\n        },\n        approveBudget: (comment?) => {\n            const params = {\n                key: 'current_org_id',\n                value: this.organization,\n            }\n            this.loading = true;\n            this.activities.forEach((activity, ind) => {\n                const updateObj = {\n                    status: activity.approved ? 'APPROVED' : 'REJECTED',\n                };\n                this._dataLayer.update('organization-budget-activities', \n                    activity['id'], updateObj, params)\n                    .subscribe(resp => {\n                        if (ind === this.activities.length - 1) {\n                            this.dialogActions.approve(comment);\n                        }\n                    }, err => {\n                        console.log(err);\n                        this.loading = false;\n                    })\n            })\n        },\n        reject: (comment?) => {\n            this.getUserOrganization();\n            this.loading = true;\n            const rejectObj = {\n                comment: comment || 'Calendar of events rejected',\n                review_status: 'REJECTED',\n                organization: this.organization,\n                org_budget: this.data.item.id,\n            };\n            this._dataLayer.create(this.data.configs.store, rejectObj)\n            .subscribe(resp => {\n                this.loading = false;\n                this.closeDialog('refresh');\n                this._dataLayer.openDynamicSnackBar(\n                    'Calendar of events has been rejected successfully', 'success');\n            }, err => {\n                console.log(err);\n                this.loading = false;\n                this.openSnackBar('An error occurred', 'CLOSE');\n            })\n        }\n    };\n\n    submitAction() {\n        console.log('Submit called');\n    }\n\n    closeDialog(arg?) {\n        this.dialogRef.close(arg);\n    }\n\n    updateAllApproved() {\n        this.allApproved = !isEmpty(this.activities) &&\n            this.activities.every(activity => activity.approved);\n    }\n\n    someApproved(): boolean {\n        if (isEmpty(this.activities)) {\n            return false;\n        }\n        return this.activities.filter(activity => activity.approved).length > 0\n            && !this.allApproved; \n    }\n\n    setAllApproved(completed: boolean) {\n        this.allApproved = completed;\n        if (isEmpty(this.activities)) return;\n        this.activities.forEach(activity => activity.approved = completed);\n    }\n\n    fetchNested() {\n        this.getUserOrganization();\n        const params = {\n            current_org_id: this.organization,\n            org_budget: this.data.item.id,\n        }\n        this._dataLayer.list('organization-budget-activities', params)\n            .subscribe(resp => {\n                this.activities = resp['results'];\n                this.setAllApproved(true);\n            }, err => {\n                console.log(err);\n            })\n    }\n\n    fileChange(files) {\n        const file = files.target.files[0];\n        const fileFormData = {\n            file,\n            attachment_type: 'APPLICATION_DOCUMENT',\n        };\n        const formData = new FormData();\n        formData.append('file', fileFormData.file);\n        formData.append('attachment_type', fileFormData.attachment_type);\n\n        this._dataLayer.uploadFile('attachments', formData)\n            .subscribe(resp => {\n                this.attachedDoc = resp;\n                this.setFileName();\n            }, err => {\n                console.log(err);\n            })\n    }\n\n    ngOnInit() {\n        this.formInit();\n        if (this.data.configs.store === 'organization-budget-reviews') {\n            this.fetchNested();\n        }\n    }\n}","<div class=\"w-100-p pt-3\">\n    <div class=\"px-5 pt-5 pb-3\">\n        <div class=\"card\">\n            <div class=\"card-header pt-2 pb-1\">\n                <div class=\"pl-3 text-muted font-weight-bold\n                pb-2 d-flex align-items-center\">\n                    <div class=\"pt-2 pr-2\"><mat-icon>business</mat-icon>&nbsp;</div>\n                    <div>Organization</div>\n                </div>\n            </div>\n            <div class=\"card-body px-0 pb-1 pt-0\">\n                <div>\n                    <table class=\"table borderless font-size-13 mb-0\">\n                        <thead>\n                            <th class=\"border-0 pl-20 font-size-12\"\n                            *ngFor=\"let header of gridConf\">\n                                {{ header?.title }}\n                            </th>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td class=\"pl-20\"\n                                *ngFor=\"let td of gridConf\">\n                                    <div *ngIf=\"organization\">\n                                        <span>{{ organization[td.key] | removeUnderscore }}</span>\n                                        <mat-icon *ngIf=\"!organization[td.key]\">\n                                            remove\n                                        </mat-icon>\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'organization-summary',\n    templateUrl: 'organization-summary.component.html',\n})\n\nexport class OrganizationSummaryComponent {\n    @Input() organization;\n\n    gridConf: Array<any> = [\n        { title: 'Name', key: 'name' },\n        { title: 'Phone #', key: 'phone_number' },\n        { title: 'Email', key: 'email' },\n        { title: 'Organization Type', key: 'org_type_code' },\n    ]\n}","<div class=\"px-20 pt-20 pb-12\" *ngIf=\"orgType === 'SASDEF'\">\n    <div class=\"px-20\">\n        <div class=\"card\">\n            <div class=\"card-header pt-3 bg-white\">\n                <div class=\"pl-3 text-muted font-weight-bold\n                pb-2 d-flex align-items-center\">\n                    <div class=\"pt-2 pr-2\"><mat-icon>people</mat-icon>&nbsp;</div>\n                    <div class=\"flex-fill\">Monitoring & Evaluation</div>\n                    <div class=\"pt-2\">\n                        <button mat-raised-button color=\"default\"\n                        (click)=\"toggleCreateForm()\" class=\"pl-3 mt-n2\">\n                            <mat-icon>add</mat-icon>&nbsp;\n                            ADD M&E\n                        </button>\n                    </div>\n                </div>\n                <div class=\"col-12 bg-light py-16\"\n                style=\"margin: auto;\" *ngIf=\"showForm\">\n                    <div class=\"col-lg-9\" style=\"margin: auto;\">\n                        <mat-card class=\"card p-0\">\n                            <div class=\"card-header py-0\">\n                                <div class=\"d-flex\">\n                                    <div class=\"flex-fill pt-3\">\n                                        ADD M&E\n                                    </div>\n                                    <div>\n                                        <span style=\"cursor: pointer;\"\n                                        class=\"font-size-28 text-muted\"\n                                        (click)=\"toggleCreateForm()\">\n                                            &times;\n                                        </span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"card-body px-5 pt-5\">\n                                <!-- TODO: Implement inline form -->\n                                <dynamic-form btnText=\"SAVE\"\n                                btnClass=\"tiny\" \n                                [submitted]=\"submitted\" [baseCancel]=\"true\"\n                                store=\"application-me\" btnStatus=\"primary\"\n                                (cancelFxn)=\"toggleCreateForm()\"\n                                (submitModel)=\"receiveModel($event)\">\n                                </dynamic-form>\n                            </div>\n                        </mat-card>\n                    </div>\n                </div>\n            </div>\n            <div class=\"card-body px-0 pb-1 pt-0\">\n                <div>\n                    <table class=\"table borderless font-size-13\">\n                        <thead class=\"thead-light font-size-12\">\n                            <th *ngFor=\"let conf of gridConf\"\n                            class=\"border-0 pl-20\">\n                                {{ conf.title }}\n                            </th>\n                            <th class=\"border-0 pl-20\"></th>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let anItem of list\">\n                                <td *ngFor=\"let conf of gridConf\"\n                                class=\"pl-20 vertical-align-center\" \n                                valign=\"middle\"\n                                [hidden]=\"anItem.showInline\">\n                                    <div *ngIf=\"conf.key === 'head_count'\">\n                                        <div>\n                                            {{ anItem[conf.key] }} \n                                            <span class=\"text-muted\">&nbsp;Attendees</span>\n                                        </div>\n                                        <div>\n                                            {{ anItem.days | number: '1.0' }}\n                                            <span class=\"text-muted\">&nbsp;days&nbsp;</span>\n                                            <span>&nbsp;@&nbsp;</span>\n                                            <span>\n                                                &nbsp;{{ anItem.unit_price | currency: 'Kshs ' }}\n                                            </span>\n                                        </div>\n                                    </div>\n                                    <div *ngIf=\"conf.key === 'total'\">\n                                        {{ anItem.head_count * anItem.days * anItem.unit_price | currency: 'Kshs ' }}\n                                    </div>\n                                    <div *ngIf=\"conf.key !== 'head_count' && conf.key !== 'total'\">\n                                        {{ anItem[conf.key] }}\n                                    </div>\n                                    <mat-icon *ngIf=\"!anItem[conf.key] && conf.key !== 'total'\">\n                                        remove\n                                    </mat-icon>\n                                </td>\n                                <td valign=\"middle\" class=\"vertical-align-center\"\n                                [hidden]=\"anItem.showInline\">\n                                    <button mat-stroked-button color=\"accent\"\n                                    (click)=\"toggleForm(anItem)\">\n                                        Edit\n                                    </button>\n                                </td>\n                                <td [attr.colspan]=\"tab?.bankConfs.length + 1\"\n                                class=\"bg-light-grey py-3 px-5\" *ngIf=\"anItem.showInline\">\n                                    <div class=\"col-12 col-lg-8\"\n                                    style=\"margin: auto;\">\n                                        <mat-card class=\"card p-0\">\n                                            <div class=\"card-header py-0\">\n                                                <div class=\"d-flex\">\n                                                    <div class=\"flex-fill pt-3\">\n                                                        EDIT BANK DETAILS\n                                                    </div>\n                                                    <div>\n                                                        <span style=\"cursor: pointer;\"\n                                                        class=\"font-size-28 text-muted\"\n                                                        (click)=\"toggleForm(anItem)\">\n                                                            &times;\n                                                        </span>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"card-body px-5 pt-5\">\n                                                <!-- TODO: Implement inline form -->\n                                                <dynamic-form btnText=\"SAVE\"\n                                                btnClass=\"tiny\" [model]=\"anItem\"\n                                                [submitted]=\"submitted\" [baseCancel]=\"true\"\n                                                store=\"organization-bank-accounts\" btnStatus=\"primary\"\n                                                (cancelFxn)=\"toggleForm(anItem)\"\n                                                (submitModel)=\"receiveModel($event)\">\n                                                </dynamic-form>\n                                            </div>\n                                        </mat-card>\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr *ngIf=\"!list?.length\">\n                                <td [attr.colspan]=\"gridConf.length + 1\" \n                                class=\"pb-0 mb-0\">\n                                    <div class=\"w-100-p px-3\">\n                                        <div class=\"alert alert-primary mb-0 pb-2 pt-3\">\n                                            <div class=\"d-flex align-items-center\">\n                                                <div class=\"pr-20\">\n                                                    <mat-icon>\n                                                        info_circle\n                                                    </mat-icon>\n                                                </div>\n                                                <div class=\"flex-fill\">\n                                                    There is currently no Monitoring\n                                                    & Evaluation details added for this application. \n                                                </div>\n                                                <div class=\"pr-8\">\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\n\nimport { DataLayerService } from 'app/services/http/dataLayer.service';\nimport { Authorization } from 'app/services/authorization.service';\nimport { get, has } from 'lodash';\n\n@Component({\n    selector: 'application-me',\n    templateUrl: 'application-me.component.html',\n})\n\nexport class ApplicationMEComponent implements OnInit {\n    @Input() item;\n\n    orgId:string;\n    orgType: string;\n    list: Array<any> = [];\n    submitted: boolean;\n    showForm: boolean;\n    loading: boolean;\n    gridConf: Array<any> = [\n        { title: 'Attendees', key: 'head_count' },\n        { title: 'Total', key: 'total' },\n        { title: 'Description', key: 'description' },\n    ]\n\n    postObj = {\n        organiazation: '',\n        application: '',\n        // amount: '', Use as unit price\n        amount: '',\n        quantity: '',\n        description: '',\n    }\n\n    constructor(private _dataLayer: DataLayerService,\n        private _authConfig: Authorization) {}\n\n    toggleForm(item) {\n        item.showInline = !item.showInline;\n    }\n\n    toggleCreateForm() {\n        this.showForm = !this.showForm;\n    }\n\n    getList() {\n        this.loading = true;\n        const params = { \n            current_org_id: this.orgId, \n            application: this.item.id \n        };\n        this._dataLayer.list('application-mes', params)\n            .subscribe(resp => {\n                this.loading = false;\n                this.list = resp['results'];\n            }, err => { this.loading = false; console.log(err); });\n    }\n\n    receiveModel(model) {\n        if (has(model, 'id')) {\n            this._dataLayer.update(\n                'application-mes', \n                model['id'], model,\n                { key: 'current_org_id', value: this.orgId }\n            ).subscribe(() => {\n                this.getList();\n            }, err => console.log(err));\n        } else {\n            model = { ...model, organization: this.orgId, application: this.item['id'] };\n            const params = { key: 'current_org_id', value: this.orgId };\n            this._dataLayer.create('application-mes', model, undefined, params)\n            .subscribe(() => {\n                this.getList();\n                this.toggleCreateForm();\n                const msg = 'M&E Item succesfully added';\n                this._dataLayer.openDynamicSnackBar(msg, 'success');\n            }, err => { \n                const errMsg = 'An error occurred while adding M&E item. Try again';\n                this._dataLayer.openDynamicSnackBar(errMsg, 'error');\n            });\n        }\n    }\n\n    ngOnInit() {\n        const orgDetails = JSON.parse(\n            this._authConfig.getOrganization());\n        this.orgId = get(orgDetails, 'organization', null);\n        this.orgType = get(orgDetails, 'org_type', null);\n        this.getList();\n    }\n}","<div class=\"card\">\n    <div class=\"card-header pt-3 bg-white\">\n        <div class=\"pl-3 text-muted font-weight-bold\n        pb-2 d-flex align-items-center\">\n            <div class=\"pt-2 pr-2\"><mat-icon>account_balance</mat-icon>&nbsp;</div>\n            <div>Bank Account</div>\n        </div>\n    </div>\n    <div class=\"card-body px-0 pb-1 pt-0\">\n        <div>\n            <table class=\"table borderless font-size-13\">\n                <thead class=\"thead-light font-size-12\">\n                    <th *ngFor=\"let conf of tab?.bankConfs\"\n                    class=\"border-0 pl-20\">\n                        {{ conf.title }}\n                    </th>\n                    <th class=\"border-0 pl-20\"></th>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let anItem of list\">\n                        <td *ngFor=\"let conf of tab?.bankConfs\"\n                        class=\"pl-20 vertical-align-center\" \n                        valign=\"middle\"\n                        [hidden]=\"anItem.showInline\">\n                            {{ anItem[conf.key] }}\n                            <mat-icon *ngIf=\"!anItem[conf.key]\">\n                                remove\n                            </mat-icon>\n                        </td>\n                        <td valign=\"middle\" class=\"vertical-align-center\"\n                        [hidden]=\"anItem.showInline\">\n                            <button mat-stroked-button color=\"accent\"\n                            (click)=\"toggleForm(anItem)\">\n                                Edit\n                            </button>\n                        </td>\n                        <td [attr.colspan]=\"tab?.bankConfs.length + 1\"\n                        class=\"bg-light-grey py-3 px-5\" *ngIf=\"anItem.showInline\">\n                            <div class=\"col-12 col-lg-8\"\n                            style=\"margin: auto;\">\n                                <mat-card class=\"card p-0\">\n                                    <div class=\"card-header py-0\">\n                                        <div class=\"d-flex\">\n                                            <div class=\"flex-fill pt-3\">\n                                                EDIT BANK DETAILS\n                                            </div>\n                                            <div>\n                                                <span style=\"cursor: pointer;\"\n                                                class=\"font-size-28 text-muted\"\n                                                (click)=\"toggleForm(anItem)\">\n                                                    &times;\n                                                </span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"card-body px-5 pt-5\">\n                                        <!-- TODO: Implement inline form -->\n                                        <dynamic-form btnText=\"SAVE\"\n                                        btnClass=\"tiny\" [model]=\"anItem\"\n                                        [submitted]=\"submitted\" [baseCancel]=\"true\"\n                                        store=\"organization-bank-accounts\" btnStatus=\"primary\"\n                                        (cancelFxn)=\"toggleForm(anItem)\"\n                                        (submitModel)=\"receiveModel($event)\">\n                                        </dynamic-form>\n                                    </div>\n                                </mat-card>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"!list?.length\">\n                        <td [attr.colspan]=\"tab?.bankConfs.length + 1\" \n                        class=\"pb-0 mb-0\" *ngIf=\"!showForm\">\n                            <div class=\"w-100-p px-3\">\n                                <div class=\"alert alert-primary mb-0 pb-2 pt-3\">\n                                    <div class=\"d-flex align-items-center\">\n                                        <div class=\"pr-20\">\n                                            <mat-icon>\n                                                info_circle\n                                            </mat-icon>\n                                        </div>\n                                        <div class=\"flex-fill\">\n                                            There is currently no bank account\n                                            registered for this organization \n                                        </div>\n                                        <div class=\"pr-8\">\n                                            <button mat-raised-button color=\"default\"\n                                            (click)=\"toggleCreateForm()\" class=\"pl-3 mt-n2\">\n                                                <mat-icon>add</mat-icon>&nbsp;\n                                                ADD ACCOUNT\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </td>\n                        <td [attr.colspan]=\"tab?.bankConfs.length + 1\"\n                        class=\"bg-light-grey py-3 px-5\" *ngIf=\"showForm\">\n                            <div class=\"col-12 col-lg-8\"\n                            style=\"margin: auto;\">\n                                <mat-card class=\"card p-0\">\n                                    <div class=\"card-header py-0\">\n                                        <div class=\"d-flex\">\n                                            <div class=\"flex-fill pt-3\">\n                                                ADD BANK DETAILS\n                                            </div>\n                                            <div>\n                                                <span style=\"cursor: pointer;\"\n                                                class=\"font-size-28 text-muted\"\n                                                (click)=\"toggleCreateForm()\">\n                                                    &times;\n                                                </span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"card-body px-5 pt-5\">\n                                        <!-- TODO: Implement inline form -->\n                                        <dynamic-form btnText=\"SAVE\"\n                                        btnClass=\"tiny\" \n                                        [submitted]=\"submitted\" [baseCancel]=\"true\"\n                                        store=\"organization-bank-accounts\" btnStatus=\"primary\"\n                                        (cancelFxn)=\"toggleCreateForm()\"\n                                        (submitModel)=\"receiveModel($event)\">\n                                        </dynamic-form>\n                                    </div>\n                                </mat-card>\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { Component, Input, OnInit }  from '@angular/core';\n\nimport { DataLayerService } from 'app/services/http/dataLayer.service';\nimport { Authorization } from 'app/services/authorization.service';\nimport { get, has } from 'lodash';\n\n@Component({\n    selector: 'tabbed-inline-list',\n    templateUrl: 'tabbed-inline-list.component.html',\n})\n\nexport class TabbedInlinedList implements OnInit {\n    @Input() tab: any;\n    @Input() item: any;\n    @Input() parentKey: string;\n\n    organization: any;\n    loading: boolean = true;\n    showForm: boolean;\n    list: Array<any> = [];\n    submitted: false;\n\n    constructor(private _dataLayer: DataLayerService,\n        private _authConfig: Authorization) {\n\n    }\n\n    toggleForm(item) {\n        item.showInline = !item.showInline;\n    }\n\n    toggleCreateForm() {\n        this.showForm = !this.showForm;\n    }\n\n    getBankAccount() {\n        const params = { \n            current_org_id: this.organization, \n            organization: this.parentKey ? \n               this.item[this.parentKey] : this.item['id'],\n        };\n        this._dataLayer.list('organization-bank-accounts', params)\n        .subscribe(resp => {\n            this.list = resp['results'];\n            this.loading = false;\n        }, err => { this.loading = false; console.log(err); });\n    }\n\n    receiveModel(model) {\n        if (has(model, 'id')) {\n            this._dataLayer.update(\n                'organization-bank-accounts', \n                model['id'], model,\n                { key: 'current_org_id', value: this.organization }\n            ).subscribe(() => {\n                this.getBankAccount();\n            }, err => console.log(err));\n        } else {\n            model = { ...model, organization: this.item['id'] };\n            this._dataLayer.create('organization-bank-accounts', model)\n            .subscribe(() => {\n                this.getBankAccount();\n            }, err => console.log(err));\n        }\n    }\n\n    ngOnInit() {\n        this.organization = get(\n            JSON.parse(this._authConfig.getOrganization()), \n            'organization', null\n        );\n        this.getBankAccount();\n    }\n}","<div class=\"w-100-p pt-3\">\n    <div class=\"px-5 pt-5 pb-3\">\n        <div class=\"card\">\n            <div class=\"card-header pt-2 pb-1 bg-white\">\n                <div class=\"pl-3 text-muted font-weight-bold\n                pb-2 d-flex align-items-center\">\n                    <div class=\"pt-2 pr-2\"><mat-icon>games</mat-icon>&nbsp;</div>\n                    <div>Activity</div>\n                </div>\n            </div>\n            <div class=\"card-body px-0 pb-16 pt-0\">\n                <div>\n                    <table class=\"table borderless font-ize-13 mb-0\">\n                        <thead class=\"thead-light font-size-12\">\n                            <th class=\"border-0 pl-20\"\n                            *ngFor=\"let header of gridConf\">\n                                {{ header?.title }}\n                            </th>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td class=\"pl-20\"\n                                *ngFor=\"let td of gridConf\">\n                                    <div *ngIf=\"activityDetails\">\n                                        <div *ngIf=\"td.key === 'title'\">\n                                            <span >{{ activityDetails[td.key] }}</span>\n                                            <mat-icon *ngIf=\"!activityDetails[td.key]\">\n                                                remove\n                                            </mat-icon>\n                                        </div>\n                                        <span *ngIf=\"td.key === 'activity_date'\">\n                                            <span >{{ activityDetails[td.key] | date: 'dd-MM-yyyy' }}</span>\n                                            <mat-icon *ngIf=\"!activityDetails[td.key]\">\n                                                remove\n                                            </mat-icon>\n                                        </span>\n                                        <span *ngIf=\"td.key === 'total'\">\n                                            <span>{{ activityDetails[td.key] | currency: 'Kshs ' }}</span>\n                                            <mat-icon *ngIf=\"!activityDetails[td.key]\">\n                                                remove\n                                            </mat-icon>\n                                        </span>\n                                        <span *ngIf=\"td.key === 'rationalized_total'\">\n                                            <span>{{ activityDetails[td.key] | currency: 'Kshs ' }}</span>\n                                            <mat-icon *ngIf=\"!activityDetails[td.key]\">\n                                                remove\n                                            </mat-icon>\n                                        </span>\n                                        <span *ngIf=\"td.key === 'actual_total'\">\n                                            <span>{{ activityDetails[td.key] | currency: 'Kshs ' }}</span>\n                                            <mat-icon *ngIf=\"!activityDetails[td.key]\">\n                                                remove\n                                            </mat-icon>\n                                        </span>\n                                        <span *ngIf=\"td.key === 'status'\">\n                                            <span class=\"badge {{activityDetails[td.key] | lowercase}}\">\n                                                {{ activityDetails[td.key] }}\n                                            </span>\n                                            <mat-icon *ngIf=\"!activityDetails[td.key]\">\n                                                remove\n                                            </mat-icon>\n                                        </span>\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td [attr.colspan]=\"gridConf?.length\" class=\"pb-0\">\n                                    <div class=\"card border-0 mb-n3\">\n                                        <mat-accordion>\n                                            <mat-expansion-panel \n                                            (opened)=\"panelOpenState = true\"\n                                            (closed)=\"panelOpenState = false\">\n                                                <mat-expansion-panel-header>\n                                                <mat-panel-title>\n                                                    <span class=\"text-muted\">Total Budget</span>\n                                                    &nbsp; -&nbsp; {{ activityBudget?.actual_total | currency: 'Kshs ' }}\n                                                </mat-panel-title>\n                                                <mat-panel-description>\n                                                    Budget Date: &nbsp;<b>{{ activityDetails?.created | date: 'dd-MM-yyyy' }}</b>\n                                                </mat-panel-description>\n                                                </mat-expansion-panel-header>\n                                                <mat-list class=\"mt-n5\">\n                                                    <mat-list-item class=\"ml-n3 py-0 mb-n3\"\n                                                    *ngFor=\"let activity of activityBudget?.activities\"> \n                                                    <mat-icon matListIcon>note</mat-icon>\n                                                    <h4 matLine>{{activity.title}}</h4>\n                                                    <div matLine class=\"list-inline d-flex flex-row font-size-12 mb-0\">\n                                                        <!-- <div class=\"list-inline-item\">\n                                                            <p matLine class=\"demo-2\"> \n                                                                <span class=\"text-muted\">Applied:</span>&nbsp;\n                                                                {{activity.total | currency: 'Kshs '}} \n                                                            </p>\n                                                        </div> -->\n                                                        <div class=\"list-inline-item pl-0\">\n                                                            <p class=\"demo-2\"> \n                                                                <span class=\"text-muted\">Rationalized:</span>&nbsp;\n                                                                {{activity.rationalized_total | currency: 'Kshs '}} \n                                                            </p>\n                                                        </div>\n                                                        <div class=\"list-inline-item pl-3\">\n                                                            <p class=\"demo-2\"> \n                                                                <span class=\"text-muted\">Approved:</span>&nbsp;\n                                                                {{activity.actual_total | currency: 'Kshs '}} \n                                                            </p>\n                                                        </div>\n                                                    </div>\n                                                    </mat-list-item>\n                                                </mat-list>\n                                            </mat-expansion-panel>\n                                        </mat-accordion>\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\n\nimport { DataLayerService } from 'app/services/http/dataLayer.service';\nimport { Authorization } from 'app/services/authorization.service';\nimport { get } from 'lodash';\n\n@Component({\n    selector: 'activity-summary',\n    templateUrl: 'activity-summary.component.html',\n    styleUrls: ['../main-wrapper/main-wrapper.component.scss'],\n    providers: [DataLayerService]\n})\n\nexport class ActivitySummaryComponent implements OnInit {\n    @Input() activity;\n    @Input() item;\n\n    organization: any;\n    orgId: string;\n    activityDetails: any;\n    activityBudget: any;\n    panelOpenState: boolean;\n\n    gridConf: Array<any> = [\n        { title: 'Title', key: 'title' },\n        { title: 'Activity Date', key: 'activity_date' },\n        { title: 'Applied', key: 'total' },\n        { title: 'Rationalized', key: 'rationalized_total' },\n        { title: 'Approved Total', key: 'actual_total' },\n    ]\n\n    constructor(private _dataLayer: DataLayerService,\n        private _authConfig: Authorization) {}\n\n    getItemBudget() {\n        const params = { current_org_id:  this.orgId };\n        this._dataLayer.get('organization-budgets', this.item['budget'], params)\n        .subscribe(resp => {\n            this.activityBudget = resp;\n            // const listParams = { org_budget: this.item['budget'], current_org_id: this.orgId };\n            const listParams = { \n                current_org_id: this.orgId,\n                org_budget: this.item['budget'],\n            };\n            this._dataLayer.list('organization-budget-activities', listParams)\n            .subscribe(resp => {\n                this.activityBudget['activities'] = resp['results'];\n            }, err => console.log(err));\n        }, err => console.log(err));\n    }\n\n    getItemActivity() {\n        const params = { current_org_id: this.orgId };\n        this._dataLayer.get('organization-budget-activities', \n            this.item['activity'], params)\n            .subscribe(resp => {\n                this.activityDetails = resp;\n            }, err => console.log(err));\n    }\n\n    ngOnInit() {\n        this.organization = JSON.parse(this._authConfig.getOrganization());\n        this.orgId = get(this.organization, 'organization');\n        this.getItemActivity();\n        this.getItemBudget();\n    }\n}","<div class=\"w-100-p pt-3\">\n    <div class=\"px-5 pt-5 pb-3\">\n        <div class=\"card\">\n            <div class=\"card-header pt-2 pb-1 bg-white\">\n                <div class=\"pl-3 text-muted font-weight-bold\n                pb-2 d-flex align-items-center\">\n                    <div class=\"pt-2 pr-2\"><mat-icon>assessment</mat-icon>&nbsp;</div>\n                    <div>{{ context || 'Budget' }} Status</div>\n                </div>\n            </div>\n            <div class=\"card-body px-0 pb-1 pt-0\">\n                <div>\n                    <table class=\"table borderless font-size-13 mb-0\">\n                        <thead class=\"thead-light font-size-12\">\n                            <th class=\"border-0 pl-20\">\n                                Status\n                            </th>\n                            <th class=\"border-0 pl-20\">\n                                Updated On\n                            </th>\n                            <th class=\"border-0 pl-20\">\n                                Comment\n                            </th>\n                            <th *ngIf=\"hasAction\" style=\"width:1px;\"></th>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let state of list\">\n                                <td class=\"pl-20 align-middle\">\n                                    <span class=\"badge {{ state?.review_status | lowercase }}\">\n                                        {{ state?.review_status | removeUnderscore }}\n                                    </span>\n                                </td>\n                                <td class=\"pl-20 align-middle\">\n                                    <span>\n                                        {{ state?.created | date: 'medium' }}\n                                    </span>\n                                </td>\n                                <td class=\"pl-20 align-middle\">\n                                    {{ state?.comment }}\n                                    <mat-icon *ngIf=\"!state?.comment\">\n                                        remove\n                                    </mat-icon>\n                                </td>\n                                <td *ngIf=\"hasAction\" class=\"pr-3 align-middle\">\n                                    <span *ngIf=\"state?.file\">\n                                        <a mat-stroked-button download target=\"_blank\"\n                                        [attr.href]=\"state['file']['file']\">\n                                            <mat-icon>cloud_download</mat-icon>&nbsp;\n                                            Download\n                                        </a>\n                                    </span>\n                                    <span *ngIf=\"!state?.file\" class=\"d-flex ml-2\">\n                                        <span class=\"badge badge-secondary p-2\">\n                                            No Attachment\n                                        </span>\n                                    </span>\n                                </td>\n                            </tr>\n                            <tr *ngIf=\"!list?.length\">\n                                <td colspan=\"4\" class=\"pb-12 mb-0\">\n                                    <div class=\"w-100-p px-3\">\n                                        <div class=\"alert alert-primary mb-0 pb-2 pt-3\">\n                                            <div class=\"d-flex\">\n                                                <div class=\"pr-20\">\n                                                    <mat-icon>\n                                                        info_circle\n                                                    </mat-icon>\n                                                </div>\n                                                <div>\n                                                    There are currently no \n                                                    status update for this {{ context }}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\n\nimport { find, get, isUndefined } from 'lodash';\n\nimport { DataLayerService } from 'app/services/http/dataLayer.service';\nimport { Authorization } from 'app/services/authorization.service';\n\n@Component({\n    selector: 'audit-trail',\n    templateUrl: 'audit-trail.component.html',\n    styleUrls: ['audit-trail.component.scss'],\n    providers: [DataLayerService],\n})\n\nexport class AuditTrailComponent implements OnInit {\n    @Input() context: string;\n    @Input() item: any;\n\n    organization: any = {};\n    list: Array<any> = [];\n    storesMap: Array<any> = [\n        {\n            context: 'Budget',\n            store: 'organization-budget-reviews',\n            paramKey: 'org_budget',\n        },\n        {\n            context: 'Application',\n            store: 'application-reviews',\n            paramKey: 'application',\n        },\n    ];\n    hasAction: boolean = false;\n\n    constructor(private _dataLayer: DataLayerService,\n        private _authConfig: Authorization) {}\n\n    getAuditTrail(config) {\n        let params;\n        if (!isUndefined(config)) {\n            params = {\n                current_org_id: this.organization,\n                [config.paramKey]: this.item.id,\n            };\n            this._dataLayer.list(config.store, { ...params })\n            .subscribe(resp => {\n                this.list = resp['results'];\n                if (config.store === 'application-reviews') {\n                    this.hasAction = true;\n                    this.list.forEach(review => {\n                        const params = {\n                            current_org_id: this.organization,\n                            application_review: review['id'],\n                        };\n                        this._dataLayer.list('application-review-attachments', params)\n                            .subscribe((resp: any) => {\n                                const attachList = resp['results'] || [];\n                                if (attachList.length) {\n                                    review['file'] = attachList[0]['attachment_data'];\n                                }\n                            }, err => console.log(err));\n                    });\n                }\n            }, err => console.log(err));\n        }\n    }\n\n    ngOnInit() {\n        this.organization = get(\n            JSON.parse(this._authConfig.getOrganization()), \n            'organization', null\n        );\n        const config = find(this.storesMap, { context: this.context });\n        this.getAuditTrail(config);\n    }\n}","<div class=\"w-100-p pt-3\">\n    <div class=\"px-5 pt-5 pb-3\">\n        <div class=\"card\">\n            <div class=\"card-header pt-2 pb-1\">\n                <div class=\"pl-3 text-muted font-weight-bold\n                pb-2 d-flex align-items-center\">\n                    <div class=\"pt-2 pr-2\"><mat-icon>attach_file</mat-icon>&nbsp;</div>\n                    <div class=\"flex-fill\">Attachments</div>\n                    <div class=\"actions\">\n                        <input type=\"file\" [hidden]=\"true\" class=\"ng-hide\"\n                        id=\"input-file-id\" (change)=\"fileChange($event)\">\n                         <label for=\"input-file-id\" class=\"mat-button \n                         mat-stroked-button md-primary d-flex pl-3 font-size-12\">\n                             <mat-icon class=\"mt-2\">cloud_upload</mat-icon>&nbsp;\n                             &nbsp;UPLOAD FILE\n                         </label>\n                    </div>\n                </div>\n            </div>\n            <div class=\"card-body px-0 pb-1 pt-0\">\n                <div>\n                    <table class=\"table borderless font-size-13 mb-0\">\n                        <thead class=\"font-size-12\">\n                            <th class=\"border-0 pl-20\">\n                                Name\n                            </th>\n                            <th class=\"border-0 pl-20\">\n                                Uploaded At\n                            </th>\n                            <th class=\"border-0 pr-20\"\n                            style=\"width: 1px;\">\n                                Action\n                            </th>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let attachment of list\">\n                                <td class=\"pl-20\">\n                                    {{ attachment?.file.name || 'Unknown' }}\n                                </td>\n                                <td class=\"pl-20\">\n                                    {{ attachment?.file.created | date: 'medium' }}\n                                    <mat-icon *ngIf=\"!attachment?.file.created\">\n                                        remove\n                                    </mat-icon>\n                                </td>\n                                <td class=\"pr-20\" style=\"width: 1px;\">\n                                    <a mat-raised-button download \n                                    target=\"_blank\"\n                                    [attr.href]=\"attachment?.file.file\" >\n                                        <mat-icon>cloud_download</mat-icon>\n                                        &nbsp;Download\n                                    </a>\n                                </td>\n                            </tr>\n                            <tr *ngIf=\"!list?.length\">\n                                <td colspan=\"4\" class=\"pb-0 mb-0\">\n                                    <div class=\"w-100-p px-3 pb-12\">\n                                        <div class=\"alert alert-primary mb-0 pb-2 pt-3\">\n                                            <div class=\"d-flex\">\n                                                <div class=\"pr-20\">\n                                                    <mat-icon>\n                                                        info_circle\n                                                    </mat-icon>\n                                                </div>\n                                                <div>\n                                                    There are currently no \n                                                    attachments for this {{ context }}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\n\nimport { find, get, isUndefined } from 'lodash';\n\nimport { DataLayerService } from 'app/services/http/dataLayer.service';\nimport { Authorization } from 'app/services/authorization.service';\n\n@Component({\n    selector: 'header-attachments',\n    templateUrl: 'header-attachments.component.html',\n    styleUrls: ['header-attachments.component.scss'],\n})\n\nexport class HeaderAttachmentsComponent {\n    @Input() context: string;\n    @Input() item: any;\n\n    organization: any = {};\n    list: Array<any> = [];\n    storesMap: Array<any> = [\n        {\n            context: 'Budget',\n            store: 'organization-budget-attachments',\n            paramKey: 'org_budget',\n        }\n    ];\n\n    constructor(private _dataLayer: DataLayerService,\n        private _authConfig: Authorization) {}\n\n    fileChange(files) {\n        const file = files.target.files[0];\n        const fileFormData = {\n            file,\n            attachment_type: 'ORGANIZATION_BUDGET',\n            budget: this.item.id,\n        };\n        // attachment object\n        let attachmentObj = {\n            attachment: '',\n            organization: this.item['organization'],\n            org_budget: this.item['id'],\n        }\n        const formData = new FormData();\n        formData.append('file', fileFormData.file);\n        formData.append('attachment_type', fileFormData.attachment_type);\n\n        this._dataLayer.uploadFile('attachments', formData)\n        .subscribe(resp => {\n            // console.log(resp);\n            attachmentObj = { ...attachmentObj, attachment: resp['id'] };\n            this._dataLayer.create('organization-budget-attachments', attachmentObj)\n            .subscribe(resp => {\n                // console.log(resp);\n                const config = find(this.storesMap, { context: this.context });\n                this.getAuditTrail(config);\n            }, err => console.log(err))\n        }, err => console.log(err));\n    }\n\n    getAuditTrail(config) {\n        if (!isUndefined(config)) {\n            const params = { \n                current_org_id: this.organization,\n                [config.paramKey]: this.item.id,\n            };\n            this._dataLayer.list(config.store, { ...params })\n            .subscribe(resp => {\n                const attachArray = resp['results'];\n                attachArray.map(obj => {\n                    this._dataLayer.get('attachments', obj['attachment'],\n                    { current_org_id: this.organization })\n                    .subscribe(fileResp => {\n                        obj['file'] = fileResp;\n                        this.list.push(obj);\n                    }, err => {\n                        console.log(err);\n                    })\n    \n                });\n                console.log(this.list);\n            }, err => console.log(err));\n        }\n    }\n\n    ngOnInit() {\n        this.organization = get(\n            JSON.parse(this._authConfig.getOrganization()), \n            'organization', null\n        );\n        const config = find(this.storesMap, { context: this.context });\n        this.getAuditTrail(config);\n    }\n}","<div class=\"\">\n    <div class=\"d-flex algin-items-center mb-n3\">\n        <div class=\"flex-fill\">\n            <h4 mat-dialog-title class=\"pb-2 font\">\n                Upload Attachment\n            </h4>\n        </div>\n    </div>\n    <!-- Start of main content -->\n    <div class=\"text-muted fullwidth\"\n    mat-dialog-content>\n        <div>\n            <p>\n                Kindly complete the following form below\n            </p>\n            <div>\n                <form [formGroup]=\"uploadForm\" name=\"frm\"\n                (ngSubmit)=\"submitForm(uploadForm)\" class=\"w-100-p\">\n\n                <!-- Custom file upload input -->\n                <div class=\"w-100-p pt-1\">\n                    <div class=\"input-wrapper fullwidth\">\n                        <mat-form-field appearance=\"outline\"\n                        color=\"primary\" class=\"pb-0 mb-0 w-100-p\">\n                            <mat-label>File Description</mat-label>\n                            <textarea name=\"description\" id=\"\" matInput\n                            cols=\"30\" rows=\"2\" formControlName=\"description\"\n                            placeholder=\"Kindly enter a file descripition...\"></textarea>\n                        </mat-form-field>\n                    </div>\n                    <div *ngIf=\"f.description.invalid && \n                    (f.description.touched || f.description.dirty)\"  \n                    class=\"invalid-feedback\">\n                        <div *ngIf=\"f.description.errors.required\">\n                            Description is required\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"w-100-p\">\n                    <app-file-upload formControlName=\"attachment\"\n                    [progress]=\"progress\"></app-file-upload>\n                    <div class=\"invalid-feedback d-flex\">\n                        <div *ngIf=\"hasError('attachment', 'required')\">This field is required</div>\n                        <div *ngIf=\"hasError('attachment', 'requiredFileType')\">Only PNG 🤡</div>\n                    </div>\n                </div>\n\n                <!-- Action buttons -->\n                <div class=\"btn-container d-flex justify-content-end w-100-p\">\n                    <button mat-button mat-dialog-close\n                    type=\"button\" (click)=\"closeDialog()\">CLOSE</button>\n                    <button mat-button type=\"submit\"\n                    [class.spiner]=\"loading\" [disabled]=\"loading\">SUBMIT</button>\n                </div>\n                <!-- End of action buttons -->\n                </form>\n            </div>\n        </div>\n    </div>\n    <!-- End of main content -->\n</div>","import { HttpClient, HttpEvent, HttpEventType, HttpResponse } from '@angular/common/http';\n\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\n\nimport { pipe } from 'rxjs';\nimport { filter, map, tap } from 'rxjs/operators';\nimport { requiredFileType } from '@fuse/components/dynamic-form/common/upload-file-validators';\n\nimport { DataLayerService } from 'app/services/http/dataLayer.service';\nimport { environment as e } from 'environments/environment';\nimport { get } from 'lodash';\n\nexport function uploadProgress<T>(cb: (progress: number) => void) {\n    return tap((event: HttpEvent<T>) => {\n        if (event.type === HttpEventType.UploadProgress) {\n            cb(Math.round((100 * event.loaded)/ event.total));\n        }\n    })\n}\n\nexport function toResponseBody<T>() {\n    return pipe(\n        filter((event: HttpEvent<T>) => event.type === HttpEventType.Response),\n        map((res: HttpResponse<T>) => res.body)\n    );\n}\n\n@Component({\n    selector: 'attachment-dialog',\n    styleUrls: ['attachment-dialog.component.scss'],\n    templateUrl: 'attachment-dialog.component.html',\n    providers: [DataLayerService],\n})\n\nexport class AttachmentDialog implements OnInit {\n    loading: boolean;\n    submitted: boolean;\n    orgId: string;\n    context: string;\n    progress = 0;\n\n    sUrl = e.serverURL;\n\n    model: any;\n    success: false;\n    uploadForm: FormGroup;\n\n    constructor(\n        private http: HttpClient,\n        private _formBuilder: FormBuilder,\n        public _dialogRef: MatDialogRef<AttachmentDialog>,\n        private _dataLayer: DataLayerService,\n        @Inject(MAT_DIALOG_DATA) public data: any\n    ) {}\n\n    formInit() {\n        this.uploadForm = this._formBuilder.group({\n            description: [''],\n            attachment: ['', [Validators.required, requiredFileType('png')]],\n        });\n    }\n\n    get f() { return this.uploadForm.controls }\n\n    submitForm(frm) {\n        console.log(frm, this.uploadForm);\n        if (!frm.valid) {\n            markAllAsDirty(this.uploadForm);\n            return;\n        }\n        this.loading = true;\n        const { attachment, description } = this.uploadForm.value;\n        const fileObj = { file: attachment, attachment_type: 'APPLICATION_DOCUMENT' };\n        let attachmentObj = {\n            attachment: '',\n            description,\n            document_type: this.data.document_type,\n            organization: this.data.organization,\n        };\n        this.http.post(`${this.sUrl}/common/attachments/`, toFormData(fileObj), {\n            reportProgress: true,\n            observe: 'events',\n        }).pipe(\n            uploadProgress(progress => (this.progress = progress)),\n            toResponseBody()\n        ).subscribe(resp => {\n            this.progress = 0;\n            attachmentObj = { ...attachmentObj, attachment: resp['id'] };\n            this._dataLayer.create('organization-attachments', attachmentObj)\n                .subscribe(resp => {\n                    console.log(resp);\n                    this.uploadForm.reset();\n                    this.loading = false;\n                    this.closeDialog('regresh');\n                    const msg = 'File sucessfully uploaded';\n                    this._dataLayer.openDynamicSnackBar(msg, 'success');\n                }, err => {\n                    console.log(err);\n                    this.loading = false;\n                })\n        }, err => {\n            console.log(err);\n            this.loading = false;\n        });\n\n    }\n\n    closeDialog(resp?) {\n        this._dialogRef.close(resp);\n    }\n\n    hasError(field: string, error: string) {\n        const control =  this.uploadForm.get(field);\n        return control.dirty && control.hasError(error);\n    }\n\n    ngOnInit() {\n        console.log(this.data);\n        this.formInit();\n    }\n}\n\nexport function markAllAsDirty( form: FormGroup ) {\n    for ( const control of Object.keys(form.controls) ) {\n      form.controls[control].markAsDirty();\n    }\n  }\n  \nexport function toFormData<T>( formValue: T ) {\n    const formData = new FormData();\n  \n    for ( const key of Object.keys(formValue) ) {\n      const value = formValue[key];\n      formData.append(key, value);\n    }\n  \n    return formData;\n}","<div class=\"w-100-p\">\n    <div class=\"card\">\n        <div class=\"card-header bg-white pt-2 pb-1\">\n            <div class=\"title flex-fill font-weight-600 font-size-16 \n            pt-2 pl-3 d-flex align-items-center\">\n                <div>\n                    <mat-icon>attachment</mat-icon>&nbsp;\n                </div>\n                <div class=\"flex-fill pl-3 mt-n2\">Attachments</div>\n            </div>\n        </div>\n        <div class=\"card-body px-0 pb-1 pt-0\">\n            <div>\n                <table class=\"table borderless font-size-13 mb-0\">\n                    <thead class=\"thead-light font-size-12\">\n                        <th class=\"pl-24\">\n                            File\n                        </th>\n                        <th>\n                            Required\n                        </th>\n                        <th>\n                            Description\n                        </th>\n                        <th style=\"width:1px;\">\n                            Action\n                        </th>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let attachment of list\">\n                            <td class=\"pl-24 valign-middle\" valign=\"middle\">\n                                {{ attachment?.name }}\n                            </td>\n                            <td valign=\"middle\" class=\"valign-middle\">\n                                <span class=\"badge py-2 px-3 font-size-12 {{ \n                                    attachment?.required ? 'badge-danger' : 'badge-info'\n                                }}\" *ngIf=\"!attachment?.attachment_data\">\n                                    {{ attachment?.required ? 'Required' : 'Not Required' }}\n                                </span>\n                                <span class=\"badge badge-success \n                                py-2 px-3 font-size-12\" \n                                *ngIf=\"attachment?.attachment_data\">\n                                    Uploaded\n                                </span>\n                            </td>\n                            <td class=\"valign-middle\" valign=\"middle\">\n                                {{ attachment?.description }}\n                            </td>\n                            <td class=\"pr-24\">\n                                <!-- <input [hidden]=\"true\" class=\"ng-hide\" id=\"input-file-id\"\n                                (change)=\"fileChange($event, attachment)\" type=\"file\" />\n                                <label for=\"input-file-id\" class=\"mat-button \n                                mat-stroked-button md-primary d-flex\"\n                                *ngIf=\"!attachment?.attachment_data\">\n                                    <mat-icon class=\"mt-2\">cloud_upload</mat-icon>&nbsp;\n                                    Upload\n                                </label> -->\n                                <button mat-stroked-button \n                                *ngIf=\"!attachment?.attachment_data\"\n                                (click)=\"selectDocType(attachment)\">\n                                    <mat-icon class=\"mt-2\">cloud_upload</mat-icon>&nbsp;\n                                    Upload\n                                </button>\n                                <a mat-stroked-button download target=\"_blank\"\n                                *ngIf=\"attachment?.attachment_data\"\n                                [attr.href]=\"attachment?.attachment_data['file']\">\n                                    <mat-icon>cloud_download</mat-icon>&nbsp;\n                                    Download\n                                </a>\n                            </td>\n                        </tr>\n                        <tr *ngIf=\"!list?.length && loading\">\n                            <td colspan=\"3\" class=\"pb-0 mb-0 pl-24\">\n                                <div class=\"w-100-p px-3 d-flex justify-content-center py-16\">\n                                    <mat-spinner diameter=\"45\"></mat-spinner>\n                                </div>\n                            </td>\n                        </tr>\n                        <tr *ngIf=\"!list?.length && !loading\">\n                            <td colspan=\"3\" class=\"pb-0 mb-0 pl-24\">\n                                <div class=\"w-100-p px-3\">\n                                    <div class=\"alert alert-primary mb-0 pb-2 pt-3\">\n                                        <div class=\"d-flex align-items-center\">\n                                            <div class=\"pr-20\">\n                                                <mat-icon>\n                                                    info_circle\n                                                </mat-icon>\n                                            </div>\n                                            <div class=\"flex-fill\">\n                                                There is currently no documents setup for this organization.\n                                                Kindly contact the administrator\n                                            </div>\n                                            <div class=\"pr-8\">\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { DataLayerService } from 'app/services/http/dataLayer.service';\nimport { Authorization }  from 'app/services/authorization.service';\nimport { find, get, isUndefined } from 'lodash';\nimport { AttachmentDialog } from './attachment-dialog/attachment-dialog.component';\n\n@Component({\n    selector: 'attachments-listing',\n    templateUrl: 'attachments-listing.component.html',\n})\n\nexport class AttachmentsListing implements OnInit {\n    @Input() tab: any;\n    @Input() item: any;\n\n    loading:  boolean = true;\n    list: Array<any> = [];\n    linkedOrgId: string;\n    linkedOrganization: any;\n    organization: any;\n\n    constructor(private _dataLayer: DataLayerService,\n        private _authConfig: Authorization,\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute) {}\n\n    fileChange(files, docType) {\n        const file = files.target.files[0];\n        const fileFormData = {\n            file,\n            attachment_type: 'APPLICATION_DOCUMENT',\n            document_type: docType.id,\n            organization: this.organization,\n        };\n        const formData = new FormData();\n        formData.append('file', fileFormData.file);\n        formData.append('attachment_type', fileFormData.attachment_type);\n\n        let attachmentObj = {\n            attachment: '',\n            organization: this.organization,\n            // application: this.item['id'],\n            document_type: fileFormData.document_type\n        };\n        this._dataLayer.uploadFile('attachments', formData)\n        .subscribe(resp => {\n            attachmentObj = { ...attachmentObj, attachment: resp['id'] };\n            const params = { key: 'current_org_id', value: this.organization };\n            this._dataLayer.create('organization-attachments', \n                attachmentObj, undefined, params)\n                .subscribe(resp => {\n                    this.getApplicationAttachments();\n                }, err => console.log(err));\n        }, err => console.log(err));\n    }\n\n    selectDocType(docType) {\n        const dialogRef = this._dialog.open(AttachmentDialog, {\n            data: {\n                organization: this.organization,\n                document_type: docType,\n            }\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            console.log(result);\n            if (result === 'refresh') {\n                this.getDocumentTypes();\n            }\n        })\n    }\n\n    getApplicationAttachments() {\n        const params = { \n            organization: this.organization,\n            current_org_id: this.organization,\n        };\n        this._dataLayer.list('organization-attachments', params)\n        .subscribe(resp => {\n            const appAttachments = resp['results'];\n            this.list = this.list.map(docTypeObj => {\n                const linkedFile = find(appAttachments, { \n                    document_type: docTypeObj['id']\n                });\n                if (!isUndefined(linkedFile)) {\n                    docTypeObj['fileObj'] = linkedFile;\n                    docTypeObj['inkedAttachment'] = linkedFile['id'];\n                    docTypeObj['attachment_data'] = linkedFile['attachment_data'];\n                    return docTypeObj;\n                } else {\n                    return docTypeObj;\n                }\n            })\n        }, err => console.log(err));\n    }\n\n    getDocumentTypes() {\n        const params = { \n            org_type: this.linkedOrganization.org_type,\n            current_org_id: this.organization,\n        };\n        console.log(params, this.organization);\n        this.loading = true;\n        this._dataLayer.list('document-types', { ...params })\n        .subscribe(resp => {\n            this.loading = false;\n            this.list = resp['results'];\n            this.getApplicationAttachments();\n        }, err => {this.loading = false; console.log(err) });\n    }\n\n    getOrgnization(orgId) {\n        this._dataLayer.get('organizations', orgId, \n        { current_org_id: this.organization })\n        .subscribe(resp => {\n            this.linkedOrganization = resp;\n            this.getDocumentTypes();\n        }, err => console.log(err));\n    }\n\n    getParams() {\n        this._route.queryParams.subscribe(params => {\n            this.linkedOrgId = params['organization'];\n            this.getOrgnization(params['organization']);\n        })\n    }\n\n    ngOnInit() {\n        this.organization = get(\n            JSON.parse(this._authConfig.getOrganization()), \n            'organization', null\n        );\n        this.getParams();\n    }\n}","<div class=\"\">\n    <div class=\"d-flex align-items-center mb-n3\">\n        <div class=\"flex-fill\">\n            <h4 mat-dialog-title class=\"pb-2 font\">\n                {{ configs?.title }}\n            </h4>\n        </div>\n    </div>\n    <div mat-dialog-content class=\"text-muted fullwidth\"\n    *ngIf=\"configs?.type === 'form'\">\n        <dynamic-form \n        btnClass=\"tiny mr-3\" [submitted]=\"submitted\"\n        [baseCancel]=\"true\" btnStatus=\"primary\"\n        store=\"organization-budget-activities\" btnText=\"SAVE\"\n        (cancelFxn)=\"closeDialog()\" [model]=\"model\"\n        (submitModel)=\"receiveModel($event)\">\n        </dynamic-form>\n    </div>\n    <div mat-dialog-content class=\"text-muted fullwidth\"\n    *ngIf=\"configs?.type === 'dialog'\">\n        <div>{{ configs?.description }}</div>\n        <div *ngIf=\"context === 'rationalize'\">\n            <div>\n                <div>\n                    <div>\n                        <p>\n                            Kindly confirm that you would like to rationalize {{ item?.title }}\n                        </p>\n                        <div class=\"mb-3\">\n                            <div class=\"d-flex\">\n                                <div class=\"text-muted pr-3\">\n                                    Applied Total:\n                                </div>\n                                <div class=\"font-weight-600\">\n                                    {{ item?.total | currency: 'Kshs '}}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <p>\n                        Ensure that you have rationalized each activity line item, \n                        otherwise the applied item amount will\n                        be used as the rationalized amount. If you would \n                        like to proceed click the <b>SUBMIT</b> button below.\n                    </p>\n                </div>\n            </div>\n        </div>\n        <div *ngIf=\"context === 'approve'\">\n            <div>\n                <div>\n                    <p>\n                        Kindly confirm that you would like to approve {{ item?.title }}\n                    </p>\n                    <div class=\"mb-3\">\n                        <div class=\"d-flex\">\n                            <div class=\"text-muted pr-3\">\n                                Applied Total:\n                            </div>\n                            <div class=\"font-weight-600\">\n                                {{ item?.total | currency: 'Kshs '}}\n                            </div>\n                        </div>\n                        <div class=\"d-flex\">\n                            <div class=\"text-muted pr-16\">\n                                Rationalized:\n                            </div>\n                            <div class=\"font-weight-600\">\n                                {{ item?.rationalized_total | currency: 'Kshs '}}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <p>\n                    Ensure you have approved each activity line item\n                    otherwise the rationalized amount will be used as the approved amount. \n                    If you would stil like to proceed click the <b>SUBMIT</b> button below:\n                </p>\n            </div>\n        </div>\n    </div>\n    <div mat-dialog-actions class=\"pt-5 pb-20 d-flex justify-content-end\"\n    *ngIf=\"configs?.type === 'dialog'\">\n        <button mat-button mat-dialog-close\n        (click)=\"closeDialog()\">CLOSE</button>\n        <button mat-button [class.spinner]=\"loading\"\n        [disabled]=\"loading\"\n        (click)=\"transitionActions()\">\n            {{ configs?.action || 'SUBMIT' }}\n        </button>\n    </div>\n    <!-- Start of comment type section -->\n    <div mat-dialog-actions \n    *ngIf=\"configs?.type === 'comment'\">\n        <div class=\"context === 'reject'\">\n            <p>\n                Kindly confirm that you would like to reject the following\n                activity:\n            </p>\n            <div class=\"mb-3\">\n                <div class=\"d-flex\">\n                    <div class=\"text-muted pr-3\">\n                        Applied Amount:\n                    </div>\n                    <div class=\"font-weight-600\">\n                        {{ item?.total | currency: 'Kshs '}}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <form [formGroup]=\"commentForm\" name=\"frm\"\n        (ngSubmit)=\"submitForm(commentForm)\" class=\"w-100-p\">\n            <div class=\"w-100-p pt-1\">\n                <div class=\"input-wrapper fullwidth\">\n                    <mat-form-field appearance=\"outline\"\n                    color=\"primary\" class=\"pb-0 mb-0 w-100-p\">\n                        <mat-label>Enter comment*</mat-label>\n                        <textarea name=\"comment\" id=\"\" matInput\n                        cols=\"30\" rows=\"6\" formControlName=\"comment\"\n                        placeholder=\"Kindly enter a comment...\"></textarea>\n                    </mat-form-field>\n                </div>\n                <div *ngIf=\"f.comment.invalid && \n                (f.comment.touched || f.comment.dirty)\"  \n                class=\"invalid-feedback\">\n                    <div *ngIf=\"f.comment.errors.required\">\n                        Comment is required\n                    </div>\n                </div>\n            </div>\n            <div class=\"btn-container d-flex justify-content-end w-100-p\">\n                <button mat-button mat-dialog-close\n                type=\"button\" (click)=\"closeDialog()\">CLOSE</button>\n                <button mat-button type=\"submit\"\n                [class.spinner]=\"loading\" [disabled]=\"loading\">\n                    SUBMIT\n                </button>\n            </div>\n        </form>\n    </div>\n    <div class=\"py-2\"></div>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nimport { DataLayerService } from 'app/services/http/dataLayer.service';\nimport { get } from 'lodash';\n\n@Component({\n    selector: 'nested-crud-dialog',\n    templateUrl: 'nested-inline-dialog.component.html',\n    providers: [DataLayerService],\n})\n\nexport class NestedInlineDialog implements OnInit {\n    loading: boolean;\n    submitted: boolean;\n    orgId: string;\n    context: string;\n\n    configs: any;\n    model:any;\n    organization: any;\n    item: any;\n    // form configs\n    comment: string;\n    commentForm: FormGroup;\n    adjustedAmountForm: FormGroup;\n\n    constructor(\n        private _formBuilder: FormBuilder,\n        public _dialogRef: MatDialogRef<NestedInlineDialog>,\n        private _dataLayer: DataLayerService,\n        @Inject(MAT_DIALOG_DATA) public data: any) {}\n\n    formInit() {\n        this.commentForm = this._formBuilder.group({\n            comment: ['', Validators.required],\n        });\n        this.adjustedAmountForm = this._formBuilder.group({\n            adjustedAmount: ['', Validators.required],\n        });\n        // TODO: Add conditional logic at line level to prefill\n        // rationalized/actual amounts\n    }\n\n    get f() { return this.commentForm.controls };\n    get aF() { return this.adjustedAmountForm.controls };\n\n    submitTransition(transObj, feedback) {\n        const store = this.data.store;\n        this.loading = true;\n        const paramObj = { key: 'current_org_id', value: this.organization };\n        this._dataLayer.update(store, this.item.id, transObj, paramObj)\n            .subscribe(resp => {\n                console.log(resp);\n                this.loading = false;\n                this.closeDialog('refresh');\n                const msg = feedback.succMsg;\n                this._dataLayer.openDynamicSnackBar(msg, 'success');\n            }, err => {\n                console.log(err);\n                this.loading = false;\n                const errMsg = feedback.errMsg;\n                this._dataLayer.openDynamicSnackBar(errMsg, 'error');\n            })\n    }\n\n    transitionActions(frmObj?) {\n        const context = this.context;\n        let succStr = (status) => `Item ${status} successfully`;\n        let errStr = (status) => `An error occurred during ${status}ing`;\n        switch (context) {\n            case 'rationalize':\n                const ratObj = { status: 'RATIONALIZED' };\n                const ratFeedback = {\n                    succMsg: succStr('rationalized'),\n                    errMsg: errStr('rationaliz'),\n                };\n                this.submitTransition(ratObj, ratFeedback);\n                break;\n            case 'approve':\n                const appObj = { status:'SASDEF_APPROVED' };\n                const appFeedback = {\n                    succMsg: succStr('approved'),\n                    errMsg: errStr('approv'),\n                };\n                this.submitTransition(appObj, appFeedback);\n                break;\n            case 'reject':\n                const rejFeedback = {\n                    succMsg: succStr('rejected'),\n                    errMsg: errStr('reject'),\n                };\n                const rejObj = { ...frmObj };\n                this.submitTransition(rejObj, rejFeedback);\n                break;\n            default:\n                throw new Error('No relevant transition action given');\n                break;\n        }\n    }\n\n    submitForm(frm) {\n        console.log(frm);\n        if (frm.valid) {\n            if (this.context === 'rejected') {\n                const comment = frm.value['comment'];\n                const frmObj = { comment, status: 'REJECTED' };\n                this.transitionActions(frmObj);\n            }\n        }\n    }\n\n    closeDialog(resp?) {\n        this._dialogRef.close(resp);\n    }\n\n    getUserOrganization() {\n        const organization = JSON.parse(localStorage.getItem('organization'));\n        this.organization = get(organization, 'organization', null);\n    }\n\n    receiveModel(model) {\n        console.log(model);\n    }\n\n    dialogActions: any = {\n        approveApplication: () => {\n            this.getUserOrganization();\n            this.loading = true;\n            const postObj = {\n                review_status: 'APPROVE',\n                organization: this.organization,\n                activity: this.data.activity.id,\n            };\n        }\n    }\n\n    setConfigs() {\n        const context = this.data.context;\n        this.context =  this.data.context;\n        this.formInit();\n        this.getUserOrganization();\n        switch (context) {\n            case 'edit':\n                return {\n                    title: 'Update Activity',\n                    type: 'form',\n                };\n            case 'approve':\n                return {\n                    title: 'Approve Activity',\n                    type: 'dialog',\n                };\n            case 'rationalize':\n                return {\n                    title: 'Rationalize Activity',\n                    type: 'dialog',\n                    validationKey: 'rationalized_total',\n                }\n            case 'reject':\n                return {\n                    title: 'Reject Activity',\n                    type: 'comment',\n                };\n            default:\n                throw new Error('Provide a valid option');\n        }\n    }\n\n    ngOnInit() {\n        this.model = this.data.activity;\n        this.item = this.data.activity;\n        this.configs = this.setConfigs();\n    }\n}","<div class=\"card main-wrapper\">\n    <div class=\"card-header pt-3 bg-white\">\n        <div class=\"pl-3 text-muted font-weight-bold pb-2 d-flex\n        align-items-center\">\n            <div class=\"pt-2 pr-2\">\n                <mat-icon>account_balance_wallet</mat-icon>\n            </div>\n            <div>\n                Allowances\n            </div>\n        </div>\n    </div>\n    <div class=\"card-body px-0 pb-0 pt-0\">\n        <div>\n            <!-- Start of content -->\n            <div class=\"w-100-p d-flex flex-row  px-0\">\n                <div class=\"h-100-p overflow-auto innerScroll\n                page-layout col-lg-3 main-list\">\n                    <div class=\"ps\">\n                        <div class=\"mail-list overflow-auto\"\n                        fuseperfectscrollbar>\n                            <div class=\"list-item\"\n                            *ngFor=\"let allowance of list;let i = index;\"\n                            [class.active]=\"allowance.active\"\n                            (click)=\"setSelected(allowance.id)\">\n                                <div class=\"pb-0\">\n                                    {{allowance?.allowance_data.name}}\n                                </div>\n                                <div class=\"d-flex flex-column align-items-start\">\n                                    <div class=\"d-flex flex-row align-items-center fullwidth ml-n1\">\n                                        <div class=\"pt-2\"><mat-icon class=\"font-size-18\n                                        text-muted\">attach_money</mat-icon>\n                                        </div>\n                                        <div class=\"font-size-14 text-muted pl-1\">\n                                            {{allowance?.actual_total | currency: 'Kshs '}}\n                                        </div>\n                                    </div>\n                                    <div class=\"d-flex flex-row align-items-center fullwidth pt-0 mt-n2\">\n                                        <div class=\"pt-2\"><mat-icon class=\"font-size-16\n                                            text-muted\">people</mat-icon>\n                                        </div>\n                                        <div class=\"font-size-14 text-muted\">\n                                            {{allowance?.head_count }} \n                                            <span class=\"font-weight-bold\">\n                                                &nbsp;For&nbsp;\n                                            </span>\n                                            {{allowance?.days | number: '1.0'}} day(s)\n                                        </div>\n                                    </div>\n                                </div>\n                                <!-- <div>\n                                    <span class=\"badge {{activity?.status | lowercase }}\n                                    font-size-10 pt-2 font-size-10 px-8\">\n                                        {{activity?.status | removeUnderscore}}\n                                    </span>\n                                </div> -->\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!-- Start of nested list content -->\n                <div class=\"col-lg-9 overflow-auto innerScroll px-0 mt-1\n                bg-light pb-12\"\n                *ngIf=\"selectedAllowance && !loading\">\n                    <div class=\"full-width bg-light px-16 pt-12 pb-2\">\n                        <mat-card class=\"mat-elevation-z1 p-0 mb-2 w-100-p\">\n                            <div class=\"card-header bg-white font-size-16\">\n                                <div class=\"d-flex flex-row\">\n                                    <div class=\"flex-fill pb-1 pl-8 title pt-2\">\n                                        Select Members\n                                    </div>\n                                    <div class=\"pt-1 pr-3\">\n                                        <!-- TODO: Bring back once working correctly -->\n                                        <!-- <button mat-mini-fab color=\"default\"\n                                        class=\"mat-elevation-z0 border bg-light h-32 w-32\"\n                                        aria-label=\"Activity actions\"\n                                        [matMenuTriggerFor]=\"menu\">\n                                            <mat-icon class=\"mt-n2 fonnt-size-20\">more_vert</mat-icon>\n                                        </button> -->\n                                        <mat-menu #menu=\"matMenu\">\n                                            <button mat-menu-item\n                                            *ngFor=\"let btnAct of actActions\"\n                                            (click)=\"openDialog(btnAct.context)\">\n                                                <mat-icon [class]=\"btnAct?.iconClass\">\n                                                    {{btnAct?.icon}}\n                                                </mat-icon>\n                                                {{btnAct?.text}}\n                                            </button>\n                                        </mat-menu>\n                                    </div>\n                                </div>\n                            </div> \n                            <mat-card-body class=\"p-0\">\n                                <div class=\"w-100-p mt-0 px-0\">\n                                    <dynamic-table title=\"Listing\"\n                                        [tabbedItem]=\"item\" [largeForms]=\"true\"\n                                        class=\"w-100-p\" [addOrg]=\"true\" [customHeader]=\"true\"\n                                        [modelKey]=\"configs?.modelKey\" [cmptParams]=\"cmptParams\"\n                                        [headers]=\"configs?.headers\" [no-card]=\"true\"\n                                        [has-action]=\"true\" [store]=\"configs?.getStore\"\n                                        [topActions]=\"configs?.topActions\" [hasSearch]=\"true\"\n                                        (postCRUDFxn)=\"refreshSelected()\"\n                                        [dropDownActions]=\"configs?.actions\" [rows]=\"configs.rows\">\n                                    </dynamic-table>\n                                </div>\n                            </mat-card-body>\n                        </mat-card>\n                    </div>\n                </div>\n            </div>\n            <!-- End of content -->\n        </div>\n    </div>\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { MatDialog } from '@angular/material/dialog';\nimport { DataLayerService } from 'app/services/http/dataLayer.service';\nimport { find, findIndex, get, indexOf, isUndefined } from 'lodash';\nimport { NestedInlineDialog } from './nested-inline-dialog/nested-inline-dialog.component';\n\n@Component({\n    selector: 'nested-inline-tabbed-list',\n    templateUrl: 'nested-inline-list.component.html',\n    styleUrls: [\n'../../../stepper-wrapper/components/nested-inline-list/nested-inline-list.component.scss'],\n    providers: [DataLayerService],\n})\n\nexport class NestedTabbedInlineList implements OnInit {\n    @Input() tab: any;\n    @Input() current: any;\n\n    @Output() onNavigate = new EventEmitter();\n\n    multistepConfig: any;\n    list: Array<any> = [];\n    nestedList: Array<any> = [];\n    submitted: any;\n    item: any;\n    loading:boolean = true;\n    isLast: boolean;\n    configs: any;\n    orgId: any;\n    itemId: any;\n    selectedAllowance: any;\n    cmptParams: any = { };\n    actActions: Array<any> = [];\n\n    constructor(private _route: ActivatedRoute,\n        private _dataLayer: DataLayerService,\n        private _dialog: MatDialog) {}\n\n    changeStep(context) {\n        this.onNavigate.emit(context);\n    }\n\n    loadActions() {\n        const defaultActions = [\n            {\n                text: 'Edit', icon: 'edit',\n                iconClass: 'text-primary',\n                context: 'edit', status: ['DRAFT'],\n                bpType: ['SPORTS_ORGANIZATION', 'GOVERNMENT_AGENCY'],\n            },\n            {\n                text: 'Rationalize', icon: 'compare_arrows',\n                iconClass: 'text-success',\n                context: 'rationalize', status: ['DRAFT'],\n                bpType: ['MINISTRY', 'SASDEF'],\n            },\n            {\n                text: 'Approve', icon: 'check',\n                iconClass: 'text-success',\n                context: 'approve', status: ['RATIONALIZED'],\n                bpType: ['SASDEF'],\n            },\n            {\n                text: 'Reject', icon: 'close',\n                iconClass: 'text-danger',\n                context: 'reject', status: ['DRAFT', 'RATIONALIZED'],\n                bpType: ['MINISTRY', 'SASDEF'],\n            }\n        ];\n        const orgType = get(\n            JSON.parse(localStorage.getItem('organization')), 'org_type', null);\n        this.actActions = defaultActions.filter(act => {\n            const orgInd = indexOf(act.bpType, orgType);\n            const statusInd = indexOf(act.status, this.item.status);\n            if (orgInd >= 0 && statusInd >= 0) return act;\n        });\n    }\n\n    openDialog(context?) {\n        const dialogRef = this._dialog.open(NestedInlineDialog, {\n            data: {\n                context,\n                store: 'application-allowances',\n                activity: this.selectedAllowance,\n            },\n            width: '50%',\n        });\n        dialogRef.afterClosed().subscribe(resp => {\n            console.log(resp);\n            if (resp === 'refresh') {\n                this.loading = false;\n                this.refreshSelected();\n            }\n        })\n    }\n\n    refreshSelected() {\n        const opts = { current_org_id: this.orgId };\n        this._dataLayer.get('application-allowances', \n            this.selectedAllowance.id, opts)\n            .subscribe(resp => {\n                this.selectedAllowance = { ...resp, active: true };\n                this.list = this.list.map(all => {\n                    if (all.id === resp['id']) {\n                        all = { ...resp, active: true };\n                    }\n                    return all;\n                })\n            }, err => {\n                this.loading = false;\n                console.log(err);\n            })\n    }\n\n    setSelected(allowanceId?) {\n        if (this.list.length) {\n            let selected = find(this.list, { active: true });\n            if (isUndefined(selected) && isUndefined(allowanceId)) {\n                this.list[0].active = true;\n                this.selectedAllowance = undefined;\n                this.presetAllowance(0);\n            } else {\n                if (!isUndefined(allowanceId)) {\n                    const currInd = indexOf(this.list, find(this.list, { id: allowanceId }));\n                    console.log(currInd);\n                    this.selectedAllowance = undefined;\n                    this.presetAllowance(currInd);\n                } else {\n                    this.selectedAllowance = indexOf(this.list, selected);\n                }\n            }\n        }\n    }\n\n    presetAllowance(currInd: number) {\n        this.loading = true;\n        const oldInd = indexOf(this.list, find(this.list, { active: true }));\n        this.selectedAllowance = undefined;\n        if (oldInd >= 0) {\n            this.list[oldInd].active = false;\n        }\n        this.list[currInd].active = true;\n        this.getNestedList(this.list[currInd].id);\n        const opts = { current_org_id: this.orgId };\n        this._dataLayer.get('organization-budget-activity-allowances', \n            this.list[currInd].id, opts)\n            .subscribe(resp => {\n                this.selectedAllowance = this.list[currInd] || resp;\n                this.cmptParams = {\n                    ...this.cmptParams, \n                    budget_activity_allowance: this.list[currInd].id\n                }\n                this.loading = false;\n            }, err => { console.log(err); this.loading = false; });\n    }\n\n    getNestedList(id: any) {\n        const params = {\n            current_org_id: this.orgId,\n            budget_activity_allowance: id,\n        };\n        this._dataLayer.list('application-allowances', params)\n            .subscribe(resp => {\n                this.nestedList = resp['results'];\n            }, err => console.log(err));\n    }\n\n    getMainList() {\n        const params = {\n            current_org_id: this.orgId,\n            budget_activity: this.item.activity,\n        };\n        this._dataLayer.list('organization-budget-activity-allowances', params)\n            .subscribe(resp => {\n                this.list = resp['results'];\n                this.setSelected();\n            }, err => console.log(err));\n    }\n\n    getItem() {\n        const getParams = { 'current_org_id': this.orgId };\n        this._dataLayer.get('applications', this.itemId, getParams)\n            .subscribe(resp => {\n                console.log(resp);\n                this.item = resp;\n                this.getMainList();\n            }, err => console.log(err));\n    }\n\n    getItemId() {\n        this._route.queryParams.subscribe(params => {\n            const current = parseInt(params.current, 10);\n            this.itemId = parseInt(params['id'], 10);\n            this.configs = this.tab;\n            console.log(this.configs);\n            this.getItem();\n        })\n    }\n\n    ngOnInit() {\n        this.orgId = get(JSON.parse(\n            localStorage.getItem('organization')), 'organization', null);\n        console.log('Called', this.orgId)\n        this.getItemId();\n    }\n}","<div id=\"no-print\">\n    <!-- Start of header -->\n    <div class=\"main-cont header\">\n        <div class=\"d-flex w-100-p align-items-center pl-3\">\n            <div class=\"pt-12 pr-3\"\n            *ngIf=\"listRoute\">\n                <span mat-icon-button class=\"back-btn\" aria-label=\"Back to list\"\n                (click)=\"goBack()\">\n                    <mat-icon class=\"font-size-28\">\n                        arrow_back\n                    </mat-icon>\n            </span>\n            </div>\n            <div class=\"text-light px-3 pt-3\">\n                <mat-icon class=\"font-size-48\">\n                    {{ headerConfig['icon'] || 'business' }}\n                </mat-icon>\n            </div>\n            <div class=\"flex-fill title-cont pl-5\">\n                <div class=\"title-text pt-3 text-light font-size-20\">\n                    {{ headerConfig['headerLabel']}} \n                    {{ headerConfig['headerValue'] \n                        ? item[headerConfig['headerValue']] \n                        : item?.name\n                    }}\n                </div>\n                <div class=\"desc-text text-light font-size-14 pt-2\">\n                    {{ headerConfig['subTitleLabel'] }}\n                    \n                    {{ headerConfig['subTitleValue'] \n                        ? getNested(headerConfig['subTitleValue'])\n                        : item?.org_type_code\n                        | removeUnderscore\n                    }}\n                </div>\n            </div>\n            <div class=\"actions pr-4\" \n            *ngIf=\"headerConfig?.actions\">\n                <div class=\"pr-3\" *ngIf=\"item?.id\">\n                    <span *ngFor=\"let act of headerConfig?.actions\">\n                        <button mat-raised-button class=\"pl-3 mr-3\"\n                        [color]=\"act.color\" *ngIf=\"statusChecker(act) && authChecker(act)\"\n                        (click)=\"headerActions[act.action](act?.configs, act?.btnText)\">\n                            <mat-icon *ngIf=\"act?.icon\">{{act?.icon}}</mat-icon>\n                            &nbsp;{{act?.btnText}}\n                        </button>\n                    </span>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- End of header -->\n    <div class=\"px-5\">\n        <div class=\"px-5\">\n            <mat-card class=\"w-100-p raised mb-5 p-0\">\n                <mat-card-content class=\"p-0\">\n                    <ng-container *ngIf=\"(asyncTabs | async) === null\">\n                        Loading tabs...\n                      </ng-container>\n                      \n                      <mat-tab-group #mainTabs\n                      (selectedTabChange)=\"tabSelectChange($event)\">\n                        <mat-tab *ngFor=\"let tab of asyncTabs | async; let i = index;\">\n                          <ng-template mat-tab-label>{{tab.label}}</ng-template>\n                          <div *ngIf=\"tab.content === 'form' && i === currIndex\"\n                          class=\"mb-5\">\n                              <div class=\"d-flex px-5 pt-5 pb-3\">\n                                <div class=\"flex-fill pl-3 text-muted font-weight-bold\n                                font-size-12\" [class.pt-3]=\"tab.context === 'Application'\">\n                                    {{ tab['context'] || 'ORAGNIZATION' | uppercase }} DETAILS\n                                </div>\n                                <div class=\"pb-16 pr-12\"\n                                *ngIf=\"tab?.context === 'Application' && orgType === 'SASDEF'\">\n                                    <button mat-stroked-button\n                                    class=\"pl-3\"\n                                    (click)=\"downloadSummary()\">\n                                        <mat-icon class=\"font-size-22 mt-1\">\n                                            get_app\n                                        </mat-icon>\n                                        &nbsp;<span class=\"font-size-12\">SUMMARY</span>\n                                    </button>\n                                </div>\n                              </div>\n                              <div class=\"d-flex w-100-p px-5 pt-3\">\n                                  <div *ngFor=\"let conf of tab.detailsConf\"\n                                  class=\"col-lg-3 col-12\">\n                                      <div class=\"d-flex w-100-p align-items-center\">\n                                          <div class=\"pr-3\">\n                                              <mat-icon class=\"font-size-32 text-success\">\n                                                  {{conf.icon}}\n                                              </mat-icon>\n                                          </div>\n                                          <div class=\"pl-3\">\n                                              <div class=\"text-muted font-size-13\">\n                                                  {{ conf.label}}\n                                              </div>\n                                              <div>\n                                                  <div *ngIf=\"conf.type\">\n                                                    <div *ngIf=\"conf.type === 'currency'\">\n                                                        {{ item[conf.key] | currency: 'Kshs ' }}\n                                                    </div>\n                                                    <div *ngIf=\"conf.type === 'date'\">\n                                                        {{ item[conf.key] | date: 'dd-MM-yyyy' }}\n                                                    </div>\n                                                    <div *ngIf=\"conf.type === 'status' && item?.id\">\n                                                        <span class=\"badge {{item[conf.key] | lowercase }} \n                                                        px-2 pb-1 pt-2 font-size-10\">\n                                                            {{ item[conf.key] | removeUnderscore }}\n                                                        </span>                            \n                                                    </div>\n                                                    <div *ngIf=\"conf.type === 'nested' && item['organization']\">\n                                                        <nested-string [type]=\"conf.fieldType\"\n                                                        [config]=\"conf\" [item]=\"item\">\n                                                        </nested-string>\n                                                    </div>\n                                                  </div>\n                                                  <div *ngIf=\"!conf.type\" class=\"font-size-13\">\n                                                      {{ removeUnderscore(item[conf.key]) }}\n                                                  </div>\n                                                  <span *ngIf=\"!item[conf.key]\">\n                                                      <mat-icon>\n                                                          remove\n                                                      </mat-icon>\n                                                  </span>\n                                              </div>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                              <div class=\"px-3\" *ngIf=\"item?.id && tab?.extraDetails\">\n                                <ng-container *ngTemplateOutlet=\"extraDetails\"></ng-container>\n                              </div>\n                              <div class=\"px-3\" *ngIf=\"item?.id && tab?.totalsSummary\">\n                                <ng-container *ngTemplateOutlet=\"totalsSummary\"></ng-container>\n                              </div>\n                              <div class=\"px-3 pt-3\" *ngIf=\"tab?.orgSummary\">\n                                <organization-summary [organization]=\"item['organization_data']\"></organization-summary>\n                              </div>\n                              <div *ngIf=\"tab?.applicationME && item?.id\">\n                                <application-me [item]=\"item\"></application-me>\n                              </div>\n                              <div class=\"px-40 pt-5 pb-0\"\n                              *ngIf=\"tab?.bankConfs && item?.id\">\n                                <tabbed-inline-list [tab]=\"tab\" [item]=\"item\"\n                                [parentKey]=\"tab?.parentKey\"></tabbed-inline-list>\n                              </div>\n                              <div class=\"px-3 pt-3\" *ngIf=\"item?.id && tab?.activitySummary\">\n                                <activity-summary [activity]=\"item['organization_data']\"\n                                [item]=\"item\"></activity-summary>\n                              </div>\n                              <div class=\"px-3 pt-3\" *ngIf=\"tab?.auditTrail && item?.id\">\n                                <audit-trail [context]=\"tab['context']\"\n                                [item]=\"item\"></audit-trail>\n                              </div>\n                              <div class=\"px-3 pt-3\" *ngIf=\"tab?.attachments && item?.id\">\n                                <header-attachments [context]=\"tab['context']\"\n                                [item]=\"item\"></header-attachments>\n                              </div>\n                          </div>\n                          <div *ngIf=\"tab.content === 'grid' && i === currIndex && item?.id\">\n                              <dynamic-table title=\"Listing\"\n                                [tabbedItem]=\"item\"\n                                class=\"w-100-p\" [addOrg]=\"true\"\n                                [modelKey]=\"tab?.modelKey\" [cmptParams]=\"tab?.cmptParams\"\n                                [headers]=\"tab?.headers\" [no-card]=\"true\"\n                                [has-action]=\"true\" [store]=\"tab?.gridConf.getStore\"\n                                [dropDownActions]=\"tab?.dropDownActions\"\n                                [topActions]=\"tab?.topActions\" [hasSearch]=\"true\"\n                                [actions]=\"tab?.actions\" [rows]=\"tab.rows\">\n                              </dynamic-table>\n                          </div>\n                          <div *ngIf=\"tab.content === 'attachments' \n                          && i === currIndex && item?.id\">\n                            <attachments-listing [tab]=\"tab\" [item]=\"item\"></attachments-listing>\n                          </div>\n                          <div *ngIf=\"tab.content === 'nested-list' && item?.id \n                          && i == currIndex\">\n                              <nested-list [item]=\"item\"></nested-list>\n                          </div>\n                          <div *ngIf=\"tab.content === 'nested-inline-list' && item?.id\">\n                            <nested-inline-tabbed-list [item]=\"item\" [tab]=\"tab\"></nested-inline-tabbed-list>\n                          </div>\n                        </mat-tab>\n                      </mat-tab-group>\n                </mat-card-content>\n            </mat-card>\n        </div>\n    </div>\n</div>\n\n<!-- Start of extra details -->\n<ng-template #extraDetails>\n    <div class=\"w-100-p pt-3\">\n        <div class=\"px-5 pt-5 pb-3\">\n            <div class=\"card\">\n                <div class=\"card-header pt-3 pb-1 bg-white\">\n                    <div class=\"pl-3 text-muted font-weight-bold\n                    pb-2 d-flex align-items-center\">\n                        <div class=\"pt-2 pr-2\">\n                            <mat-icon>assignment</mat-icon>&nbsp;\n                        </div>\n                        <div>Other Application Details</div>\n                    </div>\n                </div>\n                <div class=\"card-body px-0 pb-3 pt-0\">\n                    <div>\n                        <table class=\"table borderless font-size-14\">\n                            <thead class=\"thead-light\">\n                                <th class=\"pl-20\">\n                                    Type\n                                </th>\n                                <th>\n                                    Organization\n                                </th>\n                                <th>\n                                    Organization Type\n                                </th>\n                                <th>\n                                    Rationalized\n                                </th>\n                                <th>\n                                    Approved\n                                </th>\n                                <th>\n                                    Variance\n                                </th>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td class=\"pl-20\">\n                                        <span class=\"badge badge-secondary px-3 py-2\">\n                                            {{ item?.application_type }}\n                                        </span>\n                                    </td>\n                                    <td>\n                                        {{ item?.organization_data.name }}\n                                    </td>\n                                    <td class=\"font-size-13\">\n                                        {{ item?.organization_data.org_type_code | removeUnderscore }}\n                                    </td>\n                                    <td>\n                                        {{ item?.rationalized_total | currency: 'Kshs ' }}\n                                        <mat-icon *ngIf=\"!item?.rationalized_total\">remove</mat-icon>\n                                    </td>\n                                    <td>\n                                        {{ item?.actual_total | currency: 'Kshs ' }}\n                                        <mat-icon *ngIf=\"!item?.actual_total\">remove</mat-icon>\n                                    </td>\n                                    <td>\n                                        <span *ngIf=\"item?.total\"\n                                        [ngClass]=\"{\n                                            'text-danger': item?.total > item.activity_actual_total,\n                                            'text-success': item?.total < item.activity_actual_total }\">\n                                            {{ (item?.total / item?.activity_actual_total) | number: '1.1-2'}}\n                                            <span>%</span>\n                                        </span>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</ng-template>\n<!-- End of extra details -->\n\n<!-- Start of extra details -->\n<ng-template #totalsSummary>\n    <div class=\"w-100-p pt-3\">\n        <div class=\"px-5 pt-5 pb-0\">\n            <div class=\"card\">\n                <div class=\"card-header pt-3 pb-1 bg-white\">\n                    <div class=\"pl-3 text-muted font-weight-bold\n                    pb-2 d-flex align-items-center\">\n                        <div class=\"pt-2 pr-2\">\n                            <mat-icon>monetization_on</mat-icon>&nbsp;\n                        </div>\n                        <div>Totals Summary</div>\n                    </div>\n                </div>\n                <div class=\"card-body px-0 pb-0 pt-0\">\n                    <div>\n                        <table class=\"table borderless font-size-13\">\n                            <thead class=\"thead-light font-size-12\">\n                                <th class=\"pl-20\">\n                                    Applied Total\n                                </th>\n                                <th>\n                                    Rationalized Total\n                                </th>\n                                <th>\n                                    Approved Total\n                                </th>\n                                \n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td class=\"pl-20\">\n                                        {{ item?.total | currency: 'Kshs ' }}\n                                    </td>\n                                    <td>\n                                        {{ item?.rationalized_total | currency: 'Kshs ' }}\n                                        <mat-icon *ngIf=\"!item?.rationalized_total\">remove</mat-icon>\n                                    </td>\n                                    <td>\n                                        {{ item?.actual_total | currency: 'Kshs ' }}\n                                        <mat-icon *ngIf=\"!item?.actual_total\">remove</mat-icon>\n                                    </td>\n                                    \n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</ng-template>\n<!-- End of extra details -->\n<div id=\"print\">\n    <div class=\"container-fluid\">\n        <div class=\"row no-gutters\">\n          <div class=\"col\">\n            <h1> Assistência Nº 1 </h1>\n          </div>\n        </div>\n      \n        <div class=\"row no-gutters\">\n          <div class=\"col\">\n            <img\n            src=\"../../assets/logotipo.svg\"\n            alt=\"logotipo\"\n            class=\"logotipo\">\n          </div>\n      \n          <div class=\"col\">\n            <h2>N Reparações</h2>\n            <p>91 886 73 76</p>    \n            <div class=\"address\">\n              <p>geral@nreparacoes.com</p>\n              <p>Av. Dr. Ribeiro de Magalhães, 1391</p>\n              <p>Centro Comercial 123, Loja BD</p>\n              <p>4610-108 Felgueiras</p>\n            </div>\n          </div>\n        </div>\n      \n        <div class=\"row no-gutters items-group\">\n          <div class=\"col-3 label\">\n            <p>Cliente:</p>\n            <p>Contacto:</p>\n          </div>\n      \n          <div class=\"col-9\">\n            <p>Manuel Alberto Magalhães Carvalho</p>\n            <p>91 000 00 00</p>\n          </div>\n        </div>\n      \n        <div class=\"row no-gutters items-group\">\n          <div class=\"col-3 label\">\n            <p>Equipamento:</p>\n            <p>Cor:</p>\n            <p>Serial:</p>\n            <p>Problema:</p>\n            <p>Observações:</p>\n          </div>\n      \n          <div class=\"col-9\">\n            <p>Telemóvel > Apple > Iphone 6</p>\n            <p>Cinza</p>\n            <p>appl2015ewfwejuk23423</p>\n            <p>Não arranca</p>\n            <p>codigo: 1798 - tem de ficar pronto até dia 12/02/2019</p>\n          </div>\n        </div>\n      \n        <div class=\"row no-gutters items-group\">\n          <div class=\"col\">\n            <p class=\"label\">Condições Gerais:</p>\n            <ul class=\"disclaimer\">\n              <li>Prazo para levantar 90 dias</li>\n              <li>Garantia 90 dias</li>\n              <li>Esta assistência só é entregue a quem apresentar este documento</li>\n              <li>O preço acresce 10% a cada 30 dias após fim do prazo de levantamento (taxa de conservação)</li>\n              <li>Os dados do cliente, acima mencionados, ficam registados na N Reparações apenas para efeitos de comunicação\n                em relação às suas assistências e facturação\n              </li>\n            </ul>\n          </div>\n        </div>\n      \n        <div class=\"row no-gutters\">\n          <div class=\"col\">\n            <p class=\"disclaimer signature-field\">Declaro que li e concordo com o disposto neste documento em 03/02/2019</p>\n          </div>\n        </div>\n      </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {Observable, Observer} from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { MatDialog } from '@angular/material/dialog';\n\nimport * as _ from 'lodash';\n\nimport { TabbedWrapperService } from '../../services/tabbed-wrapper.service';\nimport { DataLayerService } from '../../../../../app/services/http/dataLayer.service';\nimport { Authorization } from '../../../../../app/services/authorization.service';\nimport { has, get, indexOf } from 'lodash';\n\nimport { MainDialogComponent } from '../main-dialog/main-dialog.component';\nimport { AuthCheckerService } from 'app/services/auth-checkers.service';\n\n@Component({\n    selector: 'tabbed-wrapper',\n    templateUrl: './main-wrapper.component.html',\n    styleUrls: ['./main-wrapper.component.scss'],\n    providers: [DataLayerService, AuthCheckerService],\n})\n\nexport class MainWrapperComponent implements OnInit {\n    user: any;\n    context: string;\n    title: string;\n    subTitle: string;\n    store: string;\n    apiStore: string;\n\n    item: any = {};\n    itemId: string;\n    listRoute: string;\n    configs: any;\n    listParams: any;\n    tabs: any = [];\n    asyncTabs: Observable<[]>;\n    currIndex: number = 0;\n    organization: any;\n    headerConfig: any;\n    cmptParams: any = {};\n    orgType: string;\n\n    constructor(\n        private _router: Router,\n        private _route: ActivatedRoute,\n        private _authConfig: Authorization,\n        private _tabsService: TabbedWrapperService,\n        private _dataLayer: DataLayerService,\n        public _dialog: MatDialog,\n        private _authChecker: AuthCheckerService,\n    ) {}\n\n    goBack() {\n        this._router.navigate([this.listRoute]);\n    }\n\n    openDialog(configs?, action?) {\n        const item = this.item;\n        const dialogRef = this._dialog.open(MainDialogComponent, {\n            data: { item, configs, action },\n            width: '40%',\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            console.log(result);\n            if (result === 'refresh') {\n                this.getItem();\n            }\n        })\n    }\n\n    headerActions: any = {\n        submit: (configs, btnText) => {\n            this.openDialog(configs, btnText);\n        },\n        rationalize: (configs, btnText) => {\n            this.openDialog(configs, btnText);\n        },\n        approve: (configs, btnText) => {\n            this.openDialog(configs, btnText);\n        },\n        reject: (configs, btnText) => {\n            this.openDialog(configs, btnText);\n        }\n    };\n\n    statusChecker(action) {\n        return indexOf(action.activeStates, this.item.status) >= 0;\n    }\n\n    authChecker(action) {\n        if (has(action, 'bpType')) {\n            return this._authChecker.isActionAllowed(\n                action.bpType, action.roles);\n        } else {\n            return true;\n        }\n    }\n\n    setCmptParams() {\n        this.tabs.tabs = this.tabs.tabs.map(tab => {\n            if(has(tab, 'modelKey')) {\n                const listParams = get(tab, 'listParams', {});\n                return { \n                    ...tab, \n                    cmptParams: { \n                        [tab['modelKey']]: this.item['id'],\n                        ...listParams,\n                    } \n                };\n            } else {\n                return tab;\n            }\n        });\n        this.loadTabs(this.tabs.tabs);\n    }\n\n    getItem() {\n        this.item = {};\n        const opts = { current_org_id: this.organization };\n        this._dataLayer.get(this.apiStore, this.itemId, opts)\n        .subscribe(result => {\n            this.item = result;\n            this.setCmptParams();\n        }, err => console.log(err));\n    }\n\n    loadTabs(tabs) {\n        this.asyncTabs = new Observable((observer: Observer<any>) => {\n            setTimeout(() => {\n              observer.next([...tabs]);\n            }, 250);\n        });\n    }\n\n    getNested(str) {\n        return !_.isUndefined(str) && _.isString(str)\n            ? _.get(this.item, str, null) : str;\n    }\n\n    removeUnderscore(str) {\n        return !_.isUndefined(str) && _.isString(str) ? \n                str.replace(/_/g, ' ') : str;\n    }\n\n    getRouteConfigs() {\n        this._route.data.subscribe(data => {\n            this.store = data['store'];\n            this.apiStore = data['endPoint'],\n            this.listRoute = data['listRoute'],\n            this.tabs = this._tabsService.getTabs(this.store);\n            const tabs = this.tabs.tabs;\n            this.headerConfig = { ...this.tabs.headerConfig };\n            this.loadTabs(tabs);\n            this.configs = data['itemConfig'];\n            this.getItem();\n        })\n    }\n\n    setParams() {\n        this._route.queryParams.subscribe(params => {\n            this.itemId = params['id'];\n            this.listParams = { organization: params['id'] },\n            this.getRouteConfigs();\n        })\n    }\n\n    tabSelectChange(event) {\n        this.currIndex = event['index'];\n    }\n\n    printPage() {\n        window.print();\n    }\n\n    downloadSummary() {\n        console.log('Called');\n        // uri /applications/applications/16/summary_report/\n        const idUri = `${this.itemId}/summary_report`;\n        const getParams = { 'current_org_id': this.organization };\n        this._dataLayer.get('applications', idUri, getParams)\n            .subscribe(resp => {\n                console.log(resp);\n                this.printPage();\n            }, err => {\n                console.log(err);\n                // TODO: Remove once fixed\n                this.printPage();\n            });\n    }\n\n    ngOnInit() {\n        this.headerConfig = {};\n        this.user = JSON.parse(this._authConfig.getUser());\n        this.organization = JSON.parse(\n            this._authConfig.getOrganization()).organization;\n        this.orgType = get(JSON.parse(localStorage.getItem('organization')), 'org_type', null);\n        this.setParams();\n    }\n}\n\n"]}