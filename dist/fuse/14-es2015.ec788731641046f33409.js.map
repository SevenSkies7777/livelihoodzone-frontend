{"version":3,"sources":["webpack:///src/app/services/auth-checkers.service.ts","webpack:///src/@fuse/components/page-container/page-container.component.ts","webpack:///src/app/features/billable-items/billable-items-routing.module.ts","webpack:///src/app/features/billable-items/billable-items-list/billable-items-list.component.ts","webpack:///src/app/features/billable-items/billable-items.module.ts"],"names":["AuthCheckerService","_authConfig","allowedOrgTypes","roles","orgType","get","JSON","parse","localStorage","getItem","organization","user","this","getUser","isUndefined","indexOf","currOrg","find","organizations","group_name","isNull","group","PageContainerComponent","routes","path","component","children","redirectTo","pathMatch","BillableItemsList","headers","title","topActions","btnText","status","action","conf","context","store","rows","key","type","actions","icon","disableStatus","modalConf","titleKey","BillableItemsRoutingModule","forChild","BillableItemsModule"],"mappings":"8FACA,0EAKO,Y,MAAMA,EACT,YAAoBC,GAAA,KAAAA,cAIpB,gBAAgBC,EAAiBC,GAC7B,MAAMC,EAAU,SAAAC,IAAA,CAAIC,KAAKC,MAAMC,aAAaC,QAAQ,iBAAkB,YAChEC,EAAe,SAAAL,IAAA,CAAIC,KAAKC,MAAMC,aAAaC,QAAQ,iBAAkB,gBACrEE,EAAOL,KAAKC,MAAMK,KAAKX,YAAYY,WACzC,GAAI,SAAAC,YAAA,CAAYX,GACZ,OAAO,SAAAY,QAAA,CAAQb,EAAiBE,IAAY,EACzC,CACH,MAAMY,EAAU,SAAAC,KAAA,CAAKN,EAAKO,cAAe,CAAER,gBAAgB,MAC3D,OAAS,SAAAK,QAAA,CAAQZ,EAAOa,EAAQG,aAAe,GACxC,SAAAC,OAAA,CAAOJ,EAAQK,SACf,SAAAN,QAAA,CAAQb,EAAiBE,IAAY,I,6CAf3CJ,GAAkB,Y,yBAAlBA,EAAkB,QAAlBA,EAAkB,Y,GAAxB,I,gGCEA,Y,MAAMsB,G,6CAAAA,I,uBAAAA,EAAsB,0EAJpB,yB,kCAIR,I,qLCCP,MAAMC,EAAiB,CACnB,CACIC,KAAM,GACNC,UAAW,IACXC,SAAU,CACN,CAAEF,KAAM,GAAIG,WAAY,OAAQC,UAAW,QAC3C,CAAEJ,KAAM,OAAQC,UCUrB,M,MAAMI,EAvBb,cAwBI,KAAAC,QAAsB,CAClB,CAAEC,MAAO,SACT,CAAEA,MAAO,eACT,CAAEA,MAAO,YAGb,KAAAC,WAAyB,CACrB,CACIC,QAAS,SACTC,OAAQ,UACRC,OAAQ,SACRC,KAAM,CACFC,QAAS,gBACTC,MAAO,iBACPL,QAAS,UAKrB,KAAAM,KAAmB,CACf,CAAEC,IAAK,OAAQC,KAAM,UACrB,CAAED,IAAK,cAAeC,KAAM,WAGhC,KAAAC,QAAqB,CACjB,CACIT,QAAS,OACTC,OAAQ,SACRS,MAAM,EACNC,cAAe,WACfT,OAAQ,SACRU,UAAW,CACPP,MAAO,iBACPQ,SAAU,QACVT,QAAS,iBACTJ,QAAS,W,6CApCZJ,I,uBAAAA,EAAiB,wRAftB,cAAK,wBAAkD,OACvD,gBACI,gBACI,0BAOJ,OACJ,Q,MANQ,kCAAmB,aAAnB,CAAmB,gBAAnB,CAAmB,0BAAnB,CAAmB,eAAnB,CAAmB,oBAAnB,CAAmB,iB,4FAU5B,ODAA,Y,MAAMkB,G,8BAAAA,I,oDAAAA,IAA0B,SAJ1B,CAAC,IAAaC,SAASzB,IACrB,O,GAGR,G,4BEAA,Y,MAAM0B,G,8BAAAA,I,oDAAAA,IAAmB,SAbnB,CACL,IACA,IACA,IACA,IACA,IACA,M,GAOD","file":"x","sourcesContent":["import { Injectable } from '@angular/core';\nimport { find, get, indexOf, isNull, isUndefined } from 'lodash';\n\nimport { Authorization } from './authorization.service';\n\n@Injectable()\nexport class AuthCheckerService {\n    constructor(private _authConfig: Authorization) {\n\n    }\n\n    isActionAllowed(allowedOrgTypes, roles) {\n        const orgType = get(JSON.parse(localStorage.getItem('organization')), 'org_type');\n        const organization = get(JSON.parse(localStorage.getItem('organization')), 'organization');\n        const user = JSON.parse(this._authConfig.getUser());\n        if (isUndefined(roles)) {\n            return indexOf(allowedOrgTypes, orgType) >= 0;\n        } else {\n            const currOrg = find(user.organizations, { organization }, null);\n            return ( indexOf(roles, currOrg.group_name) >= 0 \n                || isNull(currOrg.group)) \n                && indexOf(allowedOrgTypes, orgType) >= 0;\n        }\n    }\n}","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'page-container',\n    template: `<router-outlet></router-outlet>`,\n    styleUrls: ['./page-container.component.scss'],\n})\n\nexport class PageContainerComponent {}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { \n    PageContainerComponent \n} from '@fuse/components/page-container/page-container.component';\nimport {\n    BillableItemsList\n} from './billable-items-list/billable-items-list.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: PageContainerComponent,\n        children: [\n            { path: '', redirectTo: 'list', pathMatch: 'full' },\n            { path: 'list', component: BillableItemsList },\n        ]\n    }\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports : [RouterModule],\n})\n\nexport class BillableItemsRoutingModule {}","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'billable-items-list',\n    styles: [\n        `:host{\n            width: 100%;\n        }`\n    ],\n    template: `\n        <div><page-header title=\"Billable Items\"></page-header></div>\n        <div class=\"w-100-p d-flex px-5\">\n            <div class=\"w-100-p d-flex px-5\">\n                <dynamic-table title=\"Listing\"\n                class=\"w-100-p\"\n                [headers]=\"headers\" [no-card]=\"false\"\n                [has-action]=\"true\" store=\"billable-items\"\n                [topActions]=\"topActions\" [hasSearch]=\"true\"\n                [actions]=\"actions\" [rows]=\"rows\">\n                </dynamic-table>\n            </div>\n        </div>\n    `\n})\n\nexport class BillableItemsList {\n    headers: Array<any> = [\n        { title: 'Title' },\n        { title: 'Description' },\n        { title: 'Actions' }\n    ];\n\n    topActions: Array<any> = [\n        {\n            btnText: 'CREATE',\n            status: 'primary',\n            action: 'inline',\n            conf: {\n                context: 'Billable Item',\n                store: 'billable-items',\n                btnText: 'SAVE',\n            }\n        }\n    ];\n\n    rows: Array<any> = [\n        { key: 'name', type: 'string' },\n        { key: 'description', type: 'string' },\n    ];\n\n    actions:Array<any> = [\n        {\n            btnText: 'EDIT',\n            status: 'accent',\n            icon: false,\n            disableStatus: 'FINISHED',\n            action: 'inline',\n            modalConf: {\n                store: 'billable-items',\n                titleKey: 'title',\n                context: 'Billable Items',\n                btnText: 'SAVE',\n            }\n        },\n        // TODO: Bring  back when working right\n        // {\n        //     btnText: 'DELETE',\n        //     status: 'warn',\n        //     icon: false,\n        //     disableStatus: 'FINISHED',\n        //     customClass: 'btn-danger',\n        //     action: 'inline',\n        //     modalConf: {\n        //         store: 'document-types',\n        //         titleKey: 'title',\n        //         context: 'Document Purpose',\n        //         btnText: 'SAVE',\n        //     }\n        // }\n    ];\n}","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport { HttpModule } from '../../services/http/http.module';\n\nimport { BillableItemsRoutingModule } from './billable-items-routing.module';\nimport { DynamicTableModule } from '../../../@fuse/components/dynamic-table/dynamic-table.module';\nimport { PageHeaderModule } from '../../../@fuse/components/page-header/page-header.module';\n\nimport { BillableItemsList } from './billable-items-list/billable-items-list.component';\n\n@NgModule({\n    imports: [\n        HttpModule,\n        RouterModule,\n        PageHeaderModule,\n        FuseSharedModule,\n        DynamicTableModule,\n        BillableItemsRoutingModule\n    ],\n    declarations: [\n        BillableItemsList\n    ],\n})\n\nexport class BillableItemsModule {}"]}